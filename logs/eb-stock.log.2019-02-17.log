2019-02-17 13:50:53.981 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5468 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 13:50:54.044 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 13:50:54.044 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 13:50:55.214 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 13:50:56.056 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 13:50:56 CST 2019]; root of context hierarchy
2019-02-17 13:51:01.875 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 13:51:01.937 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 13:51:01.953 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 13:51:02.436 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 13:51:02.436 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6380 ms
2019-02-17 13:51:02.686 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 13:51:02.686 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 13:51:02.686 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 13:51:02.686 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 13:51:02.686 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 13:51:02.686 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 13:51:05.338 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 13:50:56 CST 2019]; root of context hierarchy
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 13:51:05.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 13:51:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 13:51:05.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 13:51:05.650 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 13:51:05.666 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 13:51:05.666 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 13:51:05.666 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 13:51:05.790 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 13:51:06.586 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 13:51:06.960 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 13:51:07.038 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 13:51:07.070 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 13:51:07.085 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 13:51:07.350 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 13:51:07.350 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 15.194 seconds (JVM running for 23.166)
2019-02-17 13:51:20.501 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 13:51:20.501 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 13:51:20.529 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-02-17 13:51:20.586 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/
2019-02-17 13:51:22.053 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-17 13:51:22.053 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 13:51:22.375 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 13:51:22.390 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 13:51:22.405 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 13:51:22.600 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 13:51:27.339 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 13:51:29.042 [http-nio-80-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 13:51:29.064 [http-nio-80-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-02-17 13:51:29.144 [http-nio-80-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-02-17 13:51:30.562 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/
2019-02-17 13:51:31.707 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 13:51:34.884 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 13:51:34.889 [http-nio-80-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 13:51:34.889 [http-nio-80-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 13:51:34.893 [http-nio-80-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 13:51:34.903 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 13:51:35.568 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 13:51:35.620 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 13:51:35.675 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 13:51:40.933 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 13:51:40.984 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/WdatePicker.js
2019-02-17 13:51:40.987 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/excel/external/FileSaver.js
2019-02-17 13:51:40.992 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/excel/external/jszip.min.js
2019-02-17 13:51:40.994 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/excel/scripts/excel-gen.js
2019-02-17 13:51:40.997 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/excel/scripts/demo.page.js
2019-02-17 13:51:41.002 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/Chart.js
2019-02-17 13:51:41.200 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/WdatePicker.css
2019-02-17 13:51:44.335 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 13:51:44.342 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt where pt.trade_date BETWEEN '2019-01-01' and '2019-12-31' group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 13:51:44.342 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 
2019-02-17 13:51:44.396 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 13:51:46.904 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-02-17 13:51:46.941 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-02-17 13:55:14.737 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 13:55:14.828 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 13:55:14.831 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 13:55:14.827 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 13:55:14.835 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 13:55:15.007 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-02-17 13:55:15.053 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 13:55:15.066 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-02-17 13:55:20.621 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 13:55:20.880 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-02-17 13:55:20.888 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-02-17 13:55:22.879 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 13:55:22.881 [http-nio-80-exec-3] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt where pt.trade_date BETWEEN '2019-01-01' and '2019-12-31' group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 13:55:22.882 [http-nio-80-exec-3] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 
2019-02-17 13:55:22.885 [http-nio-80-exec-3] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 13:55:28.458 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 13:55:28.477 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt where pt.trade_date BETWEEN '2019-01-01' and '2019-12-31' group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 13:55:28.478 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 
2019-02-17 13:55:28.491 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 13:57:40.456 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 13:57:40.545 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 13:57:40.545 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-02-17(String), 2019-02-17(String)
2019-02-17 13:57:40.561 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 0
2019-02-17 13:57:42.780 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 13:57:42.782 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 13:57:42.783 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-02-17(String), 2019-02-17(String)
2019-02-17 13:57:42.785 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 0
2019-02-17 13:57:44.411 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/lang/zh-cn.js
2019-02-17 13:57:44.416 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/calendar.js
2019-02-17 13:57:44.418 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/datepicker.css
2019-02-17 13:57:44.518 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/img.gif
2019-02-17 13:57:48.762 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 13:57:48.762 [http-nio-80-exec-7] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 13:57:48.780 [http-nio-80-exec-7] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-01-01(String), 2019-02-17(String)
2019-02-17 13:57:48.785 [http-nio-80-exec-7] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 2
2019-02-17 13:57:53.306 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 13:57:59.722 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 13:57:59.724 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt where pt.trade_date BETWEEN '2019-01-01' and '2019-12-31' group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 13:57:59.725 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 
2019-02-17 13:57:59.727 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 13:59:38.522 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 13:59:38.527 [http-nio-80-exec-2] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt where pt.trade_date BETWEEN '2019-01-01' and '2019-12-31' group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 13:59:38.529 [http-nio-80-exec-2] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 
2019-02-17 13:59:38.542 [http-nio-80-exec-2] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 13:59:40.066 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 13:59:40.072 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt where pt.trade_date BETWEEN '2019-01-01' and '2019-12-31' group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 13:59:40.073 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 
2019-02-17 13:59:40.075 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:08:12.893 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5792 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 14:08:12.899 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 14:08:12.900 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 14:08:13.178 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 14:08:13.307 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:08:13 CST 2019]; root of context hierarchy
2019-02-17 14:08:15.028 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 14:08:15.038 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 14:08:15.039 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 14:08:15.147 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 14:08:15.147 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1841 ms
2019-02-17 14:08:15.318 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 14:08:15.319 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 14:08:15.319 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 14:08:15.319 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 14:08:15.320 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 14:08:15.320 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 14:08:16.220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:08:13 CST 2019]; root of context hierarchy
2019-02-17 14:08:16.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:08:16.281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 14:08:16.281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 14:08:16.281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 14:08:16.281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:08:16.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 14:08:16.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 14:08:16.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 14:08:16.283 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 14:08:16.283 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 14:08:16.284 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 14:08:16.284 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 14:08:16.284 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 14:08:16.287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 14:08:16.287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 14:08:16.287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 14:08:16.287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 14:08:16.288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 14:08:16.288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 14:08:16.288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.289 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:08:16.289 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 14:08:16.289 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:08:16.290 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:08:16.290 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:08:16.290 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:08:16.291 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:08:16.291 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 14:08:16.291 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.292 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 14:08:16.292 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:08:16.292 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:08:16.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 14:08:16.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 14:08:16.295 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.295 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 14:08:16.297 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.298 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:08:16.299 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 14:08:16.299 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 14:08:16.299 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:08:16.300 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.301 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:08:16.302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 14:08:16.302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.303 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.304 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 14:08:16.305 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:08:16.305 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 14:08:16.305 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 14:08:16.306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 14:08:16.306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 14:08:16.306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:08:16.307 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 14:08:16.307 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 14:08:16.310 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 14:08:16.310 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:08:16.341 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 14:08:16.350 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:08:16.350 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:08:16.350 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:08:16.395 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:08:16.708 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 14:08:16.938 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 14:08:16.958 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 14:08:16.969 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 14:08:16.983 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 14:08:17.185 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 14:08:17.189 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.896 seconds (JVM running for 6.041)
2019-02-17 14:08:22.046 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 14:08:22.047 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 14:08:22.067 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-02-17 14:08:22.077 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:08:26.217 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 14:08:26.540 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 14:08:26.562 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 14:08:26.573 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 14:08:26.584 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:08:29.394 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:08:42.719 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:08:42.766 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,count(pt.trade_del) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:08:42.767 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:08:42.774 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:11:50.828 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4460 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 14:11:50.833 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 14:11:50.833 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 14:11:51.141 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 14:11:51.434 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:11:51 CST 2019]; root of context hierarchy
2019-02-17 14:11:53.153 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 14:11:53.164 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 14:11:53.165 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 14:11:53.303 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 14:11:53.304 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1870 ms
2019-02-17 14:11:53.476 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 14:11:53.477 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 14:11:53.477 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 14:11:53.478 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 14:11:53.478 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 14:11:53.478 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 14:11:54.307 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:11:51 CST 2019]; root of context hierarchy
2019-02-17 14:11:54.362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 14:11:54.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 14:11:54.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 14:11:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:11:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 14:11:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 14:11:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 14:11:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:11:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 14:11:54.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 14:11:54.366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 14:11:54.366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 14:11:54.366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 14:11:54.372 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 14:11:54.372 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 14:11:54.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 14:11:54.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 14:11:54.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 14:11:54.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 14:11:54.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:11:54.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:11:54.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:11:54.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:11:54.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:11:54.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 14:11:54.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:11:54.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 14:11:54.377 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.378 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 14:11:54.378 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:11:54.378 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 14:11:54.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:11:54.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 14:11:54.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 14:11:54.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:11:54.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 14:11:54.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 14:11:54.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:11:54.382 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:11:54.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 14:11:54.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 14:11:54.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:11:54.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 14:11:54.385 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 14:11:54.385 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 14:11:54.385 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 14:11:54.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:11:54.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 14:11:54.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 14:11:54.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 14:11:54.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:11:54.421 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 14:11:54.433 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:11:54.434 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:11:54.434 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:11:54.475 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:11:54.799 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 14:11:55.016 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 14:11:55.036 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 14:11:55.047 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 14:11:55.206 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 14:11:55.223 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 14:11:55.230 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.892 seconds (JVM running for 6.175)
2019-02-17 14:12:04.175 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 14:12:04.175 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 14:12:04.196 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-02-17 14:12:04.207 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 14:12:04.514 [http-nio-80-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 14:12:04.536 [http-nio-80-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), 111(String)
2019-02-17 14:12:04.546 [http-nio-80-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-02-17 14:12:05.863 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/
2019-02-17 14:12:12.067 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 14:12:12.080 [http-nio-80-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 14:12:12.080 [http-nio-80-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 14:12:12.084 [http-nio-80-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 14:12:12.093 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:12:14.768 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:12:24.068 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:12:24.111 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:12:24.111 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:12:24.117 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:12:41.159 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:12:41.185 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? and p.prod_name like ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:12:41.187 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String), %香水%(String)
2019-02-17 14:12:41.188 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 1
2019-02-17 14:12:44.286 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:12:44.290 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? and p.prod_name like ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:12:44.292 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String), %香水%(String)
2019-02-17 14:12:44.295 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 1
2019-02-17 14:24:28.353 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4744 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 14:24:28.357 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 14:24:28.357 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 14:24:28.566 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 14:24:28.727 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:24:28 CST 2019]; root of context hierarchy
2019-02-17 14:24:30.547 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 14:24:30.557 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 14:24:30.558 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 14:24:30.671 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 14:24:30.671 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1944 ms
2019-02-17 14:24:30.893 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 14:24:30.894 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 14:24:30.895 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 14:24:30.895 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 14:24:30.895 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 14:24:30.895 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 14:24:31.874 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:24:28 CST 2019]; root of context hierarchy
2019-02-17 14:24:31.929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:24:31.930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 14:24:31.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 14:24:31.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 14:24:31.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:24:31.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 14:24:31.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 14:24:31.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 14:24:31.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 14:24:31.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 14:24:31.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 14:24:31.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 14:24:31.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 14:24:31.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 14:24:31.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 14:24:31.939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 14:24:31.939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 14:24:31.939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 14:24:31.940 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 14:24:31.940 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:24:31.941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 14:24:31.941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:24:31.941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:24:31.942 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:24:31.942 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:24:31.943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:24:31.943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 14:24:31.943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 14:24:31.944 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:24:31.944 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 14:24:31.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:24:31.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 14:24:31.946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 14:24:31.947 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.948 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:24:31.948 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 14:24:31.949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 14:24:31.949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:24:31.949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:24:31.950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 14:24:31.950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.951 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 14:24:31.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:24:31.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 14:24:31.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 14:24:31.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 14:24:31.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 14:24:31.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:24:31.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 14:24:31.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 14:24:31.957 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 14:24:31.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:24:31.987 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 14:24:31.999 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:24:31.999 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:24:31.999 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:24:32.053 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:24:32.386 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 14:24:32.638 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 14:24:32.660 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 14:24:32.671 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 14:24:32.840 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 14:24:32.863 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 14:24:32.868 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.977 seconds (JVM running for 6.122)
2019-02-17 14:24:37.763 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 14:24:37.764 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 14:24:37.784 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-02-17 14:24:37.794 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:24:45.885 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 14:24:46.207 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 14:24:46.227 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 14:24:46.238 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 14:24:46.250 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:24:48.774 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:24:51.685 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:24:51.736 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:24:51.737 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-02-17(String), 2019-02-17(String)
2019-02-17 14:24:51.739 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 0
2019-02-17 14:25:02.179 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:25:02.185 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:25:02.188 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:25:02.193 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:25:23.213 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:25:32.617 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:25:32.631 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:25:32.633 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:25:32.635 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:26:26.265 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-02-17 14:26:26.312 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-02-17 14:27:24.250 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:27:32.798 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:27:32.809 [http-nio-80-exec-4] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:27:32.812 [http-nio-80-exec-4] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:27:32.814 [http-nio-80-exec-4] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:27:43.906 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6548 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 14:27:43.912 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 14:27:43.913 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 14:27:44.257 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 14:27:44.479 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sun Feb 17 14:27:44 CST 2019]; root of context hierarchy
2019-02-17 14:27:46.514 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 14:27:46.525 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 14:27:46.527 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 14:27:46.652 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 14:27:46.652 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2173 ms
2019-02-17 14:27:46.876 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 14:27:46.877 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 14:27:46.878 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 14:27:46.878 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 14:27:46.878 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 14:27:46.878 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 14:27:48.168 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sun Feb 17 14:27:44 CST 2019]; root of context hierarchy
2019-02-17 14:27:48.253 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:27:48.254 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 14:27:48.255 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 14:27:48.255 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 14:27:48.255 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:27:48.255 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 14:27:48.256 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 14:27:48.256 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 14:27:48.256 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 14:27:48.257 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 14:27:48.257 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 14:27:48.258 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 14:27:48.258 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 14:27:48.261 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 14:27:48.261 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 14:27:48.261 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 14:27:48.262 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 14:27:48.262 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 14:27:48.267 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 14:27:48.269 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.271 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:27:48.272 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 14:27:48.273 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:27:48.274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:27:48.275 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:27:48.276 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:27:48.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:27:48.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 14:27:48.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 14:27:48.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:27:48.283 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 14:27:48.288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:27:48.289 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 14:27:48.290 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.290 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 14:27:48.293 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.293 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:27:48.293 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 14:27:48.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 14:27:48.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:27:48.294 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.296 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 14:27:48.296 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:27:48.296 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.297 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.297 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 14:27:48.298 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 14:27:48.298 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:27:48.298 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 14:27:48.299 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 14:27:48.300 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 14:27:48.300 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 14:27:48.300 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:27:48.301 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 14:27:48.306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 14:27:48.307 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:27:48.369 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 14:27:48.398 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:27:48.398 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:27:48.398 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:27:48.490 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:27:48.932 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 14:27:49.402 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 14:27:49.427 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 14:27:49.608 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 14:27:49.629 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 14:27:49.664 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 14:27:49.671 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 6.089 seconds (JVM running for 9.042)
2019-02-17 14:27:52.711 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 14:27:52.711 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 14:27:52.737 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019-02-17 14:27:52.751 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:27:57.350 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 14:27:57.725 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 14:27:57.747 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 14:27:57.761 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 14:27:57.774 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:28:00.463 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:28:09.035 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:28:09.089 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:28:09.090 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:28:09.095 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:32:58.080 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3956 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 14:32:58.085 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 14:32:58.085 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 14:32:58.327 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 14:32:58.484 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:32:58 CST 2019]; root of context hierarchy
2019-02-17 14:33:00.348 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 14:33:00.360 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 14:33:00.361 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 14:33:00.550 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 14:33:00.551 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2071 ms
2019-02-17 14:33:00.727 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 14:33:00.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 14:33:00.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 14:33:00.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 14:33:00.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 14:33:00.728 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 14:33:01.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 14:32:58 CST 2019]; root of context hierarchy
2019-02-17 14:33:01.704 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 14:33:01.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 14:33:01.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 14:33:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:33:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 14:33:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 14:33:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 14:33:01.707 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:33:01.707 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 14:33:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 14:33:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 14:33:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 14:33:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 14:33:01.711 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 14:33:01.711 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 14:33:01.712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 14:33:01.712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 14:33:01.712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 14:33:01.713 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 14:33:01.713 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:33:01.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:33:01.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:33:01.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 14:33:01.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:33:01.715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 14:33:01.715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:33:01.716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 14:33:01.716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 14:33:01.717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:33:01.717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.718 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.718 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 14:33:01.718 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 14:33:01.718 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:33:01.718 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.719 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 14:33:01.719 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 14:33:01.720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 14:33:01.720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 14:33:01.720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 14:33:01.720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.721 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.721 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.721 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 14:33:01.722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 14:33:01.722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 14:33:01.723 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 14:33:01.723 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:33:01.723 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 14:33:01.724 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 14:33:01.724 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 14:33:01.724 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 14:33:01.725 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 14:33:01.725 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 14:33:01.728 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 14:33:01.729 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 14:33:01.759 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 14:33:01.767 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:33:01.768 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:33:01.768 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:33:01.806 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 14:33:02.098 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 14:33:02.354 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 14:33:02.374 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 14:33:02.385 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 14:33:02.547 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 14:33:02.566 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 14:33:02.571 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.946 seconds (JVM running for 6.156)
2019-02-17 14:33:05.904 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 14:33:05.904 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 14:33:05.924 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-17 14:33:05.935 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:33:10.222 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 14:33:10.533 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 14:33:10.556 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 14:33:10.568 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 14:33:10.578 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:33:13.343 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:33:19.955 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:33:19.996 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:33:19.997 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:33:20.004 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:33:49.199 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-02-17 14:33:49.259 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-02-17 14:34:27.463 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:34:27.470 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:34:27.472 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:34:27.475 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:34:30.178 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:34:33.040 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:34:33.048 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:34:33.051 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-02-17(String), 2019-02-17(String)
2019-02-17 14:34:33.053 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 0
2019-02-17 14:34:42.780 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:34:42.794 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:34:42.797 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:34:42.803 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:35:35.323 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 14:35:35.409 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 14:35:35.411 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 14:35:35.425 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 14:35:35.427 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 14:35:35.506 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 14:35:35.568 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 14:35:37.705 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 14:35:50.668 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 14:35:50.671 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 14:35:50.672 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 14:35:50.677 [http-nio-80-exec-10] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 14:35:59.878 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 15:33:25.867 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-17 15:33:30.819 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 15:33:30.823 [http-nio-80-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 15:33:30.823 [http-nio-80-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 15:33:30.826 [http-nio-80-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 15:33:30.837 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 15:33:32.689 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 15:33:32.737 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 15:33:32.737 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 15:33:32.744 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 15:33:32.751 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 15:33:32.786 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 15:33:32.814 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 15:33:35.250 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 15:33:35.259 [http-nio-80-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 15:33:35.259 [http-nio-80-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 15:33:35.282 [http-nio-80-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 15:33:35.291 [http-nio-80-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 15:33:35.292 [http-nio-80-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 15:33:35.294 [http-nio-80-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 15:33:35.295 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 15:33:35.295 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 15:33:35.296 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 15:33:35.297 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 15:33:35.297 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 15:33:35.298 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 15:33:35.298 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 15:33:35.298 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 15:33:35.299 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 15:33:35.300 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 15:33:35.300 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 15:33:35.301 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 15:33:35.302 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 15:33:35.302 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 15:33:35.303 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 15:33:42.003 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 15:33:42.005 [http-nio-80-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-17 15:33:42.006 [http-nio-80-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 15:33:42.046 [http-nio-80-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 15:33:45.391 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 15:33:45.395 [http-nio-80-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-17 15:33:45.396 [http-nio-80-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 15:33:45.399 [http-nio-80-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 15:33:50.810 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 15:33:50.812 [http-nio-80-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-17 15:33:50.812 [http-nio-80-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 15:33:50.816 [http-nio-80-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 15:33:54.283 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 15:33:54.285 [http-nio-80-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-17 15:33:54.285 [http-nio-80-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 15:33:54.289 [http-nio-80-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 15:34:04.427 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-17 15:34:04.429 [http-nio-80-exec-6] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-17 15:34:04.435 [http-nio-80-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-17 15:34:04.436 [http-nio-80-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-17 15:34:04.436 [http-nio-80-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-17 15:34:04.439 [http-nio-80-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-17 15:34:04.440 [http-nio-80-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 15:34:04.442 [http-nio-80-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-17 15:34:04.444 [http-nio-80-exec-6] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-17 15:34:09.136 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-02-17 15:34:09.207 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.validate.min.js
2019-02-17 15:34:09.216 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.message_cn.js
2019-02-17 15:34:11.873 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 15:34:11.874 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-17 15:34:11.875 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 15:34:11.877 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 15:45:38.387 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4728 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 15:45:38.392 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 15:45:38.393 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 15:45:38.789 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 15:45:39.000 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 15:45:38 CST 2019]; root of context hierarchy
2019-02-17 15:45:40.818 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 15:45:40.834 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 15:45:40.835 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 15:45:40.978 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 15:45:40.978 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1979 ms
2019-02-17 15:45:41.158 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 15:45:41.159 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 15:45:41.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 15:45:41.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 15:45:41.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 15:45:41.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 15:45:41.692 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.report.dao.ProductReceCurrDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 15:45:41.698 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
2019-02-17 15:45:41.702 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-02-17 15:45:41.809 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-17 15:45:41.819 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 15:46:14.478 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6140 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 15:46:14.483 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 15:46:14.483 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 15:46:15.232 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 15:46:15 CST 2019]; root of context hierarchy
2019-02-17 15:46:15.363 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 15:46:16.978 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 15:46:16.988 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 15:46:16.989 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 15:46:17.101 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 15:46:17.101 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1869 ms
2019-02-17 15:46:17.278 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 15:46:17.279 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 15:46:17.279 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 15:46:17.280 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 15:46:17.280 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 15:46:17.280 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 15:46:17.750 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.report.dao.ProductReceCurrDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 15:46:17.753 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
2019-02-17 15:46:17.756 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-02-17 15:46:17.793 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-17 15:46:17.800 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 826; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 15:47:38.674 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5408 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 15:47:38.678 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 15:47:38.679 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 15:47:39.073 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 15:47:39 CST 2019]; root of context hierarchy
2019-02-17 15:47:39.132 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 15:47:40.882 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 15:47:40.892 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 15:47:40.893 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 15:47:41.004 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 15:47:41.005 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1933 ms
2019-02-17 15:47:41.163 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 15:47:41.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 15:47:41.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 15:47:41.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 15:47:41.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 15:47:41.164 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 15:47:41.645 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.report.dao.ProductReceCurrDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 15:47:41.649 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
2019-02-17 15:47:41.652 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-02-17 15:47:41.672 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-17 15:47:41.679 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 829; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 16:17:09.678 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2888 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 16:17:09.682 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 16:17:09.683 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 16:17:10.228 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 16:17:10 CST 2019]; root of context hierarchy
2019-02-17 16:17:10.255 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 16:17:11.898 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 16:17:11.908 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 16:17:11.909 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 16:17:12.017 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 16:17:12.017 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1789 ms
2019-02-17 16:17:12.191 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 16:17:12.192 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 16:17:12.192 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 16:17:12.192 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 16:17:12.193 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 16:17:12.193 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 16:17:12.708 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.report.dao.ProductReceCurrDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 16:17:12.713 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
2019-02-17 16:17:12.715 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-02-17 16:17:12.734 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-17 16:17:12.740 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 16:18:58.161 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5708 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 16:18:58.165 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 16:18:58.165 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 16:18:58.598 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 16:18:58.677 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 16:18:58 CST 2019]; root of context hierarchy
2019-02-17 16:19:00.470 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 16:19:00.480 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 16:19:00.481 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 16:19:00.588 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 16:19:00.588 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1912 ms
2019-02-17 16:19:00.767 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 16:19:00.768 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 16:19:00.768 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 16:19:00.768 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 16:19:00.769 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 16:19:00.769 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 16:19:01.271 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.report.dao.ProductReceCurrDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 16:19:01.279 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
2019-02-17 16:19:01.282 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-02-17 16:19:01.321 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-02-17 16:19:01.327 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportController': Unsatisfied dependency expressed through field 'productStockReportService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockReportService': Unsatisfied dependency expressed through field 'productReceCurrDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceCurrDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\report\dao\ProductReceCurrDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 830; The content of elements must consist of well-formed character data or markup.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: The content of elements must consist of well-formed character data or markup.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-02-17 16:20:11.277 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6344 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 16:20:11.281 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 16:20:11.282 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 16:20:11.533 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 16:20:11.693 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 16:20:11 CST 2019]; root of context hierarchy
2019-02-17 16:20:13.259 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 16:20:13.271 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 16:20:13.272 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 16:20:13.392 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 16:20:13.392 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1699 ms
2019-02-17 16:20:13.588 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 16:20:13.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 16:20:13.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 16:20:13.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 16:20:13.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 16:20:13.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 16:20:14.424 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 16:20:11 CST 2019]; root of context hierarchy
2019-02-17 16:20:14.480 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 16:20:14.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 16:20:14.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 16:20:14.482 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 16:20:14.482 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 16:20:14.482 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 16:20:14.482 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 16:20:14.483 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 16:20:14.483 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 16:20:14.484 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 16:20:14.484 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 16:20:14.484 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 16:20:14.485 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 16:20:14.487 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 16:20:14.488 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 16:20:14.488 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 16:20:14.488 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 16:20:14.488 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 16:20:14.489 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 16:20:14.489 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.490 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:20:14.490 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 16:20:14.490 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:20:14.490 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:20:14.491 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:20:14.491 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 16:20:14.492 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:20:14.492 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 16:20:14.492 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.493 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 16:20:14.493 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 16:20:14.493 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 16:20:14.494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 16:20:14.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 16:20:14.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 16:20:14.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:20:14.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 16:20:14.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 16:20:14.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 16:20:14.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 16:20:14.498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 16:20:14.498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.499 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.499 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 16:20:14.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 16:20:14.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 16:20:14.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 16:20:14.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 16:20:14.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 16:20:14.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:20:14.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 16:20:14.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 16:20:14.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 16:20:14.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 16:20:14.531 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 16:20:14.540 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:20:14.540 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:20:14.540 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:20:14.579 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:20:14.937 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 16:20:15.159 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 16:20:15.179 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 16:20:15.190 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 16:20:15.365 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 16:20:15.390 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 16:20:15.396 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.697 seconds (JVM running for 5.921)
2019-02-17 16:20:35.100 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 16:20:35.100 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 16:20:35.120 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-17 16:20:35.130 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:20:40.725 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 16:20:41.052 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 16:20:41.072 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 16:20:41.083 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 16:20:41.095 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:20:44.112 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-17 16:20:49.731 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:20:49.766 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 
2019-02-17 16:20:49.767 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 16:20:49.775 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 16:20:53.781 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:20:53.786 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 
2019-02-17 16:20:53.787 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 16:20:53.793 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 16:22:48.508 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:22:48.561 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 16:22:48.561 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 16:22:48.566 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 16:22:48.576 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 16:22:48.608 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 16:22:48.630 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 16:22:51.699 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:22:51.704 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 
2019-02-17 16:22:51.706 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 16:22:51.715 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 16:22:55.311 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:22:55.315 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 and (ps.prod_rece_num+ps.prod_curr_num)> ? 
2019-02-17 16:22:55.316 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 4(String)
2019-02-17 16:22:55.320 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 5
2019-02-17 16:23:34.060 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6660 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-17 16:23:34.077 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-17 16:23:34.078 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-17 16:23:34.708 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-17 16:23:34.752 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 16:23:34 CST 2019]; root of context hierarchy
2019-02-17 16:23:36.835 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 80 (http)
2019-02-17 16:23:36.845 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-17 16:23:36.846 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-17 16:23:36.952 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-17 16:23:36.952 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2200 ms
2019-02-17 16:23:37.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-17 16:23:37.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-17 16:23:37.114 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-17 16:23:37.116 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-17 16:23:37.116 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-17 16:23:37.116 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-17 16:23:38.020 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sun Feb 17 16:23:34 CST 2019]; root of context hierarchy
2019-02-17 16:23:38.082 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-17 16:23:38.083 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-17 16:23:38.083 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-17 16:23:38.083 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 16:23:38.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-17 16:23:38.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-17 16:23:38.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-17 16:23:38.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-17 16:23:38.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-17 16:23:38.085 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-17 16:23:38.086 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-17 16:23:38.086 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-17 16:23:38.086 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-17 16:23:38.089 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-17 16:23:38.090 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-17 16:23:38.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-17 16:23:38.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-17 16:23:38.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-17 16:23:38.092 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-17 16:23:38.093 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:23:38.093 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:23:38.094 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:23:38.094 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalcQuery]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalcQuery(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-17 16:23:38.094 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleTop]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleTop(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:23:38.094 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSaleCalc]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productSaleCalc()
2019-02-17 16:23:38.095 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:23:38.096 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-17 16:23:38.096 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.096 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-17 16:23:38.096 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 16:23:38.096 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.098 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.098 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-17 16:23:38.098 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-17 16:23:38.099 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.099 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 16:23:38.099 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-17 16:23:38.101 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-17 16:23:38.101 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-17 16:23:38.101 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-17 16:23:38.101 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.102 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.102 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-17 16:23:38.102 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.103 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.103 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-17 16:23:38.104 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-17 16:23:38.105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-17 16:23:38.105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBakList]}" onto public java.lang.String com.yun.user.controller.SysBakController.sysBakList(org.springframework.ui.Model)
2019-02-17 16:23:38.105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/sysBak]}" onto public void com.yun.user.controller.SysBakController.sysBak(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 16:23:38.106 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteBakFile]}" onto public java.lang.String com.yun.user.controller.SysBakController.deleteBakFile(java.lang.String)
2019-02-17 16:23:38.106 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-17 16:23:38.106 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-17 16:23:38.107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-17 16:23:38.107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-17 16:23:38.107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-17 16:23:38.110 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-17 16:23:38.111 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-17 16:23:38.139 [main] WARN  o.s.w.servlet.resource.ResourceHttpRequestHandler - Locations list is empty. No resources will be served unless a custom ResourceResolver is configured as an alternative to PathResourceResolver.
2019-02-17 16:23:38.149 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/dbbak] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:23:38.150 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:23:38.150 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:23:38.195 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-17 16:23:38.541 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-17 16:23:38.768 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-17 16:23:38.787 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-80"]
2019-02-17 16:23:38.798 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-80"]
2019-02-17 16:23:38.967 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-17 16:23:38.993 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 80 (http)
2019-02-17 16:23:39.000 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.412 seconds (JVM running for 6.604)
2019-02-17 16:23:40.943 [http-nio-80-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-17 16:23:40.943 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-17 16:23:40.964 [http-nio-80-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-02-17 16:23:40.977 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:23:45.134 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-17 16:23:45.468 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-17 16:23:45.489 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-02-17 16:23:45.500 [http-nio-80-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-17 16:23:45.509 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:23:47.897 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:23:47.935 [http-nio-80-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 
2019-02-17 16:23:47.936 [http-nio-80-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 16:23:47.947 [http-nio-80-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 16:23:51.277 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:23:51.286 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 and (ps.prod_rece_num+ps.prod_curr_num)< ? 
2019-02-17 16:23:51.290 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 5(String)
2019-02-17 16:23:51.294 [http-nio-80-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 2
2019-02-17 16:24:06.026 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:24:06.032 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 and (ps.prod_rece_num+ps.prod_curr_num)< ? 
2019-02-17 16:24:06.033 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 1(String)
2019-02-17 16:24:06.036 [http-nio-80-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 1
2019-02-17 16:24:11.224 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:24:11.289 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 16:24:11.294 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 16:24:11.298 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 16:24:11.302 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 16:24:11.341 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 16:24:11.362 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 16:25:40.022 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-17 16:25:44.528 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:25:44.534 [http-nio-80-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 
2019-02-17 16:25:44.535 [http-nio-80-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 16:25:44.546 [http-nio-80-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 16:31:22.990 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:31:23.041 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 16:31:23.041 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 16:31:23.044 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 16:31:23.047 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 16:31:23.076 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 16:31:23.100 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 16:31:26.199 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalc
2019-02-17 16:31:27.693 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 16:31:27.719 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 16:31:27.720 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-02-17(String), 2019-02-17(String)
2019-02-17 16:31:27.726 [http-nio-80-exec-9] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 0
2019-02-17 16:31:36.289 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleCalcQuery
2019-02-17 16:31:36.300 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==>  Preparing: select DATE_FORMAT(pt.trade_date,'%Y-%m-%d') trade_date,sum(ifnull(pt.trade_del,0)) sale_num from product_trade pt,product p,product_parameter pp where pt.prod_id=p.prod_id and pt.prod_param_id=pp.prod_param_id and pt.trade_date BETWEEN ? and ? group by DATE_FORMAT(pt.trade_date,'%Y-%m-%d') 
2019-02-17 16:31:36.304 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - ==> Parameters: 2019-01-01(String), 2019-02-28(String)
2019-02-17 16:31:36.311 [http-nio-80-exec-8] DEBUG c.y.r.dao.ProductSaleDao.findProductSaleBarChart - <==      Total: 4
2019-02-17 16:31:42.883 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 16:31:42.890 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 16:31:42.892 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-02-17(String), 2019-02-17(String)
2019-02-17 16:31:42.895 [http-nio-80-exec-1] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 0
2019-02-17 16:31:47.895 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 16:31:47.903 [http-nio-80-exec-3] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 16:31:47.904 [http-nio-80-exec-3] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-02-01(String), 2019-02-17(String)
2019-02-17 16:31:47.906 [http-nio-80-exec-3] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 1
2019-02-17 16:31:50.808 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 16:31:50.820 [http-nio-80-exec-2] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? and p.prod_name like ? and pp.prod_param_name like ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 16:31:50.821 [http-nio-80-exec-2] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-02-01(String), 2019-02-17(String), %aa%(String), %aa%(String)
2019-02-17 16:31:50.823 [http-nio-80-exec-2] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 0
2019-02-17 16:31:53.749 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productSaleTop
2019-02-17 16:31:53.755 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==>  Preparing: select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name,sum(pt.trade_del) saleNum from product p,product_parameter pp,product_trade pt where p.prod_id=pt.prod_id and pp.prod_param_id=pt.prod_param_id and pt.trade_date BETWEEN ? and ? and p.prod_name like ? and pp.prod_param_name like ? group by p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name ORDER BY saleNum desc 
2019-02-17 16:31:53.756 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - ==> Parameters: 2019-02-01(String), 2019-02-17(String), %aa%(String), %sdf%(String)
2019-02-17 16:31:53.757 [http-nio-80-exec-5] DEBUG c.y.r.dao.ProductReceCurrDao.findProductSaleTotal - <==      Total: 0
2019-02-17 16:32:06.018 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:32:06.068 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 16:32:06.068 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 16:32:06.069 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 16:32:06.069 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 16:32:06.098 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 16:32:06.125 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 16:32:22.771 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:32:22.779 [http-nio-80-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 
2019-02-17 16:32:22.780 [http-nio-80-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-17 16:32:22.791 [http-nio-80-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-17 16:32:26.110 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-17 16:32:26.117 [http-nio-80-exec-2] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select ps.*,ps.prod_rece_num+ps.prod_curr_num stockNum from( select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t)ps where 1=1 and (ps.prod_rece_num+ps.prod_curr_num)< ? 
2019-02-17 16:32:26.120 [http-nio-80-exec-2] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 5(String)
2019-02-17 16:32:26.124 [http-nio-80-exec-2] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 2
2019-02-17 16:32:33.866 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:32:33.895 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:32:33.895 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:32:33.898 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:32:33.903 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:32:33.903 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:32:33.907 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:32:33.908 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:33.909 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:32:33.912 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:33.913 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:33.913 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:32:33.914 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:33.915 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:33.915 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:32:33.917 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:32:33.917 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:33.917 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:32:33.919 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:32:33.920 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:33.920 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:32:33.922 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:38.338 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productPreAdd
2019-02-17 16:32:38.398 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap-treeview.css
2019-02-17 16:32:38.407 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap-treeview.js
2019-02-17 16:32:41.525 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:32:41.528 [http-nio-80-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:32:41.528 [http-nio-80-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:32:41.529 [http-nio-80-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:32:41.535 [http-nio-80-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:32:41.537 [http-nio-80-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:32:41.541 [http-nio-80-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:32:41.542 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:41.543 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:32:41.544 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:41.544 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:41.544 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:32:41.545 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:41.545 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:41.546 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:32:41.548 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:32:41.549 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:41.551 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:32:41.553 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:32:41.554 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:41.555 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:32:41.557 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:43.910 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:32:43.918 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:43.918 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:32:43.923 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:50.694 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:32:50.701 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:50.702 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:32:50.707 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:32:55.437 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:32:55.444 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:32:55.444 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:32:55.447 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:33:17.747 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-02-17 16:33:17.750 [http-nio-80-exec-5] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-02-17 16:33:17.814 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/jquery.treetable.theme.default.css
2019-02-17 16:33:17.817 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.treetable.js
2019-02-17 16:33:17.817 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/jquery.treetable.css
2019-02-17 16:33:17.882 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-02-17 16:33:17.885 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-17 16:33:17.886 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-02-17 16:33:17.924 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-17 16:33:17.925 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-02-17 16:33:17.926 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-17 16:33:17.926 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-02-17 16:33:17.927 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-17 16:33:17.927 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-17 16:33:17.927 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-17 16:33:17.928 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-02-17 16:33:17.929 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-17 16:33:17.930 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-02-17 16:33:17.931 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-17 16:33:17.931 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-17 16:33:17.931 [http-nio-80-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-02-17 16:33:54.938 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:33:54.945 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:33:54.946 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:33:54.949 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:33:54.956 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:33:54.956 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:33:54.958 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:33:54.959 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:33:54.960 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:33:54.962 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:33:54.963 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:33:54.963 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:33:54.964 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:33:54.965 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:33:54.966 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:33:54.967 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:33:54.967 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:33:54.968 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:33:54.969 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:33:54.969 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:33:54.970 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:33:54.971 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:33:55.794 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:33:55.799 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:33:55.800 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:33:55.802 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:33:57.046 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:34:03.809 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:34:03.817 [http-nio-80-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:34:03.818 [http-nio-80-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:34:03.821 [http-nio-80-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:34:03.828 [http-nio-80-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:34:03.830 [http-nio-80-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:34:03.836 [http-nio-80-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:34:03.836 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:34:03.837 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:34:03.839 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:34:03.839 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:34:03.840 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:34:03.841 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:34:03.841 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:34:03.842 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:34:03.844 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:34:03.844 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:34:03.845 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:34:03.846 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:34:03.847 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:34:03.847 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:34:03.848 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:34:05.114 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:34:05.118 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:34:05.120 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:34:05.122 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:34:07.461 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:37:36.233 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:37:36.236 [http-nio-80-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:37:36.236 [http-nio-80-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:37:36.240 [http-nio-80-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:37:36.244 [http-nio-80-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:37:36.245 [http-nio-80-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:37:36.249 [http-nio-80-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:37:36.250 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:37:36.250 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:37:36.252 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:37:36.253 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:37:36.253 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:37:36.254 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:37:36.255 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:37:36.255 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:37:36.259 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:37:36.259 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:37:36.260 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:37:36.263 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:37:36.264 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:37:36.264 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:37:36.266 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:37:38.475 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:37:38.479 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:37:38.479 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:37:38.481 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:37:39.680 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:38:08.651 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:38:08.658 [http-nio-80-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:38:08.659 [http-nio-80-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:38:08.662 [http-nio-80-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:38:08.665 [http-nio-80-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:38:08.666 [http-nio-80-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:38:08.668 [http-nio-80-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:38:08.669 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:38:08.669 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:38:08.671 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:38:08.672 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:38:08.672 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:38:08.673 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:38:08.674 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:38:08.674 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:38:08.676 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:38:08.676 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:38:08.676 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:38:08.678 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:38:08.679 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:38:08.679 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:38:08.680 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:38:09.883 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:38:09.887 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:38:09.888 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:38:09.890 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:38:11.511 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:39:01.456 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:39:01.461 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:39:01.462 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:39:01.463 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:39:01.467 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:39:01.468 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:39:01.470 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:39:01.471 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:01.471 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:39:01.473 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:01.474 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:01.474 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:39:01.476 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:01.476 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:01.477 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:39:01.478 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:39:01.479 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:01.479 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:39:01.480 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:39:01.480 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:01.480 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:39:01.481 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:02.833 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:39:02.837 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:02.839 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:39:02.842 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:04.066 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:39:24.495 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:39:24.503 [http-nio-80-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:39:24.504 [http-nio-80-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:39:24.505 [http-nio-80-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:39:24.509 [http-nio-80-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:39:24.511 [http-nio-80-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:39:24.514 [http-nio-80-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:39:24.515 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:24.515 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:39:24.517 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:24.517 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:24.518 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:39:24.520 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:24.521 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:24.521 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:39:24.523 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:39:24.523 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:24.524 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:39:24.525 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:39:24.527 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:24.527 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:39:24.528 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:25.706 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:39:25.710 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:25.711 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:39:25.713 [http-nio-80-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:26.891 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:39:43.688 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:39:43.690 [http-nio-80-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:39:43.691 [http-nio-80-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:39:43.692 [http-nio-80-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:39:43.698 [http-nio-80-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:39:43.699 [http-nio-80-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:39:43.701 [http-nio-80-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:39:43.701 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:43.702 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:39:43.703 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:43.703 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:43.703 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:39:43.704 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:43.704 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:43.705 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:39:43.706 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:39:43.706 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:43.706 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:39:43.707 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:39:43.707 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:43.707 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:39:43.708 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:45.061 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:39:45.063 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:39:45.063 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:39:45.064 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:39:46.451 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:40:24.439 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-17 16:40:24.503 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-17 16:40:24.504 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-17 16:40:24.504 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-17 16:40:24.507 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-17 16:40:24.534 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-17 16:40:24.561 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-17 16:40:26.550 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:40:26.566 [http-nio-80-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:40:26.567 [http-nio-80-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:40:26.571 [http-nio-80-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:40:26.576 [http-nio-80-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:40:26.576 [http-nio-80-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:40:26.578 [http-nio-80-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:40:26.578 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:26.578 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:40:26.579 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:26.579 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:26.580 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:40:26.581 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:26.581 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:26.581 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:40:26.582 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:40:26.582 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:26.582 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:40:26.583 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:40:26.584 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:26.584 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:40:26.585 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:27.705 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:40:27.710 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:27.710 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:40:27.712 [http-nio-80-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:28.897 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:40:51.754 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:40:51.756 [http-nio-80-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:40:51.757 [http-nio-80-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:40:51.758 [http-nio-80-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:40:51.760 [http-nio-80-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:40:51.761 [http-nio-80-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:40:51.763 [http-nio-80-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:40:51.763 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:51.763 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:40:51.765 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:51.765 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:51.766 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:40:51.767 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:51.767 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:51.768 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:40:51.769 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:40:51.769 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:51.769 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:40:51.770 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:40:51.771 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:51.771 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:40:51.772 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:52.726 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:40:52.729 [http-nio-80-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:40:52.730 [http-nio-80-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:40:52.732 [http-nio-80-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:40:53.946 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:41:06.698 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:41:06.705 [http-nio-80-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:41:06.706 [http-nio-80-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:41:06.708 [http-nio-80-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:41:06.713 [http-nio-80-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:41:06.714 [http-nio-80-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:41:06.716 [http-nio-80-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:41:06.717 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:06.717 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:41:06.719 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:06.720 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:06.720 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:41:06.721 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:06.722 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:06.723 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:41:06.724 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:41:06.724 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:06.724 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:41:06.725 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:41:06.726 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:06.726 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:41:06.727 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:07.821 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:41:07.823 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:07.823 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:41:07.824 [http-nio-80-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:11.487 [http-nio-80-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:41:23.590 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:41:23.592 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:41:23.592 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:41:23.593 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:41:23.596 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:41:23.596 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:41:23.597 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:41:23.597 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:23.598 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:41:23.598 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:23.599 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:23.599 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:41:23.600 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:23.600 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:23.600 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:41:23.601 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:41:23.602 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:23.602 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:41:23.602 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:41:23.603 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:23.603 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:41:23.604 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:24.742 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:41:24.744 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:24.744 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:41:24.745 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:25.699 [http-nio-80-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:41:40.546 [http-nio-80-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:41:40.550 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:41:40.550 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:41:40.551 [http-nio-80-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:41:40.556 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:41:40.557 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:41:40.559 [http-nio-80-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:41:40.559 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:40.560 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:41:40.561 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:40.562 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:40.562 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:41:40.563 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:40.564 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:40.565 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:41:40.567 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:41:40.568 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:40.568 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:41:40.570 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:41:40.571 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:40.572 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:41:40.573 [http-nio-80-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:41.779 [http-nio-80-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:41:41.782 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:41:41.783 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:41:41.784 [http-nio-80-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:41:43.001 [http-nio-80-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:44:22.936 [http-nio-80-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:44:22.943 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:44:22.943 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:44:22.945 [http-nio-80-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:44:22.950 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:44:22.950 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:44:22.952 [http-nio-80-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:44:22.952 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:44:22.952 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:44:22.953 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:44:22.954 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:44:22.954 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:44:22.955 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:44:22.956 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:44:22.957 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:44:22.959 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:44:22.960 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:44:22.960 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:44:22.961 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:44:22.962 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:44:22.962 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:44:22.963 [http-nio-80-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:44:23.934 [http-nio-80-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:44:23.936 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:44:23.937 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:44:23.938 [http-nio-80-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:44:24.931 [http-nio-80-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamPreAdd
2019-02-17 16:45:00.991 [http-nio-80-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-17 16:45:00.993 [http-nio-80-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-17 16:45:00.994 [http-nio-80-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-17 16:45:00.996 [http-nio-80-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-17 16:45:00.999 [http-nio-80-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-17 16:45:00.999 [http-nio-80-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-17 16:45:01.001 [http-nio-80-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-17 16:45:01.002 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:45:01.003 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:45:01.005 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:45:01.005 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:45:01.006 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-17 16:45:01.007 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:45:01.007 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:45:01.007 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-17 16:45:01.012 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:45:01.013 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:45:01.013 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-17 16:45:01.015 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-17 16:45:01.017 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:45:01.017 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-17 16:45:01.021 [http-nio-80-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-17 16:45:02.389 [http-nio-80-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-17 16:45:02.392 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-17 16:45:02.392 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-17 16:45:02.394 [http-nio-80-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
