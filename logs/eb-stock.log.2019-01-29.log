2019-01-29 08:13:52.665 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2208 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 08:13:52.743 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 08:13:52.743 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 08:13:54.318 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 08:13:55.192 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 08:13:55 CST 2019]; root of context hierarchy
2019-01-29 08:14:02.196 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 08:14:02.259 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 08:14:02.274 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 08:14:02.852 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 08:14:02.852 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7660 ms
2019-01-29 08:14:03.148 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 08:14:03.148 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 08:14:03.148 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 08:14:03.148 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 08:14:03.148 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 08:14:04.973 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.stock.dao.ProductReceiveTradeDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.parseParameterMapping(SqlSourceBuilder.java:132)
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.buildParameterMapping(SqlSourceBuilder.java:72)
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.handleToken(SqlSourceBuilder.java:67)
	at org.apache.ibatis.parsing.GenericTokenParser.parse(GenericTokenParser.java:78)
	at org.apache.ibatis.builder.SqlSourceBuilder.parse(SqlSourceBuilder.java:45)
	at org.apache.ibatis.scripting.defaults.RawSqlSource.<init>(RawSqlSource.java:46)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:60)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 19
	at java.lang.String.charAt(String.java:646)
	at org.apache.ibatis.builder.ParameterExpression.trimmedStr(ParameterExpression.java:131)
	at org.apache.ibatis.builder.ParameterExpression.option(ParameterExpression.java:124)
	at org.apache.ibatis.builder.ParameterExpression.jdbcTypeOpt(ParameterExpression.java:99)
	at org.apache.ibatis.builder.ParameterExpression.property(ParameterExpression.java:70)
	at org.apache.ibatis.builder.ParameterExpression.parse(ParameterExpression.java:47)
	at org.apache.ibatis.builder.ParameterExpression.<init>(ParameterExpression.java:39)
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.parseParameterMapping(SqlSourceBuilder.java:128)
	... 58 common frames omitted
2019-01-29 08:14:05.004 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productReceiveTradeController': Unsatisfied dependency expressed through field 'productReceiveTradeService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productReceiveTradeService': Unsatisfied dependency expressed through field 'productReceiveTradeDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceiveTradeDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductReceiveTradeDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
2019-01-29 08:14:05.004 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-01-29 08:14:05.067 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-01-29 08:14:05.067 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productReceiveTradeController': Unsatisfied dependency expressed through field 'productReceiveTradeService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productReceiveTradeService': Unsatisfied dependency expressed through field 'productReceiveTradeDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceiveTradeDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductReceiveTradeDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productReceiveTradeService': Unsatisfied dependency expressed through field 'productReceiveTradeDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceiveTradeDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductReceiveTradeDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productReceiveTradeDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductReceiveTradeDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Parsing error was found in mapping #{tradeAdd),#{endNum}.  Check syntax #{property|(expression), var1=value1, var2=value2, ...} 
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.parseParameterMapping(SqlSourceBuilder.java:132)
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.buildParameterMapping(SqlSourceBuilder.java:72)
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.handleToken(SqlSourceBuilder.java:67)
	at org.apache.ibatis.parsing.GenericTokenParser.parse(GenericTokenParser.java:78)
	at org.apache.ibatis.builder.SqlSourceBuilder.parse(SqlSourceBuilder.java:45)
	at org.apache.ibatis.scripting.defaults.RawSqlSource.<init>(RawSqlSource.java:46)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:60)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: 19
	at java.lang.String.charAt(String.java:646)
	at org.apache.ibatis.builder.ParameterExpression.trimmedStr(ParameterExpression.java:131)
	at org.apache.ibatis.builder.ParameterExpression.option(ParameterExpression.java:124)
	at org.apache.ibatis.builder.ParameterExpression.jdbcTypeOpt(ParameterExpression.java:99)
	at org.apache.ibatis.builder.ParameterExpression.property(ParameterExpression.java:70)
	at org.apache.ibatis.builder.ParameterExpression.parse(ParameterExpression.java:47)
	at org.apache.ibatis.builder.ParameterExpression.<init>(ParameterExpression.java:39)
	at org.apache.ibatis.builder.SqlSourceBuilder$ParameterMappingTokenHandler.parseParameterMapping(SqlSourceBuilder.java:128)
	... 58 common frames omitted
2019-01-29 08:18:50.625 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2756 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 08:18:50.625 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 08:18:50.625 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 08:18:51.000 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 08:18:51.140 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 08:18:51 CST 2019]; root of context hierarchy
2019-01-29 08:18:52.622 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 08:18:52.622 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 08:18:52.622 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 08:18:52.731 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 08:18:52.731 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1591 ms
2019-01-29 08:18:52.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 08:18:52.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 08:18:52.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 08:18:52.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 08:18:52.872 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 08:18:53.823 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 08:18:51 CST 2019]; root of context hierarchy
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 08:18:54.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 08:18:54.026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 08:18:54.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 08:18:54.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 08:18:54.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 08:18:54.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 08:18:54.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 08:18:54.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 08:18:54.057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 08:18:54.057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 08:18:54.135 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 08:18:54.135 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 08:18:54.244 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 08:18:55.009 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 08:18:55.368 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 08:18:55.446 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 08:18:55.477 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 08:18:55.492 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 08:18:55.539 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 08:18:55.695 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.631 seconds (JVM running for 6.918)
2019-01-29 08:19:32.594 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 08:19:32.595 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 08:19:32.629 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2019-01-29 08:19:40.163 [http-nio-8080-exec-5] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 08:19:40.197 [http-nio-8080-exec-5] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 08:19:40.284 [http-nio-8080-exec-5] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 08:19:45.991 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 08:19:45.991 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 08:19:46.053 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 08:19:46.069 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:19:46.069 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 08:19:46.069 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 08:19:46.069 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:19:46.069 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 08:19:46.085 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 08:19:49.334 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:19:49.335 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:19:49.337 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:19:53.760 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:5
2019-01-29 08:19:53.764 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:19:53.765 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:19:53.769 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:19:53.790 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 08:19:53.792 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 5(Integer)
2019-01-29 08:19:53.855 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 08:21:00.713 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 08:21:00.714 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 08:21:00.717 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 08:21:00.717 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:21:00.718 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 08:21:00.720 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 08:21:00.720 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:21:00.720 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 08:21:00.726 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 08:21:00.726 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:21:00.726 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:21:00.730 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:21:00.731 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:21:00.731 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 08:21:00.732 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 08:21:04.705 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:21:04.706 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:21:04.708 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:21:08.280 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 08:21:08.286 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:21:08.292 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:21:08.303 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:21:08.309 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 08:21:08.310 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 08:21:08.312 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 08:21:12.396 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=null, beginNum=0, tradeAdd=2, tradeDel=null, endNum=2, oper=null)
2019-01-29 08:21:12.404 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_stock(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?),?) 
2019-01-29 08:21:12.421 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userInfo' in 'class com.yun.stock.model.ProductReceiveTrade'
2019-01-29 08:22:26.032 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 08:22:26.034 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 08:22:26.038 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 08:22:26.040 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:22:26.040 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 08:22:26.042 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 08:22:26.044 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:22:26.044 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 08:22:26.045 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 08:22:26.046 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:22:26.049 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:22:26.052 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:22:26.053 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:22:26.054 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 08:22:26.055 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 08:22:29.377 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:22:29.378 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:22:29.379 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:22:31.549 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 08:22:31.552 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 08:22:31.553 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 08:22:31.555 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 08:22:31.561 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 08:22:31.561 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 08:22:31.564 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 08:22:33.969 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=null, beginNum=0, tradeAdd=2, tradeDel=null, endNum=2, oper=null)
2019-01-29 08:22:33.971 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_stock(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?),?) 
2019-01-29 08:22:33.974 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userInfo' in 'class com.yun.stock.model.ProductReceiveTrade'
2019-01-29 08:22:46.489 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2396 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 08:22:46.493 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 08:22:46.493 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 08:22:46.998 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 08:22:46 CST 2019]; root of context hierarchy
2019-01-29 08:22:47.077 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 08:22:48.755 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 08:22:48.765 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 08:22:48.767 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 08:22:48.902 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 08:22:48.902 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1904 ms
2019-01-29 08:22:49.041 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 08:22:49.045 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 08:22:49.046 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 08:22:49.046 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 08:22:49.046 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 08:22:49.836 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 08:22:46 CST 2019]; root of context hierarchy
2019-01-29 08:22:49.890 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 08:22:49.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 08:22:49.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 08:22:49.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 08:22:49.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 08:22:49.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 08:22:49.892 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 08:22:49.892 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 08:22:49.892 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 08:22:49.893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 08:22:49.894 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 08:22:49.894 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 08:22:49.895 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 08:22:49.898 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 08:22:49.898 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 08:22:49.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 08:22:49.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 08:22:49.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 08:22:49.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 08:22:49.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 08:22:49.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 08:22:49.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 08:22:49.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 08:22:49.903 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 08:22:49.903 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 08:22:49.903 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 08:22:49.904 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 08:22:49.904 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 08:22:49.905 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 08:22:49.906 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 08:22:49.906 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 08:22:49.907 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 08:22:49.907 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 08:22:49.907 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 08:22:49.908 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 08:22:49.908 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 08:22:49.909 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 08:22:49.910 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 08:22:49.910 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 08:22:49.910 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 08:22:49.911 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 08:22:49.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 08:22:49.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 08:22:49.946 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 08:22:49.946 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 08:22:49.985 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 08:22:50.294 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 08:22:50.526 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 08:22:50.547 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 08:22:50.557 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 08:22:50.571 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 08:22:50.587 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 08:22:50.722 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.613 seconds (JVM running for 5.83)
2019-01-29 09:02:55.395 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 09:02:55.396 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 09:02:55.421 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-01-29 09:03:00.131 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 09:03:00.150 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 09:03:00.168 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 09:03:00.170 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:03:00.170 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 09:03:00.172 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:03:00.173 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:03:00.173 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 09:03:00.174 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:03:00.175 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:03:00.175 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:03:00.176 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:03:00.177 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:03:00.177 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 09:03:00.178 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 09:03:04.329 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:03:04.330 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:03:04.334 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:03:07.243 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:03:07.246 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:03:07.247 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:03:07.251 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:03:07.270 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:03:07.271 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:03:07.280 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 09:03:08.581 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=null, beginNum=0, tradeAdd=null, tradeDel=null, endNum=0, oper=null)
2019-01-29 09:03:08.585 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_stock(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?),?) 
2019-01-29 09:03:08.588 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 4(Integer), null, 0(Integer), 0(Integer), 0(Integer), null
2019-01-29 09:03:08.646 [http-nio-8080-exec-3] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-01-29 09:03:08.789 [http-nio-8080-exec-3] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2019-01-29 09:03:08.798 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null)' at line 1
### The error may involve com.yun.stock.dao.ProductReceiveTradeDao.insertProductReceiveTrade-Inline
### The error occurred while setting parameters
### SQL: insert into product_receive_stock(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?),?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null)' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null)' at line 1
2019-01-29 09:04:31.636 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4208 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 09:04:31.641 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 09:04:31.641 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 09:04:31.819 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 09:04:32.014 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:04:32 CST 2019]; root of context hierarchy
2019-01-29 09:04:33.645 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 09:04:33.655 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 09:04:33.657 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 09:04:33.760 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 09:04:33.761 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1746 ms
2019-01-29 09:04:33.896 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 09:04:33.901 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 09:04:33.902 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 09:04:33.902 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 09:04:33.902 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 09:04:34.741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:04:32 CST 2019]; root of context hierarchy
2019-01-29 09:04:34.797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 09:04:34.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 09:04:34.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 09:04:34.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 09:04:34.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:04:34.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 09:04:34.799 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 09:04:34.799 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 09:04:34.799 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 09:04:34.800 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 09:04:34.801 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 09:04:34.801 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 09:04:34.802 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 09:04:34.804 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 09:04:34.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 09:04:34.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 09:04:34.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 09:04:34.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 09:04:34.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 09:04:34.806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:04:34.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:04:34.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 09:04:34.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:04:34.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 09:04:34.809 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:04:34.809 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:04:34.810 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 09:04:34.811 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:04:34.811 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 09:04:34.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:04:34.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 09:04:34.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 09:04:34.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 09:04:34.813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:04:34.813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 09:04:34.813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 09:04:34.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 09:04:34.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 09:04:34.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 09:04:34.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 09:04:34.815 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 09:04:34.817 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 09:04:34.818 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 09:04:34.849 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:04:34.849 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:04:34.889 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:04:35.216 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 09:04:35.463 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 09:04:35.484 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 09:04:35.496 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 09:04:35.510 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 09:04:35.572 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 09:04:35.578 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.432 seconds (JVM running for 5.642)
2019-01-29 09:04:40.168 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 09:04:40.168 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 09:04:40.190 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2019-01-29 09:04:44.451 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 09:04:44.469 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 09:04:44.487 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 09:04:44.489 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:04:44.489 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 09:04:44.491 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:04:44.492 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:04:44.492 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 09:04:44.493 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:04:44.494 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:04:44.494 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:04:44.495 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:04:44.496 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:04:44.496 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 09:04:44.497 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 09:04:48.318 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:04:48.319 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:04:48.321 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:04:50.986 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:04:50.988 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:04:50.990 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:04:50.993 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:04:51.005 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:04:51.006 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:04:51.011 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 09:04:53.095 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=null, beginNum=0, tradeAdd=3, tradeDel=null, endNum=3, oper=null)
2019-01-29 09:04:53.099 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?),?) 
2019-01-29 09:04:53.102 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 4(Integer), null, 0(Integer), 3(Integer), 3(Integer), null
2019-01-29 09:04:53.120 [http-nio-8080-exec-6] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-01-29 09:04:53.191 [http-nio-8080-exec-6] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2019-01-29 09:04:53.197 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null)' at line 1
### The error may involve com.yun.stock.dao.ProductReceiveTradeDao.insertProductReceiveTrade-Inline
### The error occurred while setting parameters
### SQL: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?),?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null)' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null)' at line 1
2019-01-29 09:05:30.133 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4036 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 09:05:30.138 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 09:05:30.139 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 09:05:30.289 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 09:05:30.567 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:05:30 CST 2019]; root of context hierarchy
2019-01-29 09:05:32.070 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 09:05:32.080 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 09:05:32.081 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 09:05:32.188 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 09:05:32.188 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1621 ms
2019-01-29 09:05:32.336 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 09:05:32.342 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 09:05:32.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 09:05:32.344 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 09:05:32.344 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 09:05:33.164 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:05:30 CST 2019]; root of context hierarchy
2019-01-29 09:05:33.223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 09:05:33.223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 09:05:33.224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 09:05:33.224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 09:05:33.224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:05:33.224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 09:05:33.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 09:05:33.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 09:05:33.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 09:05:33.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 09:05:33.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 09:05:33.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 09:05:33.227 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 09:05:33.230 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 09:05:33.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 09:05:33.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 09:05:33.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 09:05:33.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 09:05:33.232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 09:05:33.232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:05:33.233 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:05:33.233 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 09:05:33.233 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:05:33.234 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 09:05:33.234 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:05:33.234 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:05:33.235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 09:05:33.235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:05:33.235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 09:05:33.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 09:05:33.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 09:05:33.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:05:33.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 09:05:33.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:05:33.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 09:05:33.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 09:05:33.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 09:05:33.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 09:05:33.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 09:05:33.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 09:05:33.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 09:05:33.242 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 09:05:33.242 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 09:05:33.276 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:05:33.276 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:05:33.318 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:05:33.613 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 09:05:33.858 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 09:05:33.878 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 09:05:33.891 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 09:05:33.905 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 09:05:33.923 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 09:05:33.928 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.469 seconds (JVM running for 5.746)
2019-01-29 09:05:38.355 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 09:05:38.355 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 09:05:38.371 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2019-01-29 09:05:42.325 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 09:05:42.343 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 09:05:42.361 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 09:05:42.363 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:05:42.363 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 09:05:42.366 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:05:42.366 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:05:42.367 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 09:05:42.368 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:05:42.368 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:05:42.369 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:05:42.370 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:05:42.370 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:05:42.371 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 09:05:42.372 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 09:05:45.294 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:05:45.294 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:05:45.296 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:05:48.112 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:05:48.113 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:05:48.114 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:05:48.117 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:05:48.136 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:05:48.138 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:05:48.144 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 09:05:50.474 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=null, beginNum=0, tradeAdd=2, tradeDel=null, endNum=2, oper=null)
2019-01-29 09:05:50.481 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 09:05:50.483 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 4(Integer), null, 0(Integer), 2(Integer), 2(Integer), null
2019-01-29 09:05:50.549 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 09:07:25.314 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4192 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 09:07:25.318 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 09:07:25.319 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 09:07:25.599 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 09:07:25.815 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16b2bb0c: startup date [Tue Jan 29 09:07:25 CST 2019]; root of context hierarchy
2019-01-29 09:07:28.005 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 09:07:28.018 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 09:07:28.019 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 09:07:28.136 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 09:07:28.137 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2323 ms
2019-01-29 09:07:28.335 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 09:07:28.342 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 09:07:28.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 09:07:28.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 09:07:28.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 09:07:29.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@16b2bb0c: startup date [Tue Jan 29 09:07:25 CST 2019]; root of context hierarchy
2019-01-29 09:07:29.587 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 09:07:29.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 09:07:29.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 09:07:29.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 09:07:29.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 09:07:29.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 09:07:29.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 09:07:29.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:07:29.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 09:07:29.590 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 09:07:29.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 09:07:29.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 09:07:29.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 09:07:29.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 09:07:29.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 09:07:29.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:07:29.597 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 09:07:29.597 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 09:07:29.597 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 09:07:29.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 09:07:29.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:07:29.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 09:07:29.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:07:29.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 09:07:29.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:07:29.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:07:29.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 09:07:29.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:07:29.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 09:07:29.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 09:07:29.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 09:07:29.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:07:29.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 09:07:29.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 09:07:29.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:07:29.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 09:07:29.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 09:07:29.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 09:07:29.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 09:07:29.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 09:07:29.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 09:07:29.609 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 09:07:29.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 09:07:29.659 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:07:29.660 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:07:29.733 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:07:30.158 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 09:07:30.639 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 09:07:30.664 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 09:07:30.678 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 09:07:30.853 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 09:07:30.880 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 09:07:30.889 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.879 seconds (JVM running for 9.098)
2019-01-29 09:07:39.741 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 09:07:39.741 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 09:07:39.766 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-01-29 09:07:40.144 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 09:07:40.164 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 09:07:40.184 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 09:07:40.186 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:07:40.187 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 09:07:40.189 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:07:40.189 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:07:40.189 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 09:07:40.190 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:07:40.191 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:07:40.191 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:07:40.193 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:07:40.193 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:07:40.193 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 09:07:40.194 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 09:07:43.062 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:07:43.063 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:07:43.065 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:07:46.677 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:07:46.681 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:07:46.683 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:07:46.685 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:07:46.704 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:07:46.706 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:07:46.713 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 09:07:49.952 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=null, beginNum=0, tradeAdd=2, tradeDel=null, endNum=2, oper=null)
2019-01-29 09:08:57.100 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 09:08:57.104 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 4(Integer), null, 0(Integer), 2(Integer), 2(Integer), null
2019-01-29 09:09:03.393 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1344 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 09:09:03.399 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 09:09:03.400 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 09:09:03.983 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:09:03 CST 2019]; root of context hierarchy
2019-01-29 09:09:04.004 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 09:09:05.769 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 09:09:05.781 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 09:09:05.782 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 09:09:05.907 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 09:09:05.907 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1924 ms
2019-01-29 09:09:06.065 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 09:09:06.069 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 09:09:06.070 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 09:09:06.070 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 09:09:06.071 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 09:09:06.866 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:09:03 CST 2019]; root of context hierarchy
2019-01-29 09:09:06.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 09:09:06.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 09:09:06.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 09:09:06.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 09:09:06.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:09:06.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 09:09:06.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 09:09:06.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 09:09:06.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 09:09:06.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 09:09:06.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 09:09:06.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 09:09:06.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 09:09:06.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 09:09:06.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 09:09:06.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 09:09:06.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 09:09:06.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 09:09:06.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 09:09:06.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:09:06.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:09:06.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 09:09:06.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:09:06.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 09:09:06.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:09:06.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:09:06.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 09:09:06.935 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:09:06.935 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 09:09:06.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:09:06.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 09:09:06.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 09:09:06.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 09:09:06.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:09:06.937 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 09:09:06.937 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 09:09:06.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 09:09:06.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 09:09:06.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 09:09:06.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 09:09:06.938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 09:09:06.941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 09:09:06.941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 09:09:06.973 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:09:06.973 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:09:07.012 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:09:07.304 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 09:09:07.550 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 09:09:07.573 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 09:09:07.583 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 09:09:07.596 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 09:09:07.760 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 09:09:07.765 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.949 seconds (JVM running for 6.596)
2019-01-29 09:09:20.419 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 09:09:20.419 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 09:09:20.439 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-29 09:09:25.176 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 09:09:25.195 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 09:09:25.214 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 09:09:25.215 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:09:25.216 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 09:09:25.218 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:09:25.219 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:09:25.219 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 09:09:25.220 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:09:25.221 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:09:25.221 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:09:25.223 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:09:25.224 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:09:25.224 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 09:09:25.225 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 09:09:28.012 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:09:28.013 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:09:28.016 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:09:31.452 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:09:31.461 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:09:31.462 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:09:31.465 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:09:31.487 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select count(*) from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:09:31.489 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:09:31.496 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 1
2019-01-29 09:09:34.823 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录productReceiveTrade：ProductReceiveTrade(prodReceTradeId=null, tradeDate=Tue Jan 29 00:00:00 CST 2019, product=Product(prodId=4, prodName=null, prodNo=null, productType=null, prodState=null, productParameterList=null), productParameter=ProductParameter(prodParamId=6, prodParamName=null, prodId=null), beginNum=0, tradeAdd=2, tradeDel=null, endNum=2, oper=null)
2019-01-29 09:09:34.829 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 09:09:34.830 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 4(Integer), 6(Integer), 0(Integer), 2(Integer), 2(Integer), null
2019-01-29 09:09:34.859 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 09:15:02.953 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2212 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 09:15:02.958 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 09:15:02.958 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 09:15:03.656 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 09:15:03.765 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:15:03 CST 2019]; root of context hierarchy
2019-01-29 09:15:05.433 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 09:15:05.446 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 09:15:05.447 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 09:15:05.562 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 09:15:05.562 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1797 ms
2019-01-29 09:15:05.703 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 09:15:05.708 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 09:15:05.709 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 09:15:05.709 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 09:15:05.709 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 09:15:06.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 09:15:03 CST 2019]; root of context hierarchy
2019-01-29 09:15:06.592 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 09:15:06.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 09:15:06.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 09:15:06.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 09:15:06.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:15:06.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 09:15:06.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 09:15:06.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 09:15:06.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 09:15:06.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 09:15:06.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 09:15:06.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 09:15:06.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 09:15:06.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 09:15:06.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 09:15:06.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 09:15:06.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 09:15:06.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 09:15:06.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 09:15:06.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:15:06.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:15:06.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 09:15:06.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:15:06.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 09:15:06.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:15:06.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 09:15:06.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockStartNum]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(java.lang.Integer,java.lang.Integer) throws com.fasterxml.jackson.core.JsonProcessingException
2019-01-29 09:15:06.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 09:15:06.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 09:15:06.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 09:15:06.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 09:15:06.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 09:15:06.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 09:15:06.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 09:15:06.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 09:15:06.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 09:15:06.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 09:15:06.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 09:15:06.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 09:15:06.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 09:15:06.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 09:15:06.609 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 09:15:06.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 09:15:06.643 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:15:06.643 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:15:06.681 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 09:15:06.970 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 09:15:07.232 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 09:15:07.253 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 09:15:07.264 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 09:15:07.276 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 09:15:07.294 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 09:15:07.425 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.841 seconds (JVM running for 5.983)
2019-01-29 09:15:12.151 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 09:15:12.151 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 09:15:12.172 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-01-29 09:15:17.645 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 09:15:17.663 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 09:15:17.681 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 09:15:17.683 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:17.683 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 09:15:17.684 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:15:17.685 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:17.685 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 09:15:17.686 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 09:15:17.687 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:17.688 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:15:17.689 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:15:17.690 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:17.690 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 09:15:17.691 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 09:15:20.153 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:20.154 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:15:20.156 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:15:22.202 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:15:22.206 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:22.207 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:15:22.211 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:15:22.228 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:15:22.229 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:15:22.230 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 0
2019-01-29 09:15:22.369 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy82.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductReceiveStockByProdIdAndProdParamId(ProductStockService.java:77)
	at com.yun.stock.service.ProductStockService$$FastClassBySpringCGLIB$$58f084d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.stock.service.ProductStockService$$EnhancerBySpringCGLIB$$df011f63.findProductReceiveStockByProdIdAndProdParamId(<generated>)
	at com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(ProductReceiveStockController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 09:15:35.914 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:15:35.927 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:35.929 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:15:35.930 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:15:35.934 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:15:35.934 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:15:35.936 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 0
2019-01-29 09:15:35.942 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy82.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductReceiveStockByProdIdAndProdParamId(ProductStockService.java:77)
	at com.yun.stock.service.ProductStockService$$FastClassBySpringCGLIB$$58f084d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.stock.service.ProductStockService$$EnhancerBySpringCGLIB$$df011f63.findProductReceiveStockByProdIdAndProdParamId(<generated>)
	at com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(ProductReceiveStockController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 09:15:55.383 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:15:55.390 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:15:55.391 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:15:55.396 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:15:55.403 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:15:55.404 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:15:55.407 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 0
2019-01-29 09:15:55.411 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy82.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductReceiveStockByProdIdAndProdParamId(ProductStockService.java:77)
	at com.yun.stock.service.ProductStockService$$FastClassBySpringCGLIB$$58f084d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.stock.service.ProductStockService$$EnhancerBySpringCGLIB$$df011f63.findProductReceiveStockByProdIdAndProdParamId(<generated>)
	at com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(ProductReceiveStockController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 09:16:02.632 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:16:02.634 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:16:02.635 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:16:02.636 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:16:02.642 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:16:02.644 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:16:02.646 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 0
2019-01-29 09:16:02.651 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy82.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductReceiveStockByProdIdAndProdParamId(ProductStockService.java:77)
	at com.yun.stock.service.ProductStockService$$FastClassBySpringCGLIB$$58f084d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.stock.service.ProductStockService$$EnhancerBySpringCGLIB$$df011f63.findProductReceiveStockByProdIdAndProdParamId(<generated>)
	at com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(ProductReceiveStockController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 09:16:10.655 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:16:10.658 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:16:10.659 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:16:10.662 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:16:10.669 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:16:10.671 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:16:10.674 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 0
2019-01-29 09:16:10.680 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy82.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductReceiveStockByProdIdAndProdParamId(ProductStockService.java:77)
	at com.yun.stock.service.ProductStockService$$FastClassBySpringCGLIB$$58f084d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.stock.service.ProductStockService$$EnhancerBySpringCGLIB$$df011f63.findProductReceiveStockByProdIdAndProdParamId(<generated>)
	at com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(ProductReceiveStockController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 09:16:38.542 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - prodId:4-----prodParamId:6
2019-01-29 09:16:38.546 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 09:16:38.547 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 09:16:38.552 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 09:16:38.556 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 09:16:38.557 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 09:16:38.558 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockByProdIdAndProdParamId - <==      Total: 0
2019-01-29 09:16:38.565 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).] with root cause
org.apache.ibatis.binding.BindingException: Mapper method 'com.yun.stock.dao.ProductReceiveStockDao.findProductReceiveStockByProdIdAndProdParamId attempted to return null from a method with a primitive return type (int).
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:94)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy81.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy82.findProductReceiveStockByProdIdAndProdParamId(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductReceiveStockByProdIdAndProdParamId(ProductStockService.java:77)
	at com.yun.stock.service.ProductStockService$$FastClassBySpringCGLIB$$58f084d4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.stock.service.ProductStockService$$EnhancerBySpringCGLIB$$df011f63.findProductReceiveStockByProdIdAndProdParamId(<generated>)
	at com.yun.stock.controller.ProductReceiveStockController.productReceiveStockStartNum(ProductReceiveStockController.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 10:00:40.588 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2564 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:00:40.593 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:00:40.594 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:00:40.995 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:00:40 CST 2019]; root of context hierarchy
2019-01-29 10:00:41.479 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:00:42.921 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:00:42.931 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:00:42.932 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:00:43.041 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:00:43.042 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2047 ms
2019-01-29 10:00:43.202 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:00:43.207 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:00:43.207 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:00:43.208 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:00:43.208 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:00:44.125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:00:40 CST 2019]; root of context hierarchy
2019-01-29 10:00:44.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:00:44.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:00:44.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:00:44.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:00:44.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:00:44.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:00:44.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:00:44.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:00:44.195 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:00:44.195 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:00:44.196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:00:44.196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:00:44.196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:00:44.199 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:00:44.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:00:44.201 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:00:44.201 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:00:44.201 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:00:44.201 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:00:44.202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:00:44.204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:00:44.204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:00:44.204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:00:44.204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:00:44.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:00:44.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:00:44.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:00:44.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:00:44.207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:00:44.207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:00:44.207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:00:44.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:00:44.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:00:44.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:00:44.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:00:44.209 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:00:44.210 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:00:44.210 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:00:44.210 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:00:44.210 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:00:44.213 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:00:44.214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:00:44.253 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:00:44.254 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:00:44.302 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:00:44.634 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:00:44.909 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:00:44.930 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:00:44.943 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:00:44.960 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:00:44.980 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:00:44.986 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.792 seconds (JVM running for 6.236)
2019-01-29 10:00:49.996 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:00:49.997 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:00:50.020 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2019-01-29 10:00:55.981 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:00:56.000 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:00:56.017 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:00:56.019 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:00:56.020 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:00:56.021 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:00:56.021 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:00:56.021 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:00:56.022 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:00:56.023 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:00:56.023 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:00:56.024 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:00:56.025 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:00:56.026 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:00:56.027 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:00:58.844 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:00:58.845 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:00:58.849 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:01:03.034 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.yun.stock.model.ProductReceiveTrade.getEndNum(ProductReceiveTrade.java:29)
	at com.yun.stock.model.ProductReceiveTrade.toString(ProductReceiveTrade.java:10)
	at java.lang.String.valueOf(String.java:2981)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(ProductReceiveTradeController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 10:01:50.308 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2624 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:01:50.314 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:01:50.315 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:01:50.794 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@492691d7: startup date [Tue Jan 29 10:01:50 CST 2019]; root of context hierarchy
2019-01-29 10:01:50.887 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:01:52.773 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:01:52.786 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:01:52.787 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:01:52.909 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:01:52.909 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2115 ms
2019-01-29 10:01:53.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:01:53.123 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:01:53.124 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:01:53.124 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:01:53.124 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:01:54.253 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@492691d7: startup date [Tue Jan 29 10:01:50 CST 2019]; root of context hierarchy
2019-01-29 10:01:54.351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:01:54.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:01:54.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:01:54.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:01:54.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:01:54.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:01:54.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:01:54.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:01:54.355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:01:54.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:01:54.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:01:54.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:01:54.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:01:54.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:01:54.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:01:54.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:01:54.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:01:54.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:01:54.362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:01:54.362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:01:54.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:01:54.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:01:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:01:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:01:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:01:54.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:01:54.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:01:54.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:01:54.366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:01:54.366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:01:54.366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:01:54.367 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:01:54.367 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:01:54.367 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:01:54.368 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:01:54.368 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:01:54.369 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:01:54.369 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:01:54.369 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:01:54.369 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:01:54.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:01:54.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:01:54.425 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:01:54.426 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:01:54.494 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:01:54.911 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:01:55.391 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:01:55.414 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:01:55.427 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:01:55.613 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:01:55.642 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:01:55.649 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.871 seconds (JVM running for 7.49)
2019-01-29 10:01:59.268 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:01:59.269 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:01:59.295 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019-01-29 10:02:01.440 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:02:01.462 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:02:01.484 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:02:01.486 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:02:01.486 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:02:01.489 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:02:01.489 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:02:01.489 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:02:01.490 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:02:01.491 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:02:01.491 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:02:01.493 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:02:01.493 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:02:01.494 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:02:01.495 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:02:04.811 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:02:04.813 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:02:04.818 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:02:49.537 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.yun.stock.model.ProductReceiveTrade.getEndNum(ProductReceiveTrade.java:29)
	at com.yun.stock.model.ProductReceiveTrade.toString(ProductReceiveTrade.java:10)
	at java.lang.String.valueOf(String.java:2981)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(ProductReceiveTradeController.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 10:03:10.748 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2804 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:03:10.788 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:03:10.789 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:03:11.165 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:03:11.216 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:03:11 CST 2019]; root of context hierarchy
2019-01-29 10:03:13.042 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:03:13.056 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:03:13.057 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:03:13.190 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:03:13.190 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1974 ms
2019-01-29 10:03:13.399 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:03:13.406 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:03:13.407 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:03:13.407 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:03:13.408 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:03:14.490 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:03:11 CST 2019]; root of context hierarchy
2019-01-29 10:03:14.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:03:14.618 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:03:14.618 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:03:14.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:03:14.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:03:14.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:03:14.620 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:03:14.620 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:03:14.621 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:03:14.622 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:03:14.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:03:14.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:03:14.624 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:03:14.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:03:14.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:03:14.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:03:14.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:03:14.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:03:14.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:03:14.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:03:14.635 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:03:14.635 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:03:14.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:03:14.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:03:14.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:03:14.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:03:14.638 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:03:14.638 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:03:14.639 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:03:14.640 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:03:14.640 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:03:14.640 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:03:14.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:03:14.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:03:14.642 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:03:14.643 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:03:14.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:03:14.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:03:14.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:03:14.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:03:14.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:03:14.654 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:03:14.723 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:03:14.723 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:03:14.817 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:03:15.250 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:03:15.720 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:03:15.743 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:03:15.757 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:03:15.936 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:03:15.960 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:03:15.966 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.848 seconds (JVM running for 7.502)
2019-01-29 10:03:18.921 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:03:18.921 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:03:18.948 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-29 10:03:21.183 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:03:21.206 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:03:21.219 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:03:21.232 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:03:21.232 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:21.237 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:03:21.238 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:21.238 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:21.241 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:21.242 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:21.243 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:21.244 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:21.244 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:21.245 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:03:21.249 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:03:21.250 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:21.250 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:03:21.251 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:24.146 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:03:24.147 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:03:24.149 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:03:24.155 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:03:24.157 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:24.163 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:03:24.165 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:24.166 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:24.167 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:24.168 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:24.169 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:24.170 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:24.171 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:24.172 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:03:24.173 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:03:24.173 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:24.173 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:03:24.174 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:27.150 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:03:27.173 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:03:27.174 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:03:27.177 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:03:27.182 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:03:27.183 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:27.186 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:03:27.188 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:03:29.892 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.deleteProductReceiveStock - ==>  Preparing: delete from product_receive_stock where prod_rece_stock_id=? 
2019-01-29 10:03:29.893 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.deleteProductReceiveStock - ==> Parameters: 4(Integer)
2019-01-29 10:03:29.922 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.deleteProductReceiveStock - <==    Updates: 1
2019-01-29 10:03:30.085 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:03:30.088 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:03:30.092 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:03:30.094 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:03:30.098 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:03:30.099 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:30.103 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:03:30.107 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:03:31.996 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:03:32.006 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:03:32.007 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:03:32.027 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:03:32.032 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:03:32.033 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:32.036 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 10:03:32.038 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:03:35.844 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:03:35.845 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:03:35.848 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:03:35.851 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:03:35.852 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:35.854 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:03:35.855 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:35.855 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:35.856 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:35.857 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:35.857 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:35.858 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:35.859 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:35.859 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:03:35.861 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:03:35.861 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:35.862 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:03:35.863 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:38.334 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductById - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and prod_id=? 
2019-01-29 10:03:38.335 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductById - ==> Parameters: 2(Integer)
2019-01-29 10:03:38.336 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductById - <==      Total: 1
2019-01-29 10:03:43.895 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:03:43.898 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:03:43.901 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:03:43.912 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:03:43.912 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:43.919 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:03:43.919 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:43.920 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:43.921 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:43.921 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:43.922 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:43.923 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:43.923 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:43.923 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:03:43.925 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:03:43.926 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:43.926 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:03:43.927 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:45.541 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:45.541 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:45.542 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:50.130 [http-nio-8080-exec-1] DEBUG c.y.p.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-29 10:03:50.131 [http-nio-8080-exec-1] DEBUG c.y.p.d.ProductParameterDao.insertProductParameter - ==> Parameters: aa(String), 2(Integer)
2019-01-29 10:03:50.247 [http-nio-8080-exec-1] DEBUG c.y.p.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-29 10:03:50.363 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:03:50.363 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:03:50.365 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:03:50.367 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:03:50.369 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:50.371 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:03:50.372 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:50.372 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:50.373 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:50.374 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:50.374 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:50.375 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:50.376 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:50.376 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:03:50.378 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:03:50.379 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:50.379 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:03:50.381 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:51.825 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:51.826 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:51.828 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-29 10:03:54.928 [http-nio-8080-exec-2] DEBUG c.y.p.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-29 10:03:54.929 [http-nio-8080-exec-2] DEBUG c.y.p.d.ProductParameterDao.insertProductParameter - ==> Parameters: ad(String), 3(Integer)
2019-01-29 10:03:54.947 [http-nio-8080-exec-2] DEBUG c.y.p.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-29 10:03:54.987 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:03:54.987 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:03:54.989 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:03:54.992 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:03:54.993 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:03:54.994 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:03:54.994 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:54.995 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:03:54.995 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:54.996 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:54.996 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:03:54.996 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:03:54.997 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:54.997 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:03:54.998 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:03:54.998 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:03:54.998 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:03:54.999 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:04:01.070 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:04:01.073 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:01.074 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:04:01.075 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:04:01.079 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:01.079 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:01.081 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:04:01.083 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:04:03.726 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:04:03.727 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:04:03.765 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 3
2019-01-29 10:04:07.822 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:04:07.827 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:07.828 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:04:07.831 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:04:07.838 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:07.840 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:07.842 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:04:07.848 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:04:10.819 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:04:10.822 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:10.823 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:04:10.825 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:04:10.831 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:10.832 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:10.833 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 10:04:10.836 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:04:14.628 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:04:14.633 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:14.633 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:04:14.634 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:04:14.638 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:14.639 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:14.641 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 10:04:14.644 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:04:22.078 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductStockDao.deleteProductStock - ==>  Preparing: delete from product_stock where prod_stock_id=? 
2019-01-29 10:04:22.079 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductStockDao.deleteProductStock - ==> Parameters: 4(Integer)
2019-01-29 10:04:22.091 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductStockDao.deleteProductStock - <==    Updates: 1
2019-01-29 10:04:22.151 [http-nio-8080-exec-7] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:04:22.154 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:22.155 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:04:22.157 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:04:22.162 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:22.163 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:22.164 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 10:04:22.167 [http-nio-8080-exec-7] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:04:23.691 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:04:23.695 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:23.696 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:04:23.700 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:04:23.708 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:23.709 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:23.711 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:04:23.719 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:04:26.150 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:04:26.151 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:04:26.154 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:04:28.932 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:04:28.938 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:28.939 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:04:28.942 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:04:28.945 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:28.946 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:28.947 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 10:04:28.949 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:04:31.503 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:04:31.504 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:04:31.508 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:04:33.647 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:04:33.653 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:33.653 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:04:33.654 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:04:33.658 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:33.659 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:33.660 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:04:33.662 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:04:35.629 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:04:35.630 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:04:35.632 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:04:38.667 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:04:38.668 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:04:38.671 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:04:44.495 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.insertProductReceiveStock - ==>  Preparing: insert into product_receive_stock(prod_id,prod_param_id,stock_num)values(?,?,?) 
2019-01-29 10:04:44.496 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.insertProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 0(Integer)
2019-01-29 10:04:44.527 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.insertProductReceiveStock - <==    Updates: 1
2019-01-29 10:04:44.634 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:04:44.636 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:44.637 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:04:44.639 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:04:44.643 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:44.644 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:44.648 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:04:44.651 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:04:46.696 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:04:46.699 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:46.700 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:04:46.702 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:04:46.705 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:46.705 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:46.707 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 10:04:46.708 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:04:48.582 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:04:48.583 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:04:48.586 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:04:53.358 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:04:53.362 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:04:53.363 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:04:53.364 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:04:53.368 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:04:53.368 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:04:53.370 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:04:53.372 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:04:55.824 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:04:55.824 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:04:55.826 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:05:03.884 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:03.885 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:05:03.888 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:05:07.825 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.insertProductReceiveStock - ==>  Preparing: insert into product_receive_stock(prod_id,prod_param_id,stock_num)values(?,?,?) 
2019-01-29 10:05:07.826 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.insertProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 2(Integer)
2019-01-29 10:05:07.862 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.insertProductReceiveStock - <==    Updates: 1
2019-01-29 10:05:07.916 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:05:07.918 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:05:07.919 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:05:07.922 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:05:07.927 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:05:07.928 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:05:07.933 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 10:05:07.937 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:05:20.927 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:05:20.930 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:05:20.932 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:05:20.933 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:05:20.936 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:05:20.936 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:05:20.938 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 10:05:20.940 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:05:26.351 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:05:26.352 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:05:26.356 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:05:29.534 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:29.534 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:05:29.535 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:05:33.969 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductStockDao.insertProductStock - ==>  Preparing: insert into product_stock(prod_id,prod_param_id,stock_num)values(?,?,?) 
2019-01-29 10:05:33.971 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductStockDao.insertProductStock - ==> Parameters: 2(Integer), 8(Integer), 3(Integer)
2019-01-29 10:05:33.996 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductStockDao.insertProductStock - <==    Updates: 1
2019-01-29 10:05:34.149 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:05:34.150 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:05:34.151 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:05:34.152 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:05:34.155 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:05:34.156 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:05:34.160 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 10:05:34.162 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:05:43.016 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:05:43.016 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:05:43.017 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:05:43.018 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:43.018 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:05:43.019 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:05:43.019 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:43.019 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:05:43.020 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:05:43.021 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:43.021 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:05:43.024 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:05:43.024 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:43.025 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:05:43.025 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:05:45.819 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:05:45.820 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:05:45.823 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:06:49.498 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4724 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:06:49.502 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:06:49.502 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:06:49.842 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:06:49.891 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:06:49 CST 2019]; root of context hierarchy
2019-01-29 10:06:51.838 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:06:51.847 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:06:51.848 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:06:51.946 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:06:51.946 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2055 ms
2019-01-29 10:06:52.086 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:06:52.090 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:06:52.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:06:52.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:06:52.091 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:06:52.916 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:06:49 CST 2019]; root of context hierarchy
2019-01-29 10:06:52.974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:06:52.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:06:52.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:06:52.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:06:52.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:06:52.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:06:52.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:06:52.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:06:52.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:06:52.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:06:52.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:06:52.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:06:52.979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:06:52.981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:06:52.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:06:52.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:06:52.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:06:52.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:06:52.983 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:06:52.983 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:06:52.984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:06:52.984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:06:52.984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:06:52.984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:06:52.985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:06:52.985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:06:52.985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:06:52.986 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:06:52.986 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:06:52.987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:06:52.987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:06:52.987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:06:52.987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:06:52.987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:06:52.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:06:52.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:06:52.989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:06:52.989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:06:52.989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:06:52.989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:06:52.992 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:06:52.992 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:06:53.023 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:53.023 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:53.062 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:53.373 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:06:53.617 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:06:53.637 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:06:53.648 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:06:53.662 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:06:53.826 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:06:53.835 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.807 seconds (JVM running for 5.98)
2019-01-29 10:06:58.139 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:06:58.139 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:06:58.157 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-29 10:07:00.395 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:07:00.415 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:07:00.427 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:07:00.436 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:07:00.437 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:07:00.439 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:07:00.441 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:00.441 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:07:00.443 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:07:00.444 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:00.445 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:07:00.446 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:07:00.447 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:00.447 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:07:00.448 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:07:00.449 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:00.449 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:07:00.451 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:07:05.425 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:07:05.438 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:07:05.439 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:07:05.445 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:07:05.451 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:07:05.452 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:07:05.454 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 10:07:05.457 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:07:08.289 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:07:08.290 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:07:08.293 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:07:08.302 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:07:08.303 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:07:08.306 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:07:08.306 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:08.307 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:07:08.308 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:07:08.309 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:08.309 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:07:08.310 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:07:08.311 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:08.311 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:07:08.312 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:07:08.313 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:07:08.314 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:07:08.315 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:07:12.609 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:07:12.618 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:07:12.618 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:07:12.621 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:07:12.626 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:07:12.628 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:07:12.631 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 10:07:12.634 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:07:14.829 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.deleteProductReceiveStock - ==>  Preparing: delete from product_receive_stock where prod_rece_stock_id=? 
2019-01-29 10:07:14.831 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.deleteProductReceiveStock - ==> Parameters: 6(Integer)
2019-01-29 10:07:14.864 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.deleteProductReceiveStock - <==    Updates: 1
2019-01-29 10:07:14.959 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:07:14.962 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:07:14.962 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:07:14.963 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:07:14.967 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:07:14.968 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:07:14.970 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:07:14.971 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:07:16.828 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.deleteProductReceiveStock - ==>  Preparing: delete from product_receive_stock where prod_rece_stock_id=? 
2019-01-29 10:07:16.829 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.deleteProductReceiveStock - ==> Parameters: 5(Integer)
2019-01-29 10:07:16.912 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.deleteProductReceiveStock - <==    Updates: 1
2019-01-29 10:07:17.020 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:07:17.023 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:07:17.024 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:07:17.027 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:07:17.034 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:07:17.035 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:07:17.036 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:07:17.040 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:08:14.484 [http-nio-8080-exec-7] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 10:08:14.711 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:08:14.712 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 10:08:14.716 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:08:14.717 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 10:08:14.718 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:08:14.718 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 10:08:14.720 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 10:08:14.720 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 10:08:14.720 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:08:14.721 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 10:08:14.724 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:08:14.724 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 10:08:14.726 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 10:08:14.726 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 10:08:14.726 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 10:08:18.828 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 10:08:18.830 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 10:08:18.832 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 10:08:18.837 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 10:08:18.837 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:08:18.842 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:08:18.842 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:08:18.843 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:08:18.845 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:08:18.845 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:08:18.846 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:08:18.847 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:08:18.847 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:08:18.848 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:08:18.849 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:08:18.850 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:08:18.850 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:08:18.851 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:08:24.614 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:08:24.618 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:08:24.619 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:08:24.621 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:08:24.624 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:08:24.626 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:08:24.628 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 0
2019-01-29 10:08:24.630 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:08:28.184 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:08:28.185 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:08:28.194 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:08:31.199 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:08:31.201 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:08:31.204 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:08:35.155 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveStock - ==>  Preparing: insert into product_receive_stock(prod_id,prod_param_id,stock_num)values(?,?,?) 
2019-01-29 10:08:35.156 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 1(Integer)
2019-01-29 10:08:35.182 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveStock - <==    Updates: 1
2019-01-29 10:08:35.270 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:08:35.273 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:08:35.273 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:08:35.274 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:08:35.277 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:08:35.278 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:08:35.280 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:08:35.282 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:08:40.292 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:08:40.293 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:08:40.297 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:08:54.377 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:08:54.378 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:08:54.383 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:09:01.198 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:09:01.201 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:09:01.201 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:09:01.203 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:09:01.207 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:09:01.208 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:09:01.210 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:09:01.212 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:09:07.429 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:09:07.430 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:09:07.433 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:09:16.530 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:09:16.531 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:09:16.535 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:09:33.467 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:09:33.468 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:09:33.473 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:09:37.446 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:09:37.451 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:09:37.451 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:09:37.454 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:09:37.460 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:09:37.462 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:09:37.465 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:09:37.467 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:10:13.835 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:10:13.835 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:10:13.837 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:10:13.838 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:13.838 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:10:13.840 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:13.841 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:13.841 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:10:13.842 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:13.842 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:13.842 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:10:13.843 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:10:13.843 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:13.844 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:10:13.845 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:16.475 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:16.476 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:10:16.480 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:21.014 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：java.lang.NullPointerException
2019-01-29 10:10:35.542 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2576 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:10:35.548 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:10:35.549 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:10:36.085 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:10:36.156 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:10:36 CST 2019]; root of context hierarchy
2019-01-29 10:10:38.037 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:10:38.049 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:10:38.050 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:10:38.197 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:10:38.197 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2041 ms
2019-01-29 10:10:38.401 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:10:38.408 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:10:38.409 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:10:38.409 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:10:38.409 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:10:39.486 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:10:36 CST 2019]; root of context hierarchy
2019-01-29 10:10:39.571 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:10:39.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:10:39.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:10:39.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:10:39.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:10:39.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:10:39.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:10:39.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:10:39.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:10:39.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:10:39.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:10:39.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:10:39.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:10:39.578 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:10:39.578 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:10:39.578 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:10:39.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:10:39.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:10:39.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:10:39.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:10:39.580 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:10:39.580 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:10:39.580 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:10:39.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:10:39.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:10:39.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:10:39.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:10:39.582 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:10:39.583 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:10:39.583 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:10:39.583 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:10:39.583 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:10:39.583 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:10:39.584 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:10:39.584 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:10:39.585 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:10:39.585 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:10:39.585 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:10:39.585 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:10:39.585 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:10:39.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:10:39.589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:10:39.639 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:10:39.639 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:10:39.707 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:10:40.173 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:10:40.643 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:10:40.668 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:10:40.683 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:10:40.865 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:10:40.889 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:10:40.895 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.855 seconds (JVM running for 7.367)
2019-01-29 10:10:44.351 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:10:44.351 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:10:44.380 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2019-01-29 10:10:46.452 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:10:46.473 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:10:46.491 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:10:46.493 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:46.494 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:10:46.495 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:46.496 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:46.496 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:10:46.497 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:46.498 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:46.498 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:10:46.500 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:10:46.500 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:46.500 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:10:46.501 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:10:49.366 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:10:49.367 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:10:49.370 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:11:14.359 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：java.lang.NullPointerException
2019-01-29 10:11:41.861 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1352 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:11:41.867 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:11:41.868 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:11:42.319 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:11:42.344 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:11:42 CST 2019]; root of context hierarchy
2019-01-29 10:11:44.064 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:11:44.075 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:11:44.076 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:11:44.190 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:11:44.190 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1847 ms
2019-01-29 10:11:44.378 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:11:44.385 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:11:44.386 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:11:44.386 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:11:44.386 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:11:45.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:11:42 CST 2019]; root of context hierarchy
2019-01-29 10:11:45.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:11:45.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:11:45.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:11:45.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:11:45.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:11:45.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:11:45.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:11:45.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:11:45.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:11:45.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:11:45.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:11:45.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:11:45.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:11:45.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:11:45.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:11:45.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:11:45.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:11:45.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:11:45.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:11:45.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:11:45.568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:11:45.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:11:45.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:11:45.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:11:45.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:11:45.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:11:45.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:11:45.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:11:45.571 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:11:45.571 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:11:45.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:11:45.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:11:45.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:11:45.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:11:45.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:11:45.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:11:45.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:11:45.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:11:45.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:11:45.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:11:45.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:11:45.580 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:11:45.632 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:11:45.633 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:11:45.700 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:11:46.139 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:11:46.621 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:11:46.646 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:11:46.660 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:11:46.850 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:11:46.873 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:11:46.879 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.604 seconds (JVM running for 7.197)
2019-01-29 10:11:56.375 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:11:56.375 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:11:56.400 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-01-29 10:11:56.772 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:11:56.795 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 10:11:56.808 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 10:12:02.035 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:12:02.036 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:12:02.049 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:12:02.050 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:12:02.051 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:12:02.052 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:12:02.053 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:12:02.054 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:12:02.055 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:12:02.056 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:12:02.056 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:12:02.057 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:12:02.058 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:12:02.058 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:12:02.062 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:12:04.629 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:12:04.630 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:12:04.634 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:17:23.598 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收入库记录出错：java.lang.NullPointerException
2019-01-29 10:17:31.625 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4660 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:17:31.631 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:17:31.631 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:17:32.064 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:17:32.270 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:17:32 CST 2019]; root of context hierarchy
2019-01-29 10:17:34.298 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:17:34.315 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:17:34.317 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:17:34.457 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:17:34.457 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2188 ms
2019-01-29 10:17:34.668 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:17:34.675 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:17:34.676 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:17:34.676 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:17:34.676 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:17:35.939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:17:32 CST 2019]; root of context hierarchy
2019-01-29 10:17:36.048 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:17:36.050 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:17:36.050 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:17:36.050 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:17:36.050 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:17:36.051 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:17:36.051 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:17:36.051 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:17:36.051 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:17:36.052 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:17:36.052 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:17:36.053 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:17:36.053 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:17:36.056 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:17:36.056 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:17:36.056 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:17:36.057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:17:36.057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:17:36.057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:17:36.058 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:17:36.059 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:17:36.059 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:17:36.059 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:17:36.059 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:17:36.059 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:17:36.059 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:17:36.060 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:17:36.061 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:17:36.062 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:17:36.062 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:17:36.062 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:17:36.063 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:17:36.063 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:17:36.063 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:17:36.064 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:17:36.065 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:17:36.066 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:17:36.066 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:17:36.066 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:17:36.066 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:17:36.071 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:17:36.072 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:17:36.125 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:17:36.125 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:17:36.198 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:17:36.597 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:17:37.054 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:17:37.078 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:17:37.092 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:17:37.281 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:17:37.306 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:17:37.316 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 6.296 seconds (JVM running for 7.919)
2019-01-29 10:17:47.338 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:17:47.338 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:17:47.366 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-29 10:17:47.737 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:17:47.759 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 10:17:47.773 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 10:17:54.291 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:17:54.291 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:17:54.303 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:17:54.304 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:17:54.305 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:17:54.308 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:17:54.309 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:17:54.309 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:17:54.311 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:17:54.311 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:17:54.311 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:17:54.312 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:17:54.313 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:17:54.313 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:17:54.314 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:17:56.543 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:17:56.544 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:17:56.546 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:18:52.917 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 10:18:52.918 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 10:18:52.922 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 10:18:59.831 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4728 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:18:59.868 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:18:59.869 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:18:59.922 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:19:00.326 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:19:00 CST 2019]; root of context hierarchy
2019-01-29 10:19:02.129 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:19:02.141 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:19:02.142 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:19:02.266 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:19:02.266 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1940 ms
2019-01-29 10:19:02.478 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:19:02.485 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:19:02.486 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:19:02.487 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:19:02.487 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:19:03.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 10:19:00 CST 2019]; root of context hierarchy
2019-01-29 10:19:03.618 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:19:03.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:19:03.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:19:03.620 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:19:03.620 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:19:03.620 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:19:03.620 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:19:03.621 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:19:03.621 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:19:03.622 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:19:03.622 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:19:03.622 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:19:03.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:19:03.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:19:03.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:19:03.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:19:03.627 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:19:03.627 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:19:03.627 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:19:03.627 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:19:03.628 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:19:03.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:19:03.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:19:03.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:19:03.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:19:03.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:19:03.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:19:03.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:19:03.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:19:03.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:19:03.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:19:03.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:19:03.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:19:03.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:19:03.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:19:03.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:19:03.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:19:03.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:19:03.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:19:03.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:19:03.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:19:03.638 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:19:03.688 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:19:03.688 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:19:03.758 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:19:04.318 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:19:04.786 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:19:04.813 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:19:04.828 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:19:05.014 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:19:05.040 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:19:05.050 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 6.119 seconds (JVM running for 7.84)
2019-01-29 10:19:08.369 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:19:08.370 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:19:08.395 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-01-29 10:19:17.195 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:19:17.216 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:19:17.240 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:19:17.242 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:19:17.242 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:19:17.245 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:19:17.245 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:19:17.245 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:19:17.247 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:19:17.248 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:19:17.248 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:19:17.249 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:19:17.250 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:19:17.250 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:19:17.251 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:19:19.641 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:19:19.642 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:19:19.645 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:19:23.365 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 10:19:23.365 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 10:19:23.368 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 10:19:23.369 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 10:19:23.371 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 10:19:23.374 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 10:19:23.377 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 10:19:23.379 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 1(Integer), 3(Integer), null, null
2019-01-29 10:19:23.402 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 10:25:22.075 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4024 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:25:22.080 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:25:22.080 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:25:22.251 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:25:22.526 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:25:22 CST 2019]; root of context hierarchy
2019-01-29 10:25:24.138 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:25:24.160 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:25:24.161 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:25:24.327 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:25:24.328 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1803 ms
2019-01-29 10:25:24.502 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:25:24.507 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:25:24.507 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:25:24.508 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:25:24.508 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:25:25.407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:25:22 CST 2019]; root of context hierarchy
2019-01-29 10:25:25.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:25:25.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:25:25.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:25:25.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:25:25.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:25:25.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:25:25.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:25:25.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:25:25.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:25:25.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:25:25.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:25:25.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:25:25.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:25:25.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:25:25.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:25:25.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:25:25.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:25:25.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:25:25.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:25:25.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:25:25.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:25:25.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:25:25.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:25:25.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:25:25.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:25:25.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:25:25.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:25:25.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:25:25.479 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:25:25.479 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:25:25.479 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:25:25.479 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:25:25.480 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:25:25.480 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:25:25.480 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:25:25.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:25:25.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:25:25.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:25:25.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:25:25.482 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:25:25.485 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:25:25.485 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:25:25.519 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:25:25.519 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:25:25.564 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:25:25.884 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:25:26.160 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:25:26.189 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:25:26.203 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:25:26.222 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:25:26.245 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:25:26.478 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.746 seconds (JVM running for 6.264)
2019-01-29 10:25:26.549 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:25:26.550 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:25:26.581 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2019-01-29 10:25:41.699 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:25:42.013 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:25:42.033 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:25:42.045 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:25:42.055 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:25:42.055 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:25:42.057 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:25:42.059 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:25:49.119 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:25:49.120 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:25:49.129 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:25:57.022 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:25:57.023 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:25:57.027 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:26:01.617 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 10:26:01.619 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 10:26:01.629 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 10:27:17.600 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:27:17.604 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:27:17.604 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:27:17.606 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:27:17.609 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:27:17.610 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:27:17.613 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:27:17.616 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:34:58.935 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2180 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:34:58.939 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:34:58.939 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:34:59.487 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:34:59.527 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:34:59 CST 2019]; root of context hierarchy
2019-01-29 10:35:01.262 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:35:01.274 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:35:01.275 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:35:01.398 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:35:01.398 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1871 ms
2019-01-29 10:35:01.593 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:35:01.599 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:35:01.600 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:35:01.600 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:35:01.601 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:35:02.678 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:34:59 CST 2019]; root of context hierarchy
2019-01-29 10:35:02.748 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:35:02.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:35:02.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:35:02.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:35:02.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:35:02.750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:35:02.750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:35:02.750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:35:02.751 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:35:02.751 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:35:02.752 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:35:02.752 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:35:02.752 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:35:02.755 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:35:02.756 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:35:02.756 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:35:02.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:35:02.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:35:02.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:35:02.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:35:02.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:35:02.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:35:02.760 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:35:02.760 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:35:02.760 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:35:02.760 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:35:02.761 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:35:02.761 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:35:02.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:35:02.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:35:02.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:35:02.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:35:02.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:35:02.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:35:02.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:35:02.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:35:02.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:35:02.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:35:02.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:35:02.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:35:02.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:35:02.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:35:02.804 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:35:02.804 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:35:02.850 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:35:03.309 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:35:03.544 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:35:03.565 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:35:03.577 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:35:03.590 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:35:03.607 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:35:03.612 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.2 seconds (JVM running for 7.032)
2019-01-29 10:36:21.249 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4044 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:36:21.254 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:36:21.254 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:36:21.547 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:36:21.706 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:36:21 CST 2019]; root of context hierarchy
2019-01-29 10:36:23.466 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:36:23.477 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:36:23.478 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:36:23.587 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:36:23.587 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1881 ms
2019-01-29 10:36:23.760 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:36:23.765 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:36:23.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:36:23.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:36:23.767 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:36:24.699 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:36:21 CST 2019]; root of context hierarchy
2019-01-29 10:36:24.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:36:24.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:36:24.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:36:24.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:36:24.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:36:24.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:36:24.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:36:24.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:36:24.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:36:24.774 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:36:24.774 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:36:24.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:36:24.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:36:24.778 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:36:24.778 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:36:24.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:36:24.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:36:24.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:36:24.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:36:24.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:36:24.781 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:36:24.782 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:36:24.782 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:36:24.782 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:36:24.782 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:36:24.783 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:36:24.783 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:36:24.784 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:36:24.785 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:36:24.785 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:36:24.785 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:36:24.786 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:36:24.786 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:36:24.786 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:36:24.787 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:36:24.788 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:36:24.788 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:36:24.788 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:36:24.788 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:36:24.788 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:36:24.791 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:36:24.792 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:36:24.828 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:36:24.828 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:36:24.873 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:36:25.231 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:36:25.477 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:36:25.499 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:36:25.510 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:36:25.524 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:36:25.542 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:36:25.547 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.846 seconds (JVM running for 6.073)
2019-01-29 10:38:30.733 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1564 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:38:30.737 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:38:30.737 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:38:31.210 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:38:31 CST 2019]; root of context hierarchy
2019-01-29 10:38:31.343 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:38:32.816 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:38:32.827 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:38:32.828 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:38:32.928 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:38:32.928 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1718 ms
2019-01-29 10:38:33.092 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:38:33.093 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:38:33.093 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:38:33.093 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:38:33.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:38:33.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:38:33.905 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:38:31 CST 2019]; root of context hierarchy
2019-01-29 10:38:33.965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:38:33.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:38:33.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:38:33.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:38:33.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:38:33.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:38:33.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:38:33.968 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:38:33.968 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:38:33.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:38:33.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:38:33.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:38:33.971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:38:33.974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:38:33.974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:38:33.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:38:33.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:38:33.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:38:33.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:38:33.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:38:33.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:38:33.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:38:33.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:38:33.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:38:33.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:38:33.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:38:33.979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:38:33.979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:38:33.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:38:33.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:38:33.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:38:33.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:38:33.981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:38:33.981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:38:33.981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:38:33.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:38:33.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:38:33.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:38:33.983 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:38:33.983 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:38:33.986 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:38:33.986 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:38:34.020 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:38:34.020 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:38:34.062 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:38:34.366 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:38:34.599 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:38:34.621 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:38:34.631 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:38:34.643 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:38:34.816 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:38:34.820 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.502 seconds (JVM running for 5.669)
2019-01-29 10:41:09.343 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5484 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:41:09.380 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:41:09.381 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:41:09.816 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:41:09 CST 2019]; root of context hierarchy
2019-01-29 10:41:09.859 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:41:11.568 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:41:11.581 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:41:11.582 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:41:11.719 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:41:11.719 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1903 ms
2019-01-29 10:41:12.137 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:41:12.138 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:41:12.139 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:41:12.139 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:41:12.140 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:41:12.140 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:41:13.440 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:41:09 CST 2019]; root of context hierarchy
2019-01-29 10:41:13.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:41:13.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:41:13.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:41:13.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:41:13.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:41:13.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:41:13.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:41:13.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:41:13.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:41:13.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:41:13.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:41:13.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:41:13.509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:41:13.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:41:13.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:41:13.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:41:13.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:41:13.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:41:13.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:41:13.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:41:13.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:41:13.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:41:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:41:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:41:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:41:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:41:13.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:41:13.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:41:13.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:41:13.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:41:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:41:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:41:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:41:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:41:13.519 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:41:13.519 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:41:13.519 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:41:13.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:41:13.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:41:13.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:41:13.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:41:13.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:41:13.559 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:41:13.559 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:41:13.606 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:41:13.926 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:41:14.150 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:41:14.171 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:41:14.183 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:41:14.196 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:41:14.351 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:41:14.357 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.645 seconds (JVM running for 6.903)
2019-01-29 10:41:47.769 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:41:47.770 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:41:47.798 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2019-01-29 10:41:47.811 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:41:49.472 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:50.627 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:51.554 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:52.223 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:52.959 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:53.552 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:54.101 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:54.714 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:41:55.823 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:45:37.986 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 220 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:45:37.990 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:45:37.990 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:45:38.353 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:45:38.554 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:45:38 CST 2019]; root of context hierarchy
2019-01-29 10:45:40.285 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:45:40.297 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:45:40.298 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:45:40.406 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:45:40.406 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1852 ms
2019-01-29 10:45:40.571 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:45:40.572 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:45:40.572 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:45:40.572 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:45:40.573 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:45:40.573 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:45:41.398 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:45:38 CST 2019]; root of context hierarchy
2019-01-29 10:45:41.457 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:45:41.458 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:45:41.458 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:45:41.458 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:45:41.459 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:45:41.459 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:45:41.459 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:45:41.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:45:41.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:45:41.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:45:41.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:45:41.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:45:41.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:45:41.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:45:41.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:45:41.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:45:41.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:45:41.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:45:41.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:45:41.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:45:41.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:45:41.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:45:41.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:45:41.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:45:41.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:45:41.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:45:41.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:45:41.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:45:41.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:45:41.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:45:41.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:45:41.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:45:41.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:45:41.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:45:41.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:45:41.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:45:41.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-29 10:45:41.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:45:41.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:45:41.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:45:41.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:45:41.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:45:41.511 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:45:41.511 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:45:41.552 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:45:41.853 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:45:42.125 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:45:42.145 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:45:42.157 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:45:42.170 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:45:42.188 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:45:42.335 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.085 seconds (JVM running for 6.277)
2019-01-29 10:45:46.835 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:45:46.835 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:45:46.855 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-29 10:45:46.866 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:45:56.922 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:45:57.245 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:45:57.265 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 10:45:57.277 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 10:45:57.296 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:46:01.097 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:46:01.158 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:46:01.158 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:46:01.161 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:46:01.166 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 10:46:01.194 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 10:46:01.211 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:46:01.912 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:46:01.983 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:46:01.990 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:46:01.990 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:46:01.996 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 10:46:02.019 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 10:46:02.035 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:46:03.766 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 10:46:03.772 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:46:03.809 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:46:03.809 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:46:03.810 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:46:03.819 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:46:03.820 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:46:03.822 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:46:03.825 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:46:09.452 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 10:46:09.455 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:46:09.460 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:46:09.461 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:46:09.464 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:46:09.473 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:46:09.474 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:46:09.477 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:46:09.479 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:46:22.420 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:46:30.179 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:46:30.185 [http-nio-8080-exec-4] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:46:30.186 [http-nio-8080-exec-4] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: adasd(String), 2323(String)
2019-01-29 10:46:30.190 [http-nio-8080-exec-4] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-01-29 10:46:30.199 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:46:33.296 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:46:33.300 [http-nio-8080-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:46:33.301 [http-nio-8080-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: 2323(String), 2323(String)
2019-01-29 10:46:33.303 [http-nio-8080-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-01-29 10:46:33.316 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:49:24.162 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2496 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:49:24.167 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:49:24.168 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:49:24.490 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:49:24.695 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:49:24 CST 2019]; root of context hierarchy
2019-01-29 10:49:26.393 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:49:26.403 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:49:26.404 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:49:26.506 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:49:26.506 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1811 ms
2019-01-29 10:49:26.661 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:49:26.662 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:49:26.663 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:49:26.663 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:49:26.663 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:49:26.663 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:49:27.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:49:24 CST 2019]; root of context hierarchy
2019-01-29 10:49:27.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:49:27.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:49:27.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:49:27.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:49:27.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:49:27.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:49:27.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:49:27.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:49:27.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:49:27.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:49:27.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:49:27.526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:49:27.526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:49:27.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:49:27.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:49:27.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:49:27.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:49:27.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:49:27.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:49:27.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:49:27.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:49:27.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:49:27.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:49:27.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:49:27.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:49:27.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:49:27.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:49:27.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:49:27.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:49:27.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:49:27.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:49:27.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:49:27.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:49:27.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:49:27.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:49:27.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:49:27.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:49:27.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:49:27.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:49:27.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:49:27.540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:49:27.540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:49:27.572 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:49:27.572 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:49:27.613 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:49:27.992 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:49:28.244 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:49:28.267 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:49:28.278 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:49:28.291 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:49:28.462 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:49:28.468 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.673 seconds (JVM running for 5.845)
2019-01-29 10:49:31.348 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:49:31.349 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:49:31.367 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-29 10:49:31.378 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:49:31.423 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:49:31.424 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:49:31.425 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:49:31.462 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:49:32.648 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:49:32.694 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:49:32.694 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:49:32.695 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:49:32.710 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:49:33.803 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:49:33.842 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:49:33.842 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:49:33.843 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:49:33.860 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:49:38.594 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:49:38.595 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:49:38.594 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:49:38.639 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:49:39.963 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:49:40.018 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:49:40.018 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:49:40.019 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:49:40.035 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:50:21.762 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5236 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:50:21.767 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:50:21.767 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:50:22.382 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:50:22 CST 2019]; root of context hierarchy
2019-01-29 10:50:22.453 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:50:23.947 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:50:23.957 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:50:23.958 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:50:24.058 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:50:24.058 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1676 ms
2019-01-29 10:50:24.220 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:50:24.221 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:50:24.221 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:50:24.221 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:50:24.222 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:50:24.222 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:50:25.069 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:50:22 CST 2019]; root of context hierarchy
2019-01-29 10:50:25.131 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:50:25.132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:50:25.132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:50:25.133 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:50:25.133 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:50:25.133 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:50:25.134 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:50:25.134 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:50:25.134 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:50:25.135 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:50:25.135 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:50:25.136 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:50:25.136 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:50:25.138 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:50:25.139 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:50:25.139 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:50:25.139 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:50:25.140 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:50:25.140 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:50:25.140 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:50:25.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:50:25.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:50:25.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:50:25.142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:50:25.142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:50:25.142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:50:25.143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:50:25.143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:50:25.144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:50:25.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:50:25.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:50:25.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:50:25.146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:50:25.146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:50:25.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:50:25.148 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:50:25.148 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:50:25.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:50:25.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:50:25.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:50:25.154 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:50:25.154 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:50:25.188 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:50:25.188 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:50:25.239 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:50:25.550 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:50:25.804 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:50:25.825 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:50:25.837 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:50:25.851 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:50:26.016 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:50:26.021 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.586 seconds (JVM running for 5.744)
2019-01-29 10:50:28.493 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:50:28.494 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:50:28.512 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-29 10:50:28.524 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:50:28.577 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:50:28.580 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:50:28.585 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:50:28.609 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:50:29.271 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:50:29.319 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:50:29.320 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:50:29.320 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:50:29.335 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:51:04.759 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6092 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:51:04.764 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:51:04.764 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:51:05.161 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:51:05 CST 2019]; root of context hierarchy
2019-01-29 10:51:05.223 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:51:06.710 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:51:06.721 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:51:06.722 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:51:06.824 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:51:06.824 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1663 ms
2019-01-29 10:51:06.974 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:51:06.975 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:51:06.975 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:51:06.975 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:51:06.975 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:51:06.976 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:51:07.807 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:51:05 CST 2019]; root of context hierarchy
2019-01-29 10:51:07.867 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:51:07.869 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:51:07.870 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:51:07.870 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:51:07.870 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:51:07.871 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:51:07.871 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:51:07.871 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:51:07.871 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:51:07.873 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:51:07.873 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:51:07.873 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:51:07.874 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:51:07.876 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:51:07.877 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:51:07.877 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:51:07.877 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:51:07.877 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:51:07.877 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:51:07.878 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:51:07.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:51:07.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:51:07.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:51:07.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:51:07.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:51:07.880 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:51:07.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:51:07.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:51:07.882 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:51:07.882 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:51:07.882 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:51:07.883 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:51:07.883 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:51:07.883 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:51:07.884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:51:07.885 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:51:07.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:51:07.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:51:07.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:51:07.887 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:51:07.890 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:51:07.890 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:51:07.923 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:51:07.923 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:51:07.962 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:51:08.358 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:51:08.618 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:51:08.640 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:51:08.655 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:51:08.673 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:51:08.847 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:51:08.852 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.701 seconds (JVM running for 5.895)
2019-01-29 10:51:09.481 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:51:09.481 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:51:09.509 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2019-01-29 10:51:09.525 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:51:09.582 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:51:09.582 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:51:09.582 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:51:09.605 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:51:13.256 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:51:13.257 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:51:13.261 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:51:13.314 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:51:18.143 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:51:19.612 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:51:19.651 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:51:19.655 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:51:19.655 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:51:19.675 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:51:45.766 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:51:46.078 [http-nio-8080-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:51:46.099 [http-nio-8080-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 10:51:46.112 [http-nio-8080-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 10:51:46.119 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:51:46.527 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 10:51:46.527 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 10:51:46.533 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 10:51:46.822 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 10:51:48.678 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 10:51:48.680 [http-nio-8080-exec-2] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 10:51:49.090 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 10:51:49.099 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:51:49.099 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 10:51:49.104 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:51:49.105 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 10:51:49.116 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:51:49.117 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 10:51:49.118 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 10:51:49.120 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 10:51:49.121 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:51:49.121 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 10:51:49.123 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 10:51:49.124 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 10:51:49.125 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 10:51:49.126 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 10:51:49.126 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 10:51:51.171 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 10:52:07.400 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:52:08.626 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 10:52:12.446 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:52:12.453 [http-nio-8080-exec-9] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:52:12.454 [http-nio-8080-exec-9] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: 232(String), 1212(String)
2019-01-29 10:52:12.457 [http-nio-8080-exec-9] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-01-29 10:52:16.285 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:52:16.289 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:52:16.290 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: 34234(String), 234234(String)
2019-01-29 10:52:16.293 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-01-29 10:52:27.473 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5560 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 10:52:27.477 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 10:52:27.478 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 10:52:27.679 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 10:52:27.862 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:52:27 CST 2019]; root of context hierarchy
2019-01-29 10:52:29.478 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:52:29.487 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 10:52:29.488 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 10:52:29.589 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 10:52:29.589 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1727 ms
2019-01-29 10:52:29.765 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:52:29.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:52:29.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:52:29.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:52:29.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 10:52:29.766 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 10:52:30.735 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 10:52:27 CST 2019]; root of context hierarchy
2019-01-29 10:52:30.796 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 10:52:30.797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 10:52:30.797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 10:52:30.797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 10:52:30.797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:52:30.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 10:52:30.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 10:52:30.798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 10:52:30.799 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 10:52:30.800 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 10:52:30.801 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 10:52:30.801 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 10:52:30.802 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 10:52:30.804 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 10:52:30.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 10:52:30.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 10:52:30.805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 10:52:30.806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 10:52:30.806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 10:52:30.806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:52:30.807 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:52:30.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 10:52:30.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:52:30.808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 10:52:30.809 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:52:30.809 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 10:52:30.810 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:52:30.810 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 10:52:30.811 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 10:52:30.811 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 10:52:30.811 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 10:52:30.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 10:52:30.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 10:52:30.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 10:52:30.812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 10:52:30.813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 10:52:30.813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 10:52:30.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 10:52:30.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 10:52:30.814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 10:52:30.817 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 10:52:30.818 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:52:30.852 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:52:30.852 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:52:30.895 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:52:31.213 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 10:52:31.470 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 10:52:31.491 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:52:31.503 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:52:31.516 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 10:52:31.692 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 10:52:31.698 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.672 seconds (JVM running for 5.788)
2019-01-29 10:52:45.379 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:52:45.380 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:52:45.399 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-29 10:52:45.410 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:52:45.714 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:52:45.735 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-01-29 10:52:45.747 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 10:52:45.762 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:52:53.683 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:52:53.689 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:52:53.690 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: 232(String), 2323(String)
2019-01-29 10:52:53.692 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-01-29 10:52:57.429 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:52:57.434 [http-nio-8080-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:52:57.435 [http-nio-8080-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: 2323(String), 2323(String)
2019-01-29 10:52:57.436 [http-nio-8080-exec-7] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 0
2019-01-29 10:53:01.985 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 10:53:01.987 [http-nio-8080-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 10:53:01.988 [http-nio-8080-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: aaa(String), aaa(String)
2019-01-29 10:53:01.990 [http-nio-8080-exec-8] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 10:53:02.000 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 10:53:20.054 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 10:53:21.323 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 10:53:21.366 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:53:21.367 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:53:21.377 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:53:21.379 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:53:21.380 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:53:21.382 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:53:21.383 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:53:21.383 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:53:21.384 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:53:21.384 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:53:21.385 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:53:21.387 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:53:21.388 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:53:21.389 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:53:21.391 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:53:24.023 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 10:53:24.030 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:53:24.031 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:53:24.034 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:53:27.423 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 10:53:27.445 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 10:53:27.447 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 10:53:27.448 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 10:53:27.449 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 10:53:27.451 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 10:53:27.453 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 10:53:27.454 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 10:53:27.457 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 1(Integer), 3(Integer), 4(Integer), 3(Integer)
2019-01-29 10:53:27.473 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 10:53:28.854 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 10:54:59.686 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 10:55:02.311 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 10:55:03.354 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-01-29 10:55:03.940 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentReject
2019-01-29 10:55:04.904 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 10:55:04.910 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:55:04.920 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:55:04.921 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:55:04.926 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:55:04.931 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:55:04.932 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:55:04.933 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 10:55:04.936 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:55:13.096 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 10:55:13.102 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:55:13.108 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:55:13.109 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:55:13.110 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:55:13.115 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:55:13.115 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:55:13.119 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:55:13.122 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:55:24.422 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 10:55:24.424 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:55:24.428 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:55:24.429 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:55:24.432 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:55:24.439 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:55:24.440 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:55:24.443 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:55:24.446 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:55:26.007 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 10:55:26.008 [http-nio-8080-exec-3] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 10:55:26.011 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:55:26.013 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 10:55:26.015 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 10:55:26.023 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:55:26.024 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:55:26.027 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 10:55:26.033 [http-nio-8080-exec-3] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 10:55:27.076 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 10:55:30.636 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 10:55:30.638 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:55:30.638 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:55:30.640 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:55:30.641 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:30.641 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:55:30.642 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:55:30.643 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:30.643 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:55:30.644 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:55:30.644 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:30.644 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:55:30.645 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:55:30.646 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:30.646 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:55:30.647 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:55:44.291 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 10:55:44.293 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 10:55:44.293 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 10:55:44.295 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 10:55:44.295 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:44.296 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 10:55:44.297 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:55:44.298 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:44.299 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 10:55:44.302 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:55:44.302 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:44.303 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 10:55:44.305 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 10:55:44.307 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 10:55:44.307 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 10:55:44.308 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 10:55:57.720 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 10:55:57.722 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 10:55:57.725 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 10:55:57.725 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 10:55:57.727 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 10:55:57.733 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 10:55:57.734 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 10:55:57.738 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 10:55:57.742 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 10:56:03.673 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:00:46.896 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5360 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 11:00:46.902 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 11:00:46.902 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 11:00:47.329 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 11:00:47.484 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:00:47 CST 2019]; root of context hierarchy
2019-01-29 11:00:49.081 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 11:00:49.097 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 11:00:49.098 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 11:00:49.226 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 11:00:49.227 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1743 ms
2019-01-29 11:00:49.411 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 11:00:49.411 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 11:00:49.411 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 11:00:49.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 11:00:49.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 11:00:49.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 11:00:50.278 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:00:47 CST 2019]; root of context hierarchy
2019-01-29 11:00:50.339 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 11:00:50.340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 11:00:50.341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 11:00:50.341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 11:00:50.341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:00:50.341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 11:00:50.342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 11:00:50.342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 11:00:50.342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 11:00:50.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 11:00:50.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 11:00:50.345 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 11:00:50.345 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 11:00:50.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 11:00:50.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 11:00:50.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 11:00:50.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 11:00:50.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 11:00:50.349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 11:00:50.349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:00:50.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:00:50.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 11:00:50.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:00:50.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 11:00:50.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:00:50.351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:00:50.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:00:50.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 11:00:50.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:00:50.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 11:00:50.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 11:00:50.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 11:00:50.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:00:50.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 11:00:50.355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 11:00:50.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 11:00:50.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:00:50.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 11:00:50.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 11:00:50.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 11:00:50.359 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 11:00:50.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 11:00:50.393 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:00:50.393 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:00:50.435 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:00:50.745 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 11:00:51.013 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 11:00:51.034 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 11:00:51.045 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 11:00:51.059 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 11:00:51.232 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 11:00:51.239 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.806 seconds (JVM running for 6.399)
2019-01-29 11:00:51.289 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 11:00:51.289 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 11:00:51.309 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-29 11:00:51.319 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:00:53.250 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 11:00:55.011 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 11:00:55.321 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 11:00:55.340 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 11:00:55.352 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 11:00:55.360 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:08:15.238 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2832 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 11:08:15.243 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 11:08:15.243 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 11:08:15.520 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 11:08:15.943 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:08:15 CST 2019]; root of context hierarchy
2019-01-29 11:08:17.432 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 11:08:17.442 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 11:08:17.443 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 11:08:17.543 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 11:08:17.543 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1600 ms
2019-01-29 11:08:17.699 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 11:08:17.700 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 11:08:17.700 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 11:08:17.701 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 11:08:17.701 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 11:08:17.701 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 11:08:18.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:08:15 CST 2019]; root of context hierarchy
2019-01-29 11:08:18.564 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 11:08:18.565 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 11:08:18.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 11:08:18.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 11:08:18.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:08:18.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 11:08:18.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 11:08:18.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 11:08:18.567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 11:08:18.568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 11:08:18.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 11:08:18.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 11:08:18.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 11:08:18.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 11:08:18.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 11:08:18.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 11:08:18.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 11:08:18.573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 11:08:18.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 11:08:18.574 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:08:18.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:08:18.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 11:08:18.575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:08:18.576 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 11:08:18.576 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:08:18.576 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:08:18.577 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:08:18.577 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 11:08:18.578 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:08:18.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 11:08:18.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 11:08:18.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 11:08:18.579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:08:18.580 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 11:08:18.580 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 11:08:18.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 11:08:18.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 11:08:18.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:08:18.581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 11:08:18.582 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 11:08:18.584 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 11:08:18.585 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 11:08:18.617 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:08:18.617 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:08:18.659 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:08:18.974 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 11:08:19.253 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 11:08:19.272 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 11:08:19.290 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 11:08:19.303 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 11:08:19.323 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 11:08:19.452 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.98 seconds (JVM running for 6.153)
2019-01-29 11:08:26.128 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 11:08:26.129 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 11:08:26.148 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-29 11:08:26.159 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:08:27.315 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 11:08:28.658 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 11:08:28.972 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 11:08:28.992 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 11:08:29.005 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 11:08:29.012 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:08:31.603 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 11:08:31.610 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 11:08:31.649 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 11:08:31.649 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 11:08:31.653 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 11:08:31.662 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 11:08:31.662 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:08:31.665 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 11:08:31.668 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 11:08:33.000 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:08:35.080 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:08:35.101 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:08:35.102 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:08:35.111 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:08:35.114 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:08:35.116 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:08:35.118 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:08:35.119 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:08:35.119 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:08:35.121 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:08:35.122 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:08:35.123 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:08:35.124 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:08:35.124 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:08:35.125 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:08:35.126 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:08:37.995 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:08:38.005 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:08:38.005 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:08:38.006 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:08:41.422 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 11:08:41.450 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:08:41.451 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:08:41.452 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:08:41.453 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:08:41.454 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:08:41.455 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:08:41.455 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 11:08:41.456 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 4(Integer), 7(Integer)
2019-01-29 11:08:41.458 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 11:08:41.459 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 11:08:41.462 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 1(Integer), 3(Integer), 4(Integer), 5(Integer)
2019-01-29 11:08:41.485 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 11:08:42.856 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:09:12.065 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:09:12.068 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:09:12.069 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:09:12.071 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:09:12.072 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:09:12.073 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:09:12.076 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:09:12.077 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:09:12.079 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:09:12.080 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:09:12.082 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:09:12.082 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:09:12.084 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:09:12.085 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:09:12.085 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:09:12.088 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:09:15.193 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:09:15.202 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:09:15.203 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:09:15.204 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:09:19.456 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 11:09:19.470 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:09:19.471 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:09:19.472 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:09:19.473 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:09:19.474 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:09:19.475 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:09:19.476 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 11:09:19.476 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 9(Integer), 7(Integer)
2019-01-29 11:09:19.515 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 11:09:19.515 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 11:09:19.516 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 4(Integer), 5(Integer), 9(Integer), 5(Integer)
2019-01-29 11:09:19.530 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 11:09:20.856 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:10:11.352 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 11:10:11.354 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 11:10:11.358 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 11:10:11.359 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 11:10:11.361 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 11:10:11.365 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 11:10:11.366 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:10:11.368 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 11:10:11.371 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 11:10:13.212 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 11:10:15.073 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 11:10:15.080 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 11:10:15.081 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 11:10:15.090 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 11:10:18.561 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:10:18.565 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:10:18.567 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:10:18.568 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:10:28.318 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 11:10:28.319 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 11:10:28.320 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 11:10:28.323 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 11:10:33.058 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 11:10:33.065 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 11:10:33.066 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 11:10:33.073 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 11:10:43.233 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:10:44.014 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:10:44.598 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:21:07.763 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 688 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 11:21:07.768 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 11:21:07.768 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 11:21:08.282 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 11:21:08.442 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:21:08 CST 2019]; root of context hierarchy
2019-01-29 11:21:09.871 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 11:21:09.881 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 11:21:09.882 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 11:21:09.988 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 11:21:09.988 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1546 ms
2019-01-29 11:21:10.156 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 11:21:10.156 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 11:21:10.156 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 11:21:10.157 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 11:21:10.157 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 11:21:10.157 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 11:21:11.009 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:21:08 CST 2019]; root of context hierarchy
2019-01-29 11:21:11.066 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 11:21:11.067 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 11:21:11.067 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 11:21:11.067 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 11:21:11.068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:21:11.068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 11:21:11.068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 11:21:11.068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 11:21:11.069 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 11:21:11.070 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 11:21:11.070 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 11:21:11.070 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 11:21:11.070 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 11:21:11.073 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 11:21:11.073 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 11:21:11.073 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 11:21:11.074 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 11:21:11.074 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 11:21:11.074 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 11:21:11.074 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:21:11.075 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:21:11.075 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 11:21:11.076 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:21:11.076 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 11:21:11.076 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:21:11.076 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:21:11.077 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:21:11.077 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 11:21:11.077 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 11:21:11.078 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:21:11.078 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:21:11.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 11:21:11.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 11:21:11.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 11:21:11.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:21:11.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 11:21:11.080 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 11:21:11.080 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 11:21:11.080 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 11:21:11.081 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:21:11.081 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 11:21:11.081 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 11:21:11.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 11:21:11.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 11:21:11.117 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:21:11.117 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:21:11.162 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:21:11.494 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 11:21:11.756 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 11:21:11.777 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 11:21:11.788 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 11:21:11.801 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 11:21:11.819 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 11:21:11.824 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.459 seconds (JVM running for 5.629)
2019-01-29 11:21:17.184 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 11:21:17.184 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 11:21:17.201 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2019-01-29 11:21:17.213 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:21:18.593 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 11:21:20.095 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 11:21:20.395 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 11:21:20.414 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 11:21:20.425 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 11:21:20.433 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:21:23.224 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:21:25.619 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:21:25.664 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:21:25.664 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:21:25.676 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:21:25.677 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:21:25.678 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:21:25.679 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:21:25.680 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:21:25.680 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:21:25.681 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:21:25.682 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:21:25.682 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:21:25.685 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:21:25.686 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:21:25.687 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:21:25.692 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:21:28.962 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:21:28.975 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:21:28.976 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:21:28.978 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:21:32.811 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 11:21:32.833 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:21:32.834 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 11:21:32.837 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 0
2019-01-29 11:21:32.840 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收退货记录出错：java.lang.Exception: 保存待收入库记录出错
2019-01-29 11:22:59.343 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 11:22:59.613 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5548 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 11:22:59.613 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 11:22:59.613 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 11:22:59.899 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:22:59 CST 2019]; root of context hierarchy
2019-01-29 11:23:01.352 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 11:23:01.365 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 11:23:01.366 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 11:23:01.472 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 11:23:01.472 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1573 ms
2019-01-29 11:23:01.679 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 11:23:01.680 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 11:23:01.680 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 11:23:01.680 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 11:23:01.681 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 11:23:01.681 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 11:23:02.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:22:59 CST 2019]; root of context hierarchy
2019-01-29 11:23:02.597 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 11:23:02.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 11:23:02.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 11:23:02.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 11:23:02.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:23:02.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 11:23:02.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 11:23:02.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 11:23:02.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 11:23:02.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 11:23:02.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 11:23:02.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 11:23:02.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 11:23:02.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 11:23:02.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 11:23:02.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 11:23:02.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 11:23:02.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 11:23:02.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 11:23:02.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:23:02.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:23:02.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 11:23:02.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:23:02.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 11:23:02.609 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:23:02.609 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:23:02.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:23:02.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 11:23:02.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 11:23:02.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:23:02.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:23:02.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 11:23:02.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 11:23:02.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 11:23:02.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:23:02.613 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 11:23:02.613 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 11:23:02.614 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 11:23:02.614 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:23:02.614 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 11:23:02.614 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 11:23:02.615 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 11:23:02.617 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 11:23:02.618 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 11:23:02.651 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:23:02.651 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:23:02.694 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:23:02.990 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 11:23:03.241 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 11:23:03.261 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 11:23:03.271 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 11:23:03.283 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 11:23:03.301 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 11:23:03.305 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.734 seconds (JVM running for 5.869)
2019-01-29 11:23:16.933 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 11:23:16.933 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 11:23:16.953 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-29 11:23:16.964 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:23:19.315 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 11:23:19.625 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 11:23:19.646 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 11:23:19.658 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 11:23:19.668 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:23:23.640 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:23:25.235 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:23:25.282 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:23:25.282 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:23:25.289 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:23:25.290 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:23:25.291 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:23:25.292 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:23:25.293 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:23:25.293 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:23:25.295 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:23:25.295 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:23:25.295 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:23:25.296 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:23:25.297 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:23:25.297 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:23:25.298 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:23:27.951 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:23:27.963 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:23:27.964 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:23:27.967 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:23:31.840 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 11:23:31.876 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:23:31.877 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 11:23:31.881 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 0
2019-01-29 11:23:31.883 [http-nio-8080-exec-7] DEBUG com.yun.stock.service.ProductReceiveTradeService - java.lang.Exception: 输入的数据有误，该物品没有库存无法执行退货操作
2019-01-29 11:23:31.885 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收退货记录出错：java.lang.Exception: 保存待收入库记录出错
2019-01-29 11:24:28.011 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2240 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 11:24:28.014 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 11:24:28.015 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 11:24:28.406 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:24:28 CST 2019]; root of context hierarchy
2019-01-29 11:24:28.454 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 11:24:30.068 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 11:24:30.077 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 11:24:30.078 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 11:24:30.173 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 11:24:30.173 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1768 ms
2019-01-29 11:24:30.325 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 11:24:30.326 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 11:24:30.326 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 11:24:30.326 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 11:24:30.326 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 11:24:30.327 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 11:24:31.129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:24:28 CST 2019]; root of context hierarchy
2019-01-29 11:24:31.190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 11:24:31.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 11:24:31.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 11:24:31.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 11:24:31.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 11:24:31.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 11:24:31.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 11:24:31.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:24:31.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 11:24:31.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 11:24:31.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 11:24:31.195 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 11:24:31.195 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 11:24:31.197 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 11:24:31.198 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 11:24:31.198 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:24:31.198 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 11:24:31.198 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 11:24:31.199 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 11:24:31.199 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 11:24:31.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:24:31.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 11:24:31.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:24:31.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 11:24:31.201 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:24:31.201 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:24:31.202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:24:31.202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:24:31.202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 11:24:31.203 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 11:24:31.204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 11:24:31.204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 11:24:31.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:24:31.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 11:24:31.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 11:24:31.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:24:31.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 11:24:31.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 11:24:31.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 11:24:31.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:24:31.207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 11:24:31.207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 11:24:31.210 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 11:24:31.211 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 11:24:31.257 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:24:31.257 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:24:31.304 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:24:31.619 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 11:24:31.889 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 11:24:31.909 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 11:24:31.921 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 11:24:31.934 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 11:24:31.952 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 11:24:31.957 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.431 seconds (JVM running for 5.653)
2019-01-29 11:24:36.771 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 11:24:36.772 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 11:24:36.794 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2019-01-29 11:24:36.804 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:24:38.127 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 11:24:39.611 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 11:24:39.913 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 11:24:39.932 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 11:24:39.944 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 11:24:39.951 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:24:44.094 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:24:45.522 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:24:45.567 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:24:45.568 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:24:45.575 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:24:45.577 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:24:45.577 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:24:45.579 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:24:45.579 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:24:45.580 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:24:45.581 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:24:45.582 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:24:45.582 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:24:45.583 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:24:45.583 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:24:45.584 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:24:45.585 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:24:47.839 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:24:47.849 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:24:47.851 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:24:47.854 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:24:51.739 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 11:24:51.778 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:24:51.780 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 11:24:51.783 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 0
2019-01-29 11:24:51.785 [http-nio-8080-exec-8] DEBUG com.yun.stock.service.ProductReceiveTradeService - java.lang.Exception: 输入的数据有误，该物品没有库存无法执行退货操作
2019-01-29 11:24:51.787 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收退货记录出错：java.lang.Exception: 输入的数据有误，该物品没有库存无法执行退货操作
2019-01-29 11:25:00.235 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 11:25:00.242 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:25:00.244 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-01-29 11:25:00.245 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 0
2019-01-29 11:25:00.248 [http-nio-8080-exec-9] DEBUG com.yun.stock.service.ProductReceiveTradeService - java.lang.Exception: 输入的数据有误，该物品没有库存无法执行退货操作
2019-01-29 11:25:00.251 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveTradeController - 保存待收退货记录出错：java.lang.Exception: 输入的数据有误，该物品没有库存无法执行退货操作
2019-01-29 11:25:19.431 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:25:19.435 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:25:19.435 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:25:19.437 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:25:19.438 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:25:19.439 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:25:19.440 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:25:19.441 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:25:19.442 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:25:19.443 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:25:19.443 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:25:19.443 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:25:19.445 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:25:19.445 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:25:19.446 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:25:19.447 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:25:21.679 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:25:21.685 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:25:21.686 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:25:21.689 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:25:25.614 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 11:25:25.619 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:25:25.620 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:25:25.626 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:25:25.629 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:25:25.630 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:25:25.631 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:25:25.631 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 11:25:25.632 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 6(Integer), 7(Integer)
2019-01-29 11:25:25.633 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 11:25:25.634 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 11:25:25.635 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 9(Integer), null, 6(Integer), 5(Integer)
2019-01-29 11:25:25.677 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 11:25:27.082 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:25:40.389 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:25:41.460 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:25:50.274 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:25:51.731 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:25:52.327 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:25:53.757 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:26:20.964 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:26:22.920 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:26:23.769 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:26:45.272 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:27:07.312 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:27:07.930 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:27:09.053 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:27:10.760 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:27:13.767 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:30:56.026 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:36:36.331 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5480 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 11:36:36.335 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 11:36:36.335 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 11:36:36.767 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:36:36 CST 2019]; root of context hierarchy
2019-01-29 11:36:36.950 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 11:36:38.513 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 11:36:38.523 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 11:36:38.524 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 11:36:38.619 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 11:36:38.619 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1852 ms
2019-01-29 11:36:38.793 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 11:36:38.794 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 11:36:38.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 11:36:38.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 11:36:38.795 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 11:36:38.796 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 11:36:39.674 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 11:36:36 CST 2019]; root of context hierarchy
2019-01-29 11:36:39.733 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 11:36:39.734 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 11:36:39.735 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 11:36:39.735 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 11:36:39.736 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 11:36:39.736 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 11:36:39.736 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 11:36:39.736 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:36:39.737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 11:36:39.737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 11:36:39.738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 11:36:39.738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 11:36:39.738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 11:36:39.741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 11:36:39.741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 11:36:39.741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:36:39.741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 11:36:39.742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 11:36:39.742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 11:36:39.742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 11:36:39.743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:36:39.743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 11:36:39.744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:36:39.744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 11:36:39.744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:36:39.744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 11:36:39.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:36:39.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:36:39.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 11:36:39.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 11:36:39.746 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 11:36:39.746 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 11:36:39.747 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 11:36:39.747 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 11:36:39.747 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 11:36:39.747 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 11:36:39.748 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 11:36:39.748 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 11:36:39.748 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 11:36:39.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 11:36:39.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 11:36:39.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 11:36:39.752 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 11:36:39.753 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 11:36:39.786 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:36:39.786 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:36:39.837 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 11:36:40.181 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 11:36:40.458 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 11:36:40.478 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 11:36:40.489 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 11:36:40.504 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 11:36:40.522 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 11:36:40.656 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.846 seconds (JVM running for 6.058)
2019-01-29 11:36:42.991 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 11:36:42.992 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 11:36:43.011 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-29 11:36:43.022 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:36:44.183 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 11:36:45.494 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 11:36:45.794 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 11:36:45.814 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 11:36:45.826 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 11:36:45.833 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 11:36:49.073 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:36:50.453 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:36:50.491 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:36:50.492 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:36:50.499 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:36:50.500 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:36:50.500 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:36:50.502 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:36:50.502 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:36:50.503 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:36:50.504 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:36:50.505 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:36:50.505 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:36:50.506 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:36:50.507 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:36:50.508 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:36:50.509 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:36:54.442 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:36:54.455 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:36:54.457 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:36:54.460 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:36:59.141 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 11:36:59.161 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:36:59.162 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:36:59.163 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:36:59.165 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:36:59.165 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:36:59.166 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:36:59.167 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 11:36:59.167 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 9(Integer), 7(Integer)
2019-01-29 11:36:59.194 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 11:36:59.195 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 11:36:59.196 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 6(Integer), 3(Integer), 9(Integer), 5(Integer)
2019-01-29 11:36:59.199 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 11:37:03.654 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:37:29.118 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 11:37:29.125 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 11:37:29.134 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 11:37:29.135 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 11:37:29.136 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 11:37:29.142 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 11:37:29.142 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:37:29.144 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 11:37:29.147 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 11:37:31.374 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:37:32.462 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 11:37:32.464 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 11:37:32.464 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 11:37:32.466 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:37:32.467 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:37:32.467 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:37:32.468 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:37:32.470 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:37:32.472 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:37:32.474 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:37:32.474 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:37:32.475 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:37:32.476 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:37:32.477 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:37:32.478 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:37:32.480 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:37:35.008 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:37:35.012 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:37:35.012 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:37:35.015 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:37:38.987 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 11:37:38.997 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:37:38.997 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:37:38.999 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:37:38.999 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 11:37:38.999 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 11:37:39.001 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 11:37:39.001 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 11:37:39.001 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 3(Integer), 7(Integer)
2019-01-29 11:37:39.003 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 11:37:39.004 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 11:37:39.005 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 00:00:00.0(Timestamp), 2(Integer), 8(Integer), 9(Integer), null, 3(Integer), 5(Integer)
2019-01-29 11:37:39.044 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 11:37:45.613 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 11:38:39.815 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:38:43.399 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:38:46.732 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:39:00.312 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 11:39:22.130 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 11:39:22.138 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 11:39:22.144 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 11:39:22.145 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 11:39:22.148 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 11:39:22.155 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 11:39:22.156 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:39:22.160 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 11:39:22.163 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 11:39:23.418 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 11:39:25.060 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 11:39:25.065 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 11:39:25.066 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 11:39:25.072 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 11:39:39.989 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:40:41.728 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 11:40:41.732 [http-nio-8080-exec-5] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 11:40:41.802 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 11:40:41.804 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 11:40:41.804 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 11:40:41.808 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 11:40:41.808 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 11:40:41.810 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 11:40:41.810 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 11:40:41.811 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 11:40:41.812 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 11:40:41.813 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 11:40:41.813 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 11:40:41.816 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 11:40:41.816 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 11:40:41.817 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 11:40:41.817 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 11:40:41.817 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 11:40:42.668 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 11:40:42.673 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 11:40:42.674 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 11:40:42.677 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 11:40:42.686 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 11:40:42.686 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:40:42.690 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:40:42.691 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:42.691 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:40:42.694 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:42.694 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:42.695 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:40:42.696 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:42.696 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:42.697 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:40:42.700 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:40:42.701 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:42.701 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:40:42.702 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:44.573 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 11:40:44.580 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 11:40:44.581 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 11:40:44.583 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 11:40:44.590 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 11:40:44.591 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:40:44.595 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:40:44.596 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:44.597 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:40:44.600 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:44.603 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:44.603 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:40:44.606 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:44.606 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:44.606 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:40:44.608 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:40:44.608 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:44.608 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:40:44.611 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:49.451 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:40:49.459 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:49.460 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:40:49.462 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:53.428 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 11:40:53.437 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 11:40:53.437 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 11:40:53.440 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 11:40:53.447 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 11:40:53.448 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:40:53.452 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 11:40:53.453 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:53.453 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 11:40:53.455 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:53.455 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:53.456 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 11:40:53.457 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:53.457 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:53.457 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:40:53.458 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:40:53.460 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:40:53.461 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 11:40:53.462 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 11:40:56.122 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 11:40:56.125 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 11:40:56.128 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 11:40:56.129 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 11:40:56.134 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 11:40:56.141 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 11:40:56.142 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 11:40:56.146 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-01-29 11:40:56.151 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 11:40:57.969 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 11:41:07.841 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 11:41:07.847 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 11:41:07.848 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 11:41:07.852 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 11:41:10.326 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 11:41:10.329 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 11:41:10.330 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 11:41:10.333 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 11:41:14.370 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 11:41:40.450 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/userList
2019-01-29 11:41:40.457 [http-nio-8080-exec-6] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-29 11:41:40.458 [http-nio-8080-exec-6] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-29 11:41:40.462 [http-nio-8080-exec-6] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 2
2019-01-29 15:36:22.153 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:36:23.695 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 15:36:25.100 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 15:36:25.106 [http-nio-8080-exec-10] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 15:36:25.106 [http-nio-8080-exec-10] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 15:36:25.109 [http-nio-8080-exec-10] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 15:36:25.114 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:36:27.721 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:36:27.740 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/WdatePicker.js
2019-01-29 15:36:27.767 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/WdatePicker.css
2019-01-29 15:36:27.784 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/My97DatePicker.html
2019-01-29 15:36:27.800 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/calendar.js
2019-01-29 15:36:27.801 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/config.js
2019-01-29 15:36:27.814 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/whyGreen/datepicker.css
2019-01-29 15:36:27.814 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/lang/zh-cn.js
2019-01-29 15:36:27.814 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/datepicker.css
2019-01-29 15:38:22.010 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:38:22.075 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 15:38:22.076 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 15:38:22.075 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 15:38:22.082 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 15:38:22.111 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 15:38:22.134 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 15:38:25.774 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:38:26.852 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/img.gif
2019-01-29 15:38:58.522 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3516 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 15:38:58.527 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 15:38:58.528 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 15:38:59.154 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 15:38:59.210 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 15:38:59 CST 2019]; root of context hierarchy
2019-01-29 15:39:00.635 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:39:00.646 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 15:39:00.648 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 15:39:00.752 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 15:39:00.752 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1542 ms
2019-01-29 15:39:00.916 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:39:00.917 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:39:00.917 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:39:00.918 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:39:00.918 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 15:39:00.918 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 15:39:01.703 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 15:38:59 CST 2019]; root of context hierarchy
2019-01-29 15:39:01.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 15:39:01.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 15:39:01.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 15:39:01.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 15:39:01.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:39:01.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 15:39:01.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 15:39:01.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 15:39:01.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 15:39:01.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 15:39:01.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 15:39:01.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 15:39:01.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 15:39:01.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 15:39:01.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 15:39:01.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 15:39:01.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 15:39:01.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 15:39:01.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 15:39:01.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:39:01.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:39:01.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 15:39:01.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:39:01.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 15:39:01.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:39:01.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:39:01.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:39:01.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 15:39:01.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 15:39:01.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:39:01.774 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:39:01.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 15:39:01.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 15:39:01.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 15:39:01.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:39:01.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 15:39:01.776 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 15:39:01.776 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 15:39:01.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:39:01.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 15:39:01.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 15:39:01.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 15:39:01.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 15:39:01.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:39:01.816 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:39:01.816 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:39:01.859 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:39:02.178 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 15:39:02.453 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 15:39:02.473 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:39:02.484 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:39:02.496 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 15:39:02.514 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 15:39:02.644 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.511 seconds (JVM running for 5.855)
2019-01-29 15:39:19.972 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:39:19.973 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:39:19.992 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-29 15:39:20.003 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:39:22.858 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 15:39:23.189 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 15:39:23.209 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 15:39:23.222 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 15:39:23.231 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:39:26.251 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:39:34.372 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:39:34.423 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:39:34.423 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:39:34.437 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:39:34.439 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:39:34.439 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:39:34.441 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:39:34.442 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:39:34.443 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:39:34.444 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:39:34.444 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:39:34.445 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:39:34.446 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:39:34.447 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:39:34.447 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:39:34.449 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:39:37.601 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 15:39:37.615 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:39:37.615 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:39:37.617 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:39:42.076 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 15:39:42.097 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:39:42.100 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 3(Integer), 9(Integer)
2019-01-29 15:39:42.105 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 0
2019-01-29 15:39:42.107 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveStock - ==>  Preparing: insert into product_receive_stock(prod_id,prod_param_id,stock_num)values(?,?,?) 
2019-01-29 15:39:42.108 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveStock - ==> Parameters: 3(Integer), 9(Integer), 3(Integer)
2019-01-29 15:39:42.110 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveStock - <==    Updates: 1
2019-01-29 15:39:42.111 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 15:39:42.112 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 15:39:26.0(Timestamp), 3(Integer), 9(Integer), 0(Integer), 3(Integer), 3(Integer), 5(Integer)
2019-01-29 15:39:42.115 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 15:39:53.486 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:40:31.287 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5532 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 15:40:31.292 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 15:40:31.292 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 15:40:31.650 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 15:40:31.756 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 15:40:31 CST 2019]; root of context hierarchy
2019-01-29 15:40:33.327 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:40:33.337 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 15:40:33.339 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 15:40:33.445 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 15:40:33.445 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1690 ms
2019-01-29 15:40:33.609 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:40:33.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:40:33.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:40:33.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:40:33.611 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 15:40:33.611 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 15:40:34.401 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 15:40:31 CST 2019]; root of context hierarchy
2019-01-29 15:40:34.462 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 15:40:34.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 15:40:34.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 15:40:34.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 15:40:34.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 15:40:34.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 15:40:34.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 15:40:34.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:40:34.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 15:40:34.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 15:40:34.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 15:40:34.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 15:40:34.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 15:40:34.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 15:40:34.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 15:40:34.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:40:34.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 15:40:34.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 15:40:34.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 15:40:34.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 15:40:34.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:40:34.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 15:40:34.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:40:34.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 15:40:34.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:40:34.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:40:34.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:40:34.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:40:34.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 15:40:34.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 15:40:34.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 15:40:34.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 15:40:34.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:40:34.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 15:40:34.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:40:34.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 15:40:34.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 15:40:34.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 15:40:34.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:40:34.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 15:40:34.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 15:40:34.478 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 15:40:34.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 15:40:34.481 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:40:34.523 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:40:34.523 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:40:34.568 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:40:34.891 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 15:40:35.110 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 15:40:35.131 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:40:35.141 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:40:35.154 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 15:40:35.319 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 15:40:35.324 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.615 seconds (JVM running for 5.847)
2019-01-29 15:40:39.803 [http-nio-8080-exec-2] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:40:39.804 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:40:39.822 [http-nio-8080-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-29 15:40:39.833 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:40:42.460 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 15:40:42.795 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 15:40:42.815 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 15:40:42.826 [http-nio-8080-exec-1] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 15:40:42.835 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:40:45.849 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:40:47.849 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:40:47.894 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:40:47.895 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:40:47.904 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:40:47.905 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:40:47.905 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:40:47.907 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:40:47.908 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:40:47.908 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:40:47.909 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:40:47.910 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:40:47.910 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:40:47.911 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:40:47.911 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:40:47.912 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:40:47.913 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:40:50.695 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 15:40:50.706 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:40:50.707 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:40:50.711 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:40:54.494 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 15:40:54.525 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:40:54.525 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:40:54.527 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:40:54.528 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:40:54.529 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:40:54.530 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:40:54.531 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 15:40:54.532 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 7(Integer), 7(Integer)
2019-01-29 15:40:54.537 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 15:40:54.538 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 15:40:54.540 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 15:40:45.0(Timestamp), 2(Integer), 8(Integer), 3(Integer), 4(Integer), 7(Integer), 5(Integer)
2019-01-29 15:40:54.577 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 15:42:22.101 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2644 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 15:42:22.107 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 15:42:22.107 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 15:42:22.532 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 15:42:22 CST 2019]; root of context hierarchy
2019-01-29 15:42:22.724 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 15:42:24.515 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:42:24.527 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 15:42:24.528 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 15:42:24.651 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 15:42:24.651 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2119 ms
2019-01-29 15:42:24.865 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:42:24.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:42:24.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:42:24.866 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:42:24.867 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 15:42:24.867 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 15:42:25.947 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Tue Jan 29 15:42:22 CST 2019]; root of context hierarchy
2019-01-29 15:42:26.030 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 15:42:26.031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 15:42:26.031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 15:42:26.032 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 15:42:26.032 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:42:26.032 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 15:42:26.033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 15:42:26.033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 15:42:26.033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 15:42:26.034 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 15:42:26.035 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 15:42:26.035 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 15:42:26.035 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 15:42:26.039 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 15:42:26.039 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 15:42:26.039 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 15:42:26.039 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 15:42:26.040 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 15:42:26.040 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 15:42:26.040 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:42:26.041 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:42:26.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 15:42:26.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:42:26.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 15:42:26.042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:42:26.043 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:42:26.043 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 15:42:26.044 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:42:26.044 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 15:42:26.044 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:42:26.045 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 15:42:26.045 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:42:26.046 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 15:42:26.046 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 15:42:26.046 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:42:26.046 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 15:42:26.047 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 15:42:26.048 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 15:42:26.048 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 15:42:26.048 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:42:26.048 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 15:42:26.048 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 15:42:26.052 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 15:42:26.052 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:42:26.109 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:42:26.109 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:42:26.174 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:42:26.590 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 15:42:27.082 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 15:42:27.111 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:42:27.125 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:42:27.300 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 15:42:27.324 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 15:42:27.330 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.745 seconds (JVM running for 7.232)
2019-01-29 15:42:35.025 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:42:35.025 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:42:35.052 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-29 15:42:35.068 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:42:40.546 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:42:43.377 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 15:42:43.744 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 15:42:43.767 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 15:42:43.779 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 15:42:43.789 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:42:46.799 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:42:48.999 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:42:49.042 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:42:49.043 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:42:49.054 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:42:49.056 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:42:49.056 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:42:49.059 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:42:49.060 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:42:49.060 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:42:49.062 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:42:49.062 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:42:49.062 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:42:49.063 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:42:49.064 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:42:49.064 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:42:49.065 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:42:51.863 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 15:42:51.869 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:42:51.870 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:42:51.873 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:42:55.966 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 15:42:59.723 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:42:59.730 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:42:59.740 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:42:59.754 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:42:59.759 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:42:59.761 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:42:59.763 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 15:42:59.766 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 10(Integer), 7(Integer)
2019-01-29 15:42:59.783 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 15:42:59.785 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 15:42:59.794 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 15:42:46.0(Timestamp), 2(Integer), 8(Integer), 7(Integer), 3(Integer), 10(Integer), 5(Integer)
2019-01-29 15:42:59.798 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 15:44:01.078 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:44:01.146 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 15:44:01.147 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 15:44:01.155 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 15:44:01.155 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 15:44:01.196 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 15:44:01.216 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 15:44:02.925 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:44:03.972 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:44:03.980 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:44:03.982 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:44:03.987 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:44:03.988 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:03.988 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:44:03.989 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:03.990 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:03.990 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:44:03.991 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:03.992 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:03.993 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:44:03.996 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:44:03.997 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:03.998 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:44:04.000 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:06.103 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 15:44:06.108 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:06.109 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:44:06.112 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:10.466 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveInSave
2019-01-29 15:44:12.489 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:44:12.494 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:44:12.503 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:44:12.505 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:44:12.506 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:44:12.508 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:44:12.509 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 15:44:12.509 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 12(Integer), 7(Integer)
2019-01-29 15:44:12.511 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 15:44:12.511 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 15:44:12.513 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 15:44:02.0(Timestamp), 2(Integer), 8(Integer), 10(Integer), 2(Integer), 12(Integer), 5(Integer)
2019-01-29 15:44:12.560 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 15:44:18.953 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:44:51.355 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 15:44:52.358 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:44:52.364 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:44:52.365 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:44:52.368 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:44:52.370 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:52.370 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:44:52.372 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:52.373 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:52.374 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:44:52.376 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:52.377 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:52.378 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:44:52.379 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:44:52.381 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:52.381 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:44:52.383 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:55.052 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 15:44:55.056 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:44:55.058 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:44:55.060 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:44:58.356 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveRejectSave
2019-01-29 15:44:58.363 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:44:58.364 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:44:58.365 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:44:58.366 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==>  Preparing: select stock_num from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-01-29 15:44:58.366 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-01-29 15:44:58.368 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockNumByProdIdAndProdParamId - <==      Total: 1
2019-01-29 15:44:58.368 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-01-29 15:44:58.369 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 10(Integer), 7(Integer)
2019-01-29 15:44:58.370 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-01-29 15:44:58.370 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==>  Preparing: insert into product_receive_trade(trade_date,prod_id,prod_param_id,begin_num,trade_add,end_num,oper_id)values(?,?,?,?,?,?,?) 
2019-01-29 15:44:58.371 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.insertProductReceiveTrade - ==> Parameters: 2019-01-29 03:44:51.0(Timestamp), 2(Integer), 8(Integer), 12(Integer), null, 10(Integer), 5(Integer)
2019-01-29 15:44:58.394 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.insertProductReceiveTrade - <==    Updates: 1
2019-01-29 15:45:07.040 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 15:49:25.037 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:49:25.040 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:49:25.051 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:49:25.051 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:49:25.052 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:49:25.055 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:49:25.055 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:49:25.131 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:49:25.135 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:49:30.688 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 15:49:31.803 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 15:49:31.805 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 15:49:31.806 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 15:49:31.816 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 15:49:37.085 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:49:37.088 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:49:37.093 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:49:37.094 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:49:37.099 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:49:37.104 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:49:37.105 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:49:37.108 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:49:37.110 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:50:49.770 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 15:50:51.564 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 15:50:51.570 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 15:50:51.571 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 15:50:51.576 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 15:50:54.807 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:50:56.980 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:50:56.986 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:50:56.987 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:50:56.992 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:50:56.993 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:50:56.993 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:50:56.998 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:50:57.000 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:50:57.001 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:50:57.002 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:50:57.003 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:50:57.003 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:50:57.005 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:50:57.005 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:50:57.006 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:50:57.007 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:50:58.992 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:50:58.999 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 15:50:59.000 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %s%(String)
2019-01-29 15:50:59.004 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-29 15:51:04.171 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:51:04.172 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:51:04.175 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:51:04.176 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:51:04.179 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:51:04.186 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:51:04.187 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:51:04.191 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:51:04.195 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:51:08.836 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 15:51:09.898 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:51:09.904 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:51:09.905 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:51:09.909 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:51:09.910 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:51:09.912 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:51:09.917 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:51:09.918 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:51:09.919 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:51:09.923 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:51:09.924 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:51:09.924 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:51:09.926 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:51:09.927 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:51:09.927 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:51:09.929 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:51:13.149 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:51:13.151 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:51:13.160 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:51:13.161 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:51:13.162 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:51:13.166 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:51:13.166 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:51:13.168 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:51:13.170 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:51:14.830 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 15:51:16.250 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 15:51:16.255 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 15:51:16.255 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 15:51:16.258 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 15:57:08.861 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4728 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 15:57:08.865 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 15:57:08.866 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 15:57:09.309 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 15:57:09.373 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 15:57:09 CST 2019]; root of context hierarchy
2019-01-29 15:57:11.101 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:57:11.112 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 15:57:11.113 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 15:57:11.217 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 15:57:11.217 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1844 ms
2019-01-29 15:57:11.374 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:57:11.375 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:57:11.376 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:57:11.376 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:57:11.376 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 15:57:11.376 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 15:57:12.156 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 15:57:09 CST 2019]; root of context hierarchy
2019-01-29 15:57:12.214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 15:57:12.215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 15:57:12.215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 15:57:12.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 15:57:12.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 15:57:12.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 15:57:12.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 15:57:12.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:57:12.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 15:57:12.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 15:57:12.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 15:57:12.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 15:57:12.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 15:57:12.222 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 15:57:12.222 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 15:57:12.223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:57:12.223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 15:57:12.223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 15:57:12.224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 15:57:12.224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 15:57:12.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:57:12.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 15:57:12.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:57:12.225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 15:57:12.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:57:12.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 15:57:12.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:57:12.227 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:57:12.227 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 15:57:12.227 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 15:57:12.228 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 15:57:12.228 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 15:57:12.229 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 15:57:12.229 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 15:57:12.229 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 15:57:12.229 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 15:57:12.230 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 15:57:12.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 15:57:12.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 15:57:12.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 15:57:12.231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 15:57:12.232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 15:57:12.235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 15:57:12.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:57:12.275 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:57:12.276 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:57:12.319 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:57:12.625 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 15:57:12.890 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 15:57:12.909 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:57:12.921 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:57:12.935 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 15:57:13.113 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 15:57:13.119 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.686 seconds (JVM running for 5.849)
2019-01-29 15:57:17.636 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:57:17.636 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:57:17.656 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-29 15:57:17.666 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:57:20.405 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 15:57:20.721 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 15:57:20.741 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 15:57:20.751 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 15:57:20.761 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:57:23.282 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:57:23.288 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:57:23.325 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:57:23.326 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:57:23.327 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:57:23.336 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:57:23.336 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:57:23.339 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:57:23.342 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:57:24.595 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 15:57:25.947 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 15:57:25.959 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 15:57:25.959 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 15:57:25.964 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 15:57:32.369 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 15:57:32.384 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:57:32.386 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:57:32.389 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:57:36.578 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 15:57:36.583 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 15:57:36.585 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:57:36.585 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 15:57:36.587 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 15:57:36.592 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:57:36.593 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:57:36.594 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 15:57:36.597 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 15:57:39.238 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-01-29 15:57:40.347 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 15:57:40.351 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 15:57:40.352 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 15:57:40.356 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 15:57:48.316 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:57:49.513 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:57:49.523 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 15:57:49.524 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 15:57:49.526 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 15:57:49.527 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:57:49.528 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 15:57:49.529 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:57:49.530 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:57:49.531 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 15:57:49.532 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:57:49.533 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:57:49.533 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 15:57:49.535 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 15:57:49.536 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 15:57:49.536 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 15:57:49.538 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 15:57:52.223 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 15:57:52.235 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 15:57:52.237 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %e%(String)
2019-01-29 15:57:52.240 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-29 15:58:13.473 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:58:13.476 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:58:13.480 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:58:13.481 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:58:13.484 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:58:13.492 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:58:13.493 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:58:13.498 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:58:13.500 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:58:15.589 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:58:15.593 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:58:15.595 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:58:15.595 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:58:15.597 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:58:15.600 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:58:15.601 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:58:15.605 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:58:15.609 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:58:23.228 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:58:24.505 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 15:58:25.177 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 15:58:26.685 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-01-29 15:58:27.426 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 15:59:31.447 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 15:59:31.523 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 15:59:31.549 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 15:59:31.559 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 15:59:31.559 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 15:59:31.589 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 15:59:31.637 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 15:59:34.155 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 15:59:35.026 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 15:59:35.028 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 15:59:35.033 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 15:59:35.034 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 15:59:35.035 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 15:59:35.039 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 15:59:35.040 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 15:59:35.043 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 15:59:35.048 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 15:59:36.183 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 15:59:37.473 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 15:59:37.477 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 15:59:37.478 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 15:59:37.486 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:00:00.503 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:00:00.567 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:00:00.568 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:00:00.570 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:00:00.567 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:00:00.602 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:00:00.620 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:00:02.603 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:00:02.604 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:00:02.607 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:00:02.608 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:00:02.611 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:00:02.615 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:00:02.616 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:00:02.619 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:00:02.622 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:00:03.768 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 16:00:05.056 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:00:05.060 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:00:05.061 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:00:05.064 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:00:09.729 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:00:09.780 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:01:00.072 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:01:00.120 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:04:23.854 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:04:23.942 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:04:23.942 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:04:23.947 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:04:23.957 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:04:23.983 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:04:24.024 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:04:24.036 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:04:30.660 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:04:30.661 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:04:30.662 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:04:30.663 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:04:30.664 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:04:30.667 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:04:30.667 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:04:30.669 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:04:30.671 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:04:30.789 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:04:30.795 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:04:33.503 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 16:04:33.617 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:04:33.622 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:04:34.860 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:04:34.866 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:04:34.867 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:04:34.880 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:04:36.777 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:04:36.781 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:04:36.783 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:04:36.788 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:04:41.135 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:04:41.140 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:04:41.141 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:04:41.147 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:04:43.389 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:04:43.393 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:04:43.394 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:04:43.399 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:04:49.600 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:04:49.608 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:04:49.609 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:04:49.613 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:04:52.698 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 16:04:54.582 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:04:54.590 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:04:54.591 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:04:54.593 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:04:54.594 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:04:54.595 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:04:54.596 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:04:54.596 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:04:54.597 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:04:54.598 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:04:54.598 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:04:54.599 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:04:54.600 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:04:54.600 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:04:54.601 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:04:54.603 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:04:56.666 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:04:56.673 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 16:04:56.674 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String)
2019-01-29 16:04:56.675 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-29 16:05:00.355 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 16:05:01.723 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:05:01.732 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:05:01.732 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:05:01.734 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:05:01.735 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:01.735 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:05:01.736 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:01.737 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:01.737 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:05:01.738 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:01.739 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:01.739 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:05:01.740 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:05:01.741 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:01.741 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:05:01.743 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:03.243 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:05:03.251 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 16:05:03.260 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String)
2019-01-29 16:05:03.262 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-29 16:05:08.687 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:05:08.689 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:05:08.693 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:05:08.693 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:05:08.695 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:05:08.699 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:05:08.701 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:05:08.703 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:05:08.706 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:05:09.632 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:05:09.634 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:05:09.636 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:05:09.637 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:05:09.639 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:05:09.647 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:05:09.648 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:05:09.651 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 16:05:09.654 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:05:11.061 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-01-29 16:05:12.437 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForStock
2019-01-29 16:05:12.439 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where p.prod_state=0 and prod_id not in(select prod_id from product_stock) 
2019-01-29 16:05:12.439 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - ==> Parameters: 
2019-01-29 16:05:12.440 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.productListForStock - <==      Total: 4
2019-01-29 16:05:27.678 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 16:05:27.685 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 16:05:27.685 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 16:05:27.687 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 16:05:27.690 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 16:05:27.691 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:05:27.695 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:05:27.696 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:27.696 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:05:27.697 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:27.698 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:27.699 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:05:27.702 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:27.703 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:27.703 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:05:27.705 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:05:27.705 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:27.706 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:05:27.707 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:28.598 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 16:05:28.602 [http-nio-8080-exec-3] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 16:05:28.655 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 16:05:28.657 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:28.657 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 16:05:28.661 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:28.662 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 16:05:28.663 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:28.664 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 16:05:28.665 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:05:28.665 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:05:28.666 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:28.666 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 16:05:28.668 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:28.668 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 16:05:28.669 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:05:28.669 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:05:28.669 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 16:05:33.134 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 16:05:33.135 [http-nio-8080-exec-7] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 16:05:33.193 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 16:05:33.195 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:33.195 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 16:05:33.197 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:33.197 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 16:05:33.198 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:33.198 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 16:05:33.199 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:05:33.199 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:05:33.200 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:33.200 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 16:05:33.202 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:33.202 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 16:05:33.203 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:05:33.203 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:05:33.203 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 16:05:34.183 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 16:05:34.188 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 16:05:34.188 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 16:05:34.191 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 16:05:34.194 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 16:05:34.195 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:05:34.196 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:05:34.197 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:34.197 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:05:34.198 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:34.199 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:34.199 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:05:34.200 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:34.200 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:34.201 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:05:34.202 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:05:34.202 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:05:34.202 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:05:34.203 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:05:35.565 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 16:05:35.566 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 16:05:35.614 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 16:05:35.615 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:35.616 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 16:05:35.618 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:35.618 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 16:05:35.622 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:35.622 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 16:05:35.623 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:05:35.624 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:05:35.624 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:35.625 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 16:05:35.627 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:05:35.627 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 16:05:35.628 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:05:35.629 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:05:35.629 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 16:07:41.807 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:07:41.869 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:07:41.872 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:07:41.876 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:07:41.880 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:07:41.917 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:07:41.944 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:07:45.449 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:07:45.450 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:07:45.451 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:07:45.451 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:07:45.452 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:07:45.454 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:07:45.454 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:07:45.457 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:07:45.459 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:07:46.673 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 16:07:47.982 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:07:47.986 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:07:47.987 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:07:47.990 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:07:47.991 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:07:47.992 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:07:47.993 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:07:47.993 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:07:47.994 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:07:47.995 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:07:47.995 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:07:47.995 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:07:47.996 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:07:47.997 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:07:47.997 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:07:47.998 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:07:49.726 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:07:49.734 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 16:07:49.735 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String)
2019-01-29 16:07:49.736 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-29 16:08:02.523 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:08:02.529 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 16:08:02.530 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %玩%(String)
2019-01-29 16:08:02.535 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 2
2019-01-29 16:08:02.535 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:02.536 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:08:02.538 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:02.542 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:02.543 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:08:02.544 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:08:14.238 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:08:14.240 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:08:14.243 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:08:14.244 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:08:14.245 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:08:14.248 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:08:14.249 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:08:14.251 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:08:14.253 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:08:15.333 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-01-29 16:08:16.249 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:08:16.251 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:08:16.251 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:08:16.253 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:08:16.253 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:16.254 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:08:16.255 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:16.255 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:16.256 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:08:16.257 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:16.257 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:16.258 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:08:16.259 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:08:16.259 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:16.259 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:08:16.260 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:24.018 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:08:24.022 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 16:08:24.024 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %玩%(String)
2019-01-29 16:08:24.026 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 2
2019-01-29 16:08:24.027 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:24.027 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:08:24.029 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:24.029 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:24.030 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:08:24.033 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:08:27.237 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:08:27.239 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:08:27.242 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:08:27.243 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:08:27.245 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:08:27.250 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:08:27.251 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:08:27.253 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 16:08:27.256 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:08:28.196 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-01-29 16:08:29.157 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:08:29.161 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:08:29.161 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:08:29.163 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:08:29.163 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:29.164 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:08:29.165 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:29.165 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:29.169 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:08:29.171 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:29.171 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:29.171 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:08:29.174 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:08:29.174 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:29.174 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:08:29.178 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:34.815 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:08:34.819 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:08:34.822 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:08:34.823 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:08:34.824 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:08:34.827 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:08:34.828 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:08:34.829 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 16:08:34.833 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:08:35.745 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-01-29 16:08:38.151 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:08:38.153 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:08:38.153 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:08:38.155 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:08:38.156 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:38.156 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:08:38.158 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:38.159 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:38.159 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:08:38.160 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:38.161 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:38.161 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:08:38.162 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:08:38.162 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:08:38.162 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:08:38.163 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:08:41.656 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:08:41.697 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:09:03.844 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:09:03.940 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:09:03.941 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:09:03.942 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:09:03.956 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:09:04.033 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:09:04.094 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:09:04.116 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:09:08.718 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:09:08.720 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:09:08.722 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:09:08.723 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:09:08.724 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:09:08.727 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:09:08.728 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:09:08.729 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 16:09:08.731 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:09:09.927 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-01-29 16:09:11.059 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:09:11.063 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:09:11.064 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:09:11.065 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:09:11.066 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:11.066 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:09:11.067 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:11.067 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:11.067 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:09:11.070 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:11.070 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:11.070 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:09:11.072 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:09:11.072 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:11.072 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:09:11.073 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:18.826 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:09:18.849 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:09:47.936 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:09:48.012 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:09:48.013 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:09:48.013 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:09:48.017 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:09:48.071 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css.map
2019-01-29 16:09:48.136 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:09:48.158 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.map
2019-01-29 16:09:51.248 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:09:51.249 [http-nio-8080-exec-4] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:09:51.253 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:09:51.254 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:09:51.257 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:09:51.262 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:09:51.263 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:09:51.264 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-29 16:09:51.265 [http-nio-8080-exec-4] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:09:52.302 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-01-29 16:09:53.162 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:09:53.166 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-29 16:09:53.166 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-29 16:09:53.169 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:09:53.169 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:53.170 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:09:53.171 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:53.171 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:53.172 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:09:53.173 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:53.173 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:53.173 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:09:53.174 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:09:53.175 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:53.175 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:09:53.177 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:58.320 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-01-29 16:09:58.327 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-29 16:09:58.328 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %玩%(String)
2019-01-29 16:09:58.331 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 2
2019-01-29 16:09:58.332 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:58.332 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:09:58.334 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:09:58.335 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:09:58.336 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:09:58.338 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:10:03.030 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-01-29 16:10:03.036 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:10:03.037 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:10:03.040 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:10:12.707 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockSave
2019-01-29 16:10:12.725 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductStockDao.insertProductStock - ==>  Preparing: insert into product_stock(prod_id,prod_param_id,stock_num)values(?,?,?) 
2019-01-29 16:10:12.725 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductStockDao.insertProductStock - ==> Parameters: 3(Integer), 9(Integer), 30(Integer)
2019-01-29 16:10:12.764 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductStockDao.insertProductStock - <==    Updates: 1
2019-01-29 16:10:12.862 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:10:12.862 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:10:12.863 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:10:12.863 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:10:12.864 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:10:12.865 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:10:12.866 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:10:12.866 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 16:10:12.867 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:10:18.727 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:10:18.728 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:10:18.732 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:10:18.732 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:10:18.735 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:10:18.740 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:10:18.741 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:10:18.744 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:10:18.746 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:10:19.857 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:10:19.859 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:10:19.862 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:10:19.863 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:10:19.865 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:10:19.871 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:10:19.872 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:10:19.875 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 16:10:19.879 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:10:21.316 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 16:10:23.408 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 16:10:24.451 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 16:10:28.394 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 16:10:31.082 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:10:31.083 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:10:31.088 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:10:31.089 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:10:31.095 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:10:31.101 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:10:31.102 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:10:31.104 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:10:31.106 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:12:53.916 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:12:53.982 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:12:53.982 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:12:53.985 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:12:53.985 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:12:54.012 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:12:54.041 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:12:56.007 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:12:56.009 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:12:56.012 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:12:56.013 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:12:56.016 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:12:56.020 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:12:56.021 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:12:56.025 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:12:56.028 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:13:01.210 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:13:01.212 [http-nio-8080-exec-3] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:13:01.215 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:13:01.216 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:13:01.221 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:13:01.224 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:13:01.224 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:13:01.226 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 16:13:01.228 [http-nio-8080-exec-3] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:13:02.774 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-01-29 16:13:04.997 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-01-29 16:13:06.818 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-01-29 16:13:08.328 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-01-29 16:13:09.043 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentReject
2019-01-29 16:13:14.546 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 16:13:14.547 [http-nio-8080-exec-5] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 16:13:14.601 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 16:13:14.605 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:14.605 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 16:13:14.607 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:14.607 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 16:13:14.609 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:14.609 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 16:13:14.610 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:13:14.610 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:13:14.611 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:14.611 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 16:13:14.613 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:14.614 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 16:13:14.616 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:13:14.616 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:13:14.616 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 16:13:15.224 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 16:13:15.227 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 16:13:15.227 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 16:13:15.229 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 16:13:15.233 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 16:13:15.234 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:13:15.235 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:13:15.235 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:13:15.235 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:13:15.236 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:13:15.236 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:13:15.236 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:13:15.238 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:13:15.238 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:13:15.238 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:13:15.239 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:13:15.240 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:13:15.240 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:13:15.240 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:13:16.639 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-01-29 16:13:16.642 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-29 16:13:16.716 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-01-29 16:13:16.717 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:16.717 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-29 16:13:16.718 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:16.718 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-29 16:13:16.719 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:16.719 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-29 16:13:16.720 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:13:16.721 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:13:16.721 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:16.721 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-29 16:13:16.723 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-29 16:13:16.723 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-29 16:13:16.724 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-29 16:13:16.724 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-29 16:13:16.724 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-29 16:13:34.259 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:13:34.260 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:13:34.264 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:13:34.264 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:13:34.266 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:13:34.274 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:13:34.274 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:13:34.276 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:13:34.281 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:15:05.811 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:15:05.867 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:15:05.870 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:15:05.871 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:15:05.873 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:15:05.897 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:15:05.923 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:15:08.193 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:15:08.195 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:15:08.200 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:15:08.201 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:15:08.204 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:15:08.211 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:15:08.212 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:15:08.214 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:15:08.215 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:15:30.738 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:15:30.774 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:15:30.774 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:15:30.777 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:15:30.777 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:15:30.805 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:15:30.826 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:15:33.546 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:15:33.549 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:15:33.552 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:15:33.553 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:15:33.555 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:15:33.561 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:15:33.562 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:15:33.563 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:15:33.565 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:19:59.190 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5676 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 16:19:59.195 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 16:19:59.195 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 16:19:59.572 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@9353778: startup date [Tue Jan 29 16:19:59 CST 2019]; root of context hierarchy
2019-01-29 16:19:59.656 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 16:20:01.311 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 16:20:01.320 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 16:20:01.322 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 16:20:01.420 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 16:20:01.420 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1848 ms
2019-01-29 16:20:01.609 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 16:20:01.609 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 16:20:01.609 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 16:20:01.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 16:20:01.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 16:20:01.610 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 16:20:02.404 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@9353778: startup date [Tue Jan 29 16:19:59 CST 2019]; root of context hierarchy
2019-01-29 16:20:02.459 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 16:20:02.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 16:20:02.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 16:20:02.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 16:20:02.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 16:20:02.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 16:20:02.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 16:20:02.462 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:20:02.462 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 16:20:02.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 16:20:02.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 16:20:02.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 16:20:02.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 16:20:02.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 16:20:02.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 16:20:02.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:20:02.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 16:20:02.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 16:20:02.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 16:20:02.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 16:20:02.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:20:02.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 16:20:02.468 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:20:02.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 16:20:02.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:20:02.469 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:20:02.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:20:02.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 16:20:02.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 16:20:02.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:20:02.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:20:02.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 16:20:02.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 16:20:02.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 16:20:02.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:20:02.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 16:20:02.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 16:20:02.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 16:20:02.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:20:02.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 16:20:02.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 16:20:02.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 16:20:02.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 16:20:02.477 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:20:02.510 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:20:02.510 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:20:02.555 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:20:02.848 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 16:20:03.098 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 16:20:03.117 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 16:20:03.127 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 16:20:03.139 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 16:20:03.305 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 16:20:03.310 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.49 seconds (JVM running for 5.614)
2019-01-29 16:20:12.609 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 16:20:12.610 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 16:20:12.637 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-29 16:20:12.647 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:20:14.002 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-01-29 16:20:15.484 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 16:20:15.781 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 16:20:15.800 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 16:20:15.811 [http-nio-8080-exec-3] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 16:20:15.818 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:20:21.292 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:20:21.296 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:20:21.332 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:20:21.332 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:20:21.333 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:20:21.342 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:20:21.342 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:20:21.346 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:20:21.348 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:20:23.422 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:20:23.424 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:20:23.427 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:20:23.428 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:20:23.430 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:20:23.435 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:20:23.436 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:20:23.441 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:20:23.449 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:21:27.159 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:21:27.221 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:21:27.232 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:21:27.233 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:21:27.243 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:21:27.287 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:21:27.320 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:21:30.220 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:21:30.222 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:21:30.227 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:21:30.229 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:21:30.232 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:21:30.235 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:21:30.237 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:21:30.240 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:21:30.242 [http-nio-8080-exec-7] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:21:31.440 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockToCurrentStock
2019-01-29 16:22:33.399 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 792 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 16:22:33.404 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 16:22:33.404 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 16:22:33.762 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:22:33 CST 2019]; root of context hierarchy
2019-01-29 16:22:34.119 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 16:22:35.427 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 16:22:35.438 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 16:22:35.439 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 16:22:35.543 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 16:22:35.544 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1782 ms
2019-01-29 16:22:35.722 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 16:22:35.722 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 16:22:35.723 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 16:22:35.723 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 16:22:35.723 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 16:22:35.723 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 16:22:36.578 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:22:33 CST 2019]; root of context hierarchy
2019-01-29 16:22:36.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 16:22:36.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 16:22:36.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 16:22:36.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 16:22:36.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:22:36.635 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 16:22:36.635 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 16:22:36.635 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 16:22:36.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 16:22:36.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 16:22:36.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 16:22:36.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 16:22:36.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 16:22:36.640 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 16:22:36.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 16:22:36.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 16:22:36.642 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 16:22:36.642 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 16:22:36.643 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 16:22:36.643 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:22:36.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:22:36.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 16:22:36.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:22:36.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 16:22:36.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:22:36.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:22:36.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:22:36.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 16:22:36.648 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 16:22:36.648 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-01-29 16:22:36.648 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:22:36.649 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:22:36.650 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 16:22:36.650 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 16:22:36.650 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 16:22:36.651 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:22:36.651 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 16:22:36.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 16:22:36.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 16:22:36.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:22:36.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 16:22:36.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 16:22:36.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 16:22:36.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 16:22:36.657 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:22:36.688 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:22:36.688 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:22:36.729 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:22:37.020 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 16:22:37.269 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 16:22:37.289 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 16:22:37.300 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 16:22:37.313 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 16:22:37.482 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 16:22:37.486 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.615 seconds (JVM running for 5.753)
2019-01-29 16:22:45.746 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 16:22:45.746 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 16:22:45.764 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-29 16:22:45.774 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:22:48.488 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 16:22:48.793 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 16:22:48.812 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 16:22:48.823 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 16:22:48.833 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:22:51.659 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-01-29 16:22:51.704 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-29 16:22:51.705 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-29 16:22:51.706 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-29 16:22:51.716 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-29 16:22:51.717 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:22:51.719 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-29 16:22:51.721 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:22:51.721 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-29 16:22:51.723 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:22:51.723 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:22:51.724 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-01-29 16:22:51.725 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:22:51.725 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:22:51.725 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-29 16:22:51.727 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-29 16:22:51.727 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-29 16:22:51.727 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-29 16:22:51.728 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-29 16:22:57.379 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-01-29 16:22:57.384 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-29 16:22:57.393 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:22:57.394 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-29 16:22:57.399 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-29 16:22:57.406 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:22:57.408 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:22:57.410 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 1
2019-01-29 16:22:57.413 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-29 16:22:58.410 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:22:58.414 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:22:58.415 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:22:58.416 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:22:58.418 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:22:58.422 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:22:58.423 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:22:58.426 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:22:58.429 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:23:56.678 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4752 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 16:23:56.683 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 16:23:56.683 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 16:23:57.029 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 16:23:57.090 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:23:57 CST 2019]; root of context hierarchy
2019-01-29 16:23:58.613 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 16:23:58.623 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 16:23:58.624 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 16:23:58.719 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 16:23:58.719 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1629 ms
2019-01-29 16:23:58.884 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 16:23:58.885 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 16:23:58.885 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 16:23:58.885 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 16:23:58.886 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 16:23:58.886 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 16:23:59.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:23:57 CST 2019]; root of context hierarchy
2019-01-29 16:23:59.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 16:23:59.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 16:23:59.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 16:23:59.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 16:23:59.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 16:23:59.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 16:23:59.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 16:23:59.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:23:59.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 16:23:59.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 16:23:59.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 16:23:59.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 16:23:59.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 16:23:59.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 16:23:59.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 16:23:59.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:23:59.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 16:23:59.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 16:23:59.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 16:23:59.774 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 16:23:59.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:23:59.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 16:23:59.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:23:59.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 16:23:59.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:23:59.776 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:23:59.776 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-01-29 16:23:59.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:23:59.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:23:59.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 16:23:59.777 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 16:23:59.778 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 16:23:59.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 16:23:59.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:23:59.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 16:23:59.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:23:59.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 16:23:59.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 16:23:59.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 16:23:59.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:23:59.781 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 16:23:59.781 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 16:23:59.781 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 16:23:59.784 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 16:23:59.784 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:23:59.817 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:23:59.817 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:23:59.859 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:24:00.151 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 16:24:00.430 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 16:24:00.452 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 16:24:00.464 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 16:24:00.477 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 16:24:00.495 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 16:24:00.499 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.427 seconds (JVM running for 5.573)
2019-01-29 16:24:04.979 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 16:24:04.980 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 16:24:04.999 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-29 16:24:05.009 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:24:12.724 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 16:24:13.041 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 16:24:13.060 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 16:24:13.071 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 16:24:13.083 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:24:49.914 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4996 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 16:24:49.941 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 16:24:49.941 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 16:24:50.355 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 16:24:50.447 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:24:50 CST 2019]; root of context hierarchy
2019-01-29 16:24:52.074 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 16:24:52.087 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 16:24:52.088 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 16:24:52.207 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 16:24:52.207 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1761 ms
2019-01-29 16:24:52.386 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 16:24:52.387 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 16:24:52.387 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 16:24:52.387 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 16:24:52.387 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 16:24:52.387 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 16:24:53.355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:24:50 CST 2019]; root of context hierarchy
2019-01-29 16:24:53.425 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 16:24:53.426 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 16:24:53.427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 16:24:53.427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 16:24:53.427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:24:53.427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 16:24:53.428 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 16:24:53.428 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 16:24:53.428 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 16:24:53.429 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 16:24:53.429 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 16:24:53.430 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 16:24:53.430 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 16:24:53.432 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 16:24:53.433 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 16:24:53.433 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 16:24:53.433 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 16:24:53.433 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 16:24:53.434 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 16:24:53.434 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:24:53.435 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:24:53.435 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 16:24:53.435 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:24:53.435 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 16:24:53.436 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:24:53.436 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:24:53.437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-01-29 16:24:53.437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:24:53.437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 16:24:53.437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 16:24:53.437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:24:53.438 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:24:53.439 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 16:24:53.439 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 16:24:53.439 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 16:24:53.439 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:24:53.439 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 16:24:53.440 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 16:24:53.440 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 16:24:53.440 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:24:53.441 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 16:24:53.441 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 16:24:53.441 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 16:24:53.444 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 16:24:53.445 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:24:53.480 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:24:53.480 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:24:53.521 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:24:53.840 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 16:24:54.059 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 16:24:54.083 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 16:24:54.096 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 16:24:54.286 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 16:24:54.308 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 16:24:54.314 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.977 seconds (JVM running for 6.296)
2019-01-29 16:25:52.658 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 16:25:52.658 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 16:25:52.677 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-29 16:25:52.688 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:25:58.374 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 16:25:58.708 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 16:25:58.729 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 16:25:58.739 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 16:25:58.751 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:26:01.798 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:26:01.805 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:26:01.844 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:26:01.845 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:26:01.846 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:26:01.855 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:26:01.855 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:26:01.858 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:26:01.860 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:26:04.911 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockToCurrentStock
2019-01-29 16:26:04.922 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-01-29 16:26:04.924 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 7(Integer)
2019-01-29 16:26:04.928 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-01-29 16:33:45.749 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:33:45.825 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-01-29 16:33:45.833 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-01-29 16:33:45.836 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-01-29 16:33:45.837 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-01-29 16:33:45.877 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-01-29 16:33:45.898 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-01-29 16:33:49.435 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:33:49.438 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:33:49.443 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:33:49.446 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:33:49.451 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:33:49.460 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:33:49.461 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:33:49.466 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:33:49.469 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:33:50.846 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockToCurrentStock
2019-01-29 16:33:50.848 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-01-29 16:33:50.849 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 7(Integer)
2019-01-29 16:33:50.851 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-01-29 16:36:17.083 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:36:17.084 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:36:17.090 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:36:17.091 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:36:17.093 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:36:17.096 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:36:17.097 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:36:17.099 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:36:17.102 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:36:18.305 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockToCurrentStock
2019-01-29 16:36:18.309 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-01-29 16:36:18.309 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 7(Integer)
2019-01-29 16:36:18.311 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-01-29 16:36:18.326 [http-nio-8080-exec-9] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-9] Exception processing template "stock/productReceiveToCurrent": Error formatting date with format pattern "yyyy-MM-dd HH:mm:ss" (stock/productReceiveToCurrent)
2019-01-29 16:36:18.331 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd HH:mm:ss" (stock/productReceiveToCurrent)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:130)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-29 16:37:18.321 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5524 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-29 16:37:18.327 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-29 16:37:18.328 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-29 16:37:18.861 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:37:18 CST 2019]; root of context hierarchy
2019-01-29 16:37:19.077 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-29 16:37:20.487 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-29 16:37:20.498 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-29 16:37:20.499 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-29 16:37:20.596 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-29 16:37:20.597 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1736 ms
2019-01-29 16:37:20.770 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 16:37:20.771 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 16:37:20.771 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 16:37:20.771 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 16:37:20.772 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-01-29 16:37:20.772 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-29 16:37:21.586 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Tue Jan 29 16:37:18 CST 2019]; root of context hierarchy
2019-01-29 16:37:21.643 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-29 16:37:21.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-01-29 16:37:21.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-01-29 16:37:21.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-29 16:37:21.644 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-29 16:37:21.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-29 16:37:21.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-29 16:37:21.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:37:21.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-29 16:37:21.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-29 16:37:21.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-29 16:37:21.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-29 16:37:21.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-29 16:37:21.649 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-29 16:37:21.650 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-29 16:37:21.650 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-29 16:37:21.650 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-29 16:37:21.651 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-29 16:37:21.651 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-29 16:37:21.651 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:37:21.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:37:21.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-01-29 16:37:21.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:37:21.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-01-29 16:37:21.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:37:21.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-01-29 16:37:21.654 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-01-29 16:37:21.654 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:37:21.654 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-01-29 16:37:21.655 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-01-29 16:37:21.655 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:37:21.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-29 16:37:21.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-29 16:37:21.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-29 16:37:21.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-01-29 16:37:21.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-01-29 16:37:21.656 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-01-29 16:37:21.657 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-29 16:37:21.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-29 16:37:21.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-29 16:37:21.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-29 16:37:21.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-29 16:37:21.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-29 16:37:21.661 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-29 16:37:21.662 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:37:21.695 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:37:21.695 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:37:21.736 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:37:22.043 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-29 16:37:22.294 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-29 16:37:22.315 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 16:37:22.326 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 16:37:22.339 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-29 16:37:22.356 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-29 16:37:22.494 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.538 seconds (JVM running for 6.088)
2019-01-29 16:37:25.878 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 16:37:25.879 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 16:37:25.899 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-29 16:37:25.908 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:37:31.746 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-01-29 16:37:32.055 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-29 16:37:32.074 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-29 16:37:32.085 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-29 16:37:32.095 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-01-29 16:37:34.737 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:37:34.745 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:37:34.794 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:37:34.794 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:37:34.795 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:37:34.804 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:37:34.805 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:37:34.807 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:37:34.809 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:37:36.037 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockToCurrentStock
2019-01-29 16:37:36.054 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-01-29 16:37:36.055 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 7(Integer)
2019-01-29 16:37:36.057 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-01-29 16:37:45.494 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-01-29 16:37:45.496 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-01-29 16:37:45.499 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-29 16:37:45.499 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-01-29 16:37:45.501 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-01-29 16:37:45.504 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-29 16:37:45.505 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-29 16:37:45.508 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 2
2019-01-29 16:37:45.512 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-01-29 16:37:47.120 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockToCurrentStock
2019-01-29 16:37:47.128 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-01-29 16:37:47.129 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 7(Integer)
2019-01-29 16:37:47.132 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
