2019-01-25 08:56:54.898 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4892 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 08:56:54.945 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 08:56:54.945 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 08:56:56.286 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 08:56:57.238 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 08:56:57 CST 2019]; root of context hierarchy
2019-01-25 08:57:02.183 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 08:57:02.261 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 08:57:02.292 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 08:57:02.729 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 08:57:02.729 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5491 ms
2019-01-25 08:57:02.932 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 08:57:02.932 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 08:57:02.932 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 08:57:02.932 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 08:57:02.932 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 08:57:05.007 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 08:56:57 CST 2019]; root of context hierarchy
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 08:57:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 08:57:05.178 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 08:57:05.178 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 08:57:05.241 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 08:57:05.241 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 08:57:05.319 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 08:57:06.426 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 08:57:06.785 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 08:57:06.879 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 08:57:06.910 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 08:57:06.925 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 08:57:06.957 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 08:57:06.972 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 14.024 seconds (JVM running for 22.238)
2019-01-25 08:57:45.080 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 08:57:45.080 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 08:57:45.168 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-01-25 08:57:52.416 [http-nio-8080-exec-5] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-25 08:57:52.436 [http-nio-8080-exec-5] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-25 08:57:52.505 [http-nio-8080-exec-5] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-25 08:57:54.862 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 08:57:54.863 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 08:57:54.962 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 08:57:54.982 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 08:57:54.984 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 08:57:54.989 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 08:57:54.990 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:57:54.991 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 08:57:54.994 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:57:54.994 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:57:54.995 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 08:57:54.995 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:57:54.996 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:57:54.996 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 08:57:54.997 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:57:54.998 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:57:54.998 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 08:57:54.999 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:57:54.999 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:57:55.000 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 08:57:55.001 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:17.914 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 08:59:17.914 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 08:59:17.929 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 08:59:17.933 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 08:59:17.936 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 08:59:17.938 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 08:59:17.939 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:17.939 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 08:59:17.940 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:17.941 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:17.941 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 08:59:17.942 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:17.942 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:17.942 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 08:59:17.943 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:17.944 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:17.944 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 08:59:17.944 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:17.945 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:17.945 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 08:59:17.946 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:36.860 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 08:59:36.863 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 08:59:36.868 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 08:59:36.871 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 08:59:36.872 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 08:59:36.875 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 08:59:36.876 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:36.877 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 08:59:36.879 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:36.879 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:36.880 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 08:59:36.881 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:36.882 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:36.882 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 08:59:36.883 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:36.883 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:36.884 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 08:59:36.885 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:36.886 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:36.886 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 08:59:36.887 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:42.867 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 08:59:42.867 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 08:59:42.867 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 08:59:42.885 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 08:59:42.885 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 08:59:42.893 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 08:59:42.894 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:42.895 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 08:59:42.896 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:42.897 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:42.897 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 08:59:42.898 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:42.899 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:42.899 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 08:59:42.900 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:42.900 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:42.900 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 08:59:42.901 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 08:59:42.901 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 08:59:42.902 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 08:59:42.902 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:25:47.571 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3684 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 09:25:47.587 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 09:25:47.587 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 09:25:48.320 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 09:25:48.429 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:25:48 CST 2019]; root of context hierarchy
2019-01-25 09:25:50.021 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 09:25:50.031 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 09:25:50.032 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 09:25:50.145 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 09:25:50.146 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1717 ms
2019-01-25 09:25:50.306 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 09:25:50.313 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 09:25:50.314 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 09:25:50.314 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 09:25:50.314 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 09:25:51.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:25:48 CST 2019]; root of context hierarchy
2019-01-25 09:25:51.140 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 09:25:51.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 09:25:51.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 09:25:51.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 09:25:51.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 09:25:51.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 09:25:51.142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 09:25:51.143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 09:25:51.144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 09:25:51.144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 09:25:51.144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 09:25:51.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 09:25:51.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 09:25:51.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 09:25:51.146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 09:25:51.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 09:25:51.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 09:25:51.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 09:25:51.150 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 09:25:51.153 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 09:25:51.154 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 09:25:51.186 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:25:51.186 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:25:51.224 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:25:51.564 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 09:25:51.795 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 09:25:51.815 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 09:25:51.826 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 09:25:51.838 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 09:25:51.856 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 09:25:51.860 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.694 seconds (JVM running for 5.897)
2019-01-25 09:25:58.446 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 09:25:58.447 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 09:25:58.465 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 09:25:58.556 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalStateException: Optional int parameter 'prodId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.] with root cause
java.lang.IllegalStateException: Optional int parameter 'prodId' is present but cannot be translated into a null value due to being declared as a primitive type. Consider declaring it as object wrapper for the corresponding primitive type.
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleNullValue(AbstractNamedValueMethodArgumentResolver.java:238)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:111)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 09:26:06.464 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:26:06.484 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:26:06.494 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:26:06.674 [http-nio-8080-exec-2] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-2] Exception processing template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}": Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-01-25 09:26:06.675 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 09:26:30.869 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:26:30.869 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:26:30.869 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:26:30.869 [http-nio-8080-exec-7] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-7] Exception processing template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}": Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-01-25 09:26:30.869 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 09:26:31.819 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:26:31.819 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:26:31.819 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:26:31.835 [http-nio-8080-exec-9] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-9] Exception processing template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}": Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-01-25 09:26:31.835 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 09:26:33.522 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:26:33.538 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:26:33.539 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:26:33.544 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}": Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-01-25 09:26:33.546 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "{"code":0,"msg":"查询成功，参数没有分类列表记录","obj":null}", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 09:26:43.317 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4784 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 09:26:43.317 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 09:26:43.333 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 09:26:43.661 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 09:26:43.723 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:26:43 CST 2019]; root of context hierarchy
2019-01-25 09:26:45.361 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 09:26:45.376 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 09:26:45.376 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 09:26:45.485 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 09:26:45.485 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1762 ms
2019-01-25 09:26:45.626 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 09:26:45.626 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 09:26:45.626 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 09:26:45.626 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 09:26:45.626 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 09:26:46.316 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:26:43 CST 2019]; root of context hierarchy
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 09:26:46.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 09:26:46.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 09:26:46.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 09:26:46.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 09:26:46.429 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:26:46.429 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:26:46.461 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:26:46.757 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 09:26:47.011 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 09:26:47.026 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 09:26:47.026 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 09:26:47.042 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 09:26:47.057 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 09:26:47.073 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.196 seconds (JVM running for 5.568)
2019-01-25 09:27:02.099 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 09:27:02.099 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 09:27:02.117 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 09:27:02.408 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:27:02.428 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:27:02.438 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:02.449 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4960 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 09:29:02.453 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 09:29:02.454 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 09:29:03.075 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:29:03 CST 2019]; root of context hierarchy
2019-01-25 09:29:03.298 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 09:29:04.600 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 09:29:04.611 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 09:29:04.612 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 09:29:04.721 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 09:29:04.722 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1648 ms
2019-01-25 09:29:04.870 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 09:29:04.877 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 09:29:04.877 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 09:29:04.878 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 09:29:04.878 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 09:29:05.703 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:29:03 CST 2019]; root of context hierarchy
2019-01-25 09:29:05.756 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 09:29:05.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 09:29:05.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 09:29:05.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 09:29:05.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 09:29:05.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 09:29:05.760 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 09:29:05.761 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 09:29:05.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 09:29:05.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 09:29:05.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 09:29:05.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 09:29:05.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 09:29:05.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 09:29:05.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 09:29:05.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 09:29:05.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 09:29:05.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 09:29:05.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 09:29:05.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 09:29:05.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 09:29:05.804 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:29:05.805 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:29:05.842 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:29:06.215 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 09:29:06.439 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 09:29:06.460 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 09:29:06.492 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 09:29:06.505 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 09:29:06.522 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 09:29:06.527 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.443 seconds (JVM running for 5.596)
2019-01-25 09:29:11.592 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 09:29:11.592 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 09:29:11.610 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 09:29:14.638 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:29:14.657 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:29:14.670 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:29:14.681 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:29:14.682 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:29:14.684 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:29:14.686 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:14.686 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:29:14.688 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:14.689 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:14.689 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:29:14.690 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:14.691 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:14.691 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:29:14.692 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:14.693 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:14.693 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:29:14.695 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:14.695 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:14.695 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:29:14.696 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:16.511 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:16.513 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:29:16.516 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:37.904 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:29:37.906 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:29:37.909 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:29:37.918 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:29:37.919 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:29:37.923 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:29:37.924 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:37.925 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:29:37.927 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:37.928 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:37.929 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:29:37.930 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:37.932 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:37.933 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:29:37.936 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:37.937 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:37.937 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:29:37.938 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:37.939 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:37.939 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:29:37.941 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:39.132 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:39.136 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:29:39.148 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:29:43.700 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:29:43.702 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:29:43.704 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:07.436 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:30:07.437 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:30:07.438 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:30:07.443 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:30:07.443 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:30:07.446 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:30:07.446 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:07.447 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:30:07.448 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:07.449 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:07.450 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:30:07.452 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:07.453 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:07.453 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:30:07.455 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:07.455 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:07.456 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:30:07.457 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:07.457 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:07.457 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:30:07.461 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:08.889 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:08.890 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:30:08.892 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:29.468 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:30:29.469 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:30:29.470 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:30:29.482 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:30:29.483 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:30:29.489 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:30:29.489 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:29.490 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:30:29.490 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:29.492 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:29.493 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:30:29.494 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:29.494 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:29.495 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:30:29.496 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:29.496 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:29.497 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:30:29.497 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:29.498 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:29.498 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:30:29.499 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:30:31.145 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:30:31.147 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:30:31.150 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:07.581 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:32:07.583 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:32:07.585 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:32:07.589 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:32:07.590 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:32:07.592 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:32:07.593 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:07.593 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:32:07.594 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:07.595 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:07.595 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:32:07.596 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:07.597 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:07.597 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:32:07.598 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:07.599 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:07.599 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:32:07.600 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:07.600 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:07.601 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:32:07.602 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:10.121 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:10.123 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:32:10.125 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:36.694 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3148 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 09:32:36.700 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 09:32:36.700 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 09:32:36.980 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 09:32:37.114 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@492691d7: startup date [Fri Jan 25 09:32:37 CST 2019]; root of context hierarchy
2019-01-25 09:32:39.062 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 09:32:39.074 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 09:32:39.075 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 09:32:39.198 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 09:32:39.198 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2084 ms
2019-01-25 09:32:39.417 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 09:32:39.424 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 09:32:39.425 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 09:32:39.425 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 09:32:39.425 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 09:32:40.550 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@492691d7: startup date [Fri Jan 25 09:32:37 CST 2019]; root of context hierarchy
2019-01-25 09:32:40.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 09:32:40.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 09:32:40.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 09:32:40.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 09:32:40.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 09:32:40.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 09:32:40.635 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 09:32:40.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 09:32:40.636 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 09:32:40.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 09:32:40.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 09:32:40.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 09:32:40.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 09:32:40.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 09:32:40.638 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 09:32:40.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 09:32:40.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 09:32:40.641 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 09:32:40.642 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 09:32:40.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 09:32:40.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 09:32:40.697 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:32:40.697 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:32:40.753 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:32:41.177 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 09:32:41.652 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 09:32:41.674 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 09:32:41.688 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 09:32:41.703 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 09:32:41.726 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 09:32:41.864 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.556 seconds (JVM running for 7.944)
2019-01-25 09:32:46.551 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 09:32:46.551 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 09:32:46.583 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2019-01-25 09:32:46.982 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:32:47.005 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:32:47.018 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:32:47.031 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:32:47.031 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:32:47.034 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:32:47.036 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:47.037 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:32:47.039 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:47.040 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:47.040 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:32:47.041 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:47.041 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:47.041 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:32:47.043 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:47.043 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:47.044 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:32:47.044 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:47.045 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:47.045 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:32:47.046 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:49.088 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:49.089 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:32:49.091 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:51.586 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:51.588 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:32:51.591 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:32:55.165 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:32:55.167 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:32:55.168 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:33:05.960 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:33:05.962 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:33:05.964 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:36:01.864 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:36:01.865 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:36:01.867 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:36:01.872 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:36:01.874 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:36:01.881 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:36:01.881 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:36:01.882 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:36:01.883 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:36:01.884 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:36:01.885 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:36:01.888 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:36:01.889 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:36:01.890 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:36:01.892 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:36:01.893 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:36:01.894 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:36:01.895 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:36:01.896 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:36:01.896 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:36:01.898 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:36:03.336 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:36:03.341 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:36:03.343 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:37:22.660 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4608 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 09:37:22.664 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 09:37:22.665 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 09:37:22.973 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 09:37:23.152 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:37:23 CST 2019]; root of context hierarchy
2019-01-25 09:37:24.749 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 09:37:24.760 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 09:37:24.760 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 09:37:24.862 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 09:37:24.862 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1710 ms
2019-01-25 09:37:25.009 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 09:37:25.014 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 09:37:25.014 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 09:37:25.014 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 09:37:25.015 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 09:37:25.797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 09:37:23 CST 2019]; root of context hierarchy
2019-01-25 09:37:25.853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 09:37:25.854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 09:37:25.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 09:37:25.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 09:37:25.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 09:37:25.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 09:37:25.856 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 09:37:25.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 09:37:25.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 09:37:25.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 09:37:25.858 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 09:37:25.858 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 09:37:25.858 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 09:37:25.858 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 09:37:25.859 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 09:37:25.861 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 09:37:25.861 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 09:37:25.862 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 09:37:25.862 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 09:37:25.865 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 09:37:25.865 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 09:37:25.898 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:37:25.898 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:37:25.937 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 09:37:26.239 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 09:37:26.497 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 09:37:26.517 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 09:37:26.528 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 09:37:26.541 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 09:37:26.558 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 09:37:26.563 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.232 seconds (JVM running for 5.593)
2019-01-25 09:37:32.794 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 09:37:32.794 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 09:37:32.812 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 09:37:34.318 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:37:34.337 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:37:34.350 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:37:34.361 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:37:34.361 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:37:34.364 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:37:34.366 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:37:34.366 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:37:34.368 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:37:34.369 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:37:34.370 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:37:34.371 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:37:34.372 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:37:34.372 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:37:34.373 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:37:34.374 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:37:34.374 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:37:34.374 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:37:34.375 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:37:34.375 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:37:34.376 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:37:35.766 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:37:35.768 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:37:35.769 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:13.242 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:38:13.242 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:38:13.245 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:38:13.249 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:38:13.251 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:38:13.255 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:38:13.256 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:13.256 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:38:13.258 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:13.258 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:13.258 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:38:13.259 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:13.260 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:13.260 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:38:13.261 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:13.261 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:13.262 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:38:13.262 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:13.263 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:13.263 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:38:13.264 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:14.486 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:14.488 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:38:14.491 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:16.021 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:16.022 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:38:16.025 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:38:17.759 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:38:17.760 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:38:17.762 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:39:40.636 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:39:40.637 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:39:40.640 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:39:40.649 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:39:40.650 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:39:40.651 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:39:40.652 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:39:40.652 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:39:40.653 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:39:40.654 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:39:40.654 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:39:40.655 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:39:40.655 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:39:40.655 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:39:40.656 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:39:40.656 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:39:40.657 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:39:40.657 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:39:40.658 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:39:40.658 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:39:40.658 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:39:42.187 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:39:42.189 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:39:42.190 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:34.873 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:34.875 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:43:34.878 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:38.377 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:43:38.379 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:43:38.381 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:43:38.387 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:43:38.389 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:43:38.398 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:43:38.399 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:38.400 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:43:38.401 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:38.402 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:38.402 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:43:38.403 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:38.404 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:38.404 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:43:38.405 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:38.406 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:38.406 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:43:38.407 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:38.408 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:38.408 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:43:38.409 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:43:39.807 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:43:39.808 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:43:39.809 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:00.873 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:44:00.873 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:44:00.875 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:44:00.879 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:44:00.879 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:44:00.882 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:44:00.883 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:00.883 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:44:00.884 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:00.886 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:00.886 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:44:00.887 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:00.888 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:00.888 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:44:00.889 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:00.890 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:00.890 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:44:00.891 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:00.892 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:00.892 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:44:00.893 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:02.080 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:02.081 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:44:02.083 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:26.033 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:44:26.034 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:44:26.037 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:44:26.039 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:44:26.040 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:44:26.042 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:44:26.043 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:26.043 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:44:26.044 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:26.044 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:26.044 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:44:26.045 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:26.046 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:26.047 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:44:26.048 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:26.049 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:26.050 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:44:26.051 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:26.051 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:26.052 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:44:26.052 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:44:27.163 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:44:27.164 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:44:27.165 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:19.411 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:47:19.411 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:47:19.412 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:47:19.416 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:47:19.419 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:47:19.423 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:47:19.424 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:19.424 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:47:19.425 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:19.425 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:19.426 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:47:19.426 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:19.427 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:19.427 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:47:19.428 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:19.429 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:19.429 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:47:19.430 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:19.431 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:19.431 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:47:19.432 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:21.032 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:21.033 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:47:21.033 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:47:24.947 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:47:24.948 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:47:24.950 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:12.806 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:48:12.807 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:48:12.808 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:48:12.811 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:48:12.812 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:48:12.814 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:48:12.815 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:12.815 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:48:12.816 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:12.817 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:12.817 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:48:12.818 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:12.819 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:12.819 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:48:12.820 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:12.820 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:12.821 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:48:12.821 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:12.822 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:12.822 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:48:12.823 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:14.204 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:14.208 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:48:14.210 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:16.483 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:16.485 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:48:16.488 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:48:44.340 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:48:44.342 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:48:44.343 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:49:58.874 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:49:58.875 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:49:58.877 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:49:58.883 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:49:58.884 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:49:58.887 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:49:58.888 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:49:58.888 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:49:58.889 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:49:58.890 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:49:58.890 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:49:58.891 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:49:58.891 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:49:58.892 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:49:58.893 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:49:58.893 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:49:58.893 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:49:58.894 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:49:58.894 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:49:58.894 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:49:58.895 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:49:58.907 [http-nio-8080-exec-4] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-4] Exception processing template "stock/productList": Could not parse as expression: "有${product.productParameterList.size()}" (stock/productList)
2019-01-25 09:49:58.911 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "有${product.productParameterList.size()}" (stock/productList)] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "有${product.productParameterList.size()}" (stock/productList)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:238)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:79)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:40)
	at org.thymeleaf.standard.processor.attr.AbstractStandardTextChildModifierAttrProcessor.getText(AbstractStandardTextChildModifierAttrProcessor.java:66)
	at org.thymeleaf.processor.attr.AbstractTextChildModifierAttrProcessor.getModifiedChildren(AbstractTextChildModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractChildrenModifierAttrProcessor.processAttribute(AbstractChildrenModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 09:50:34.998 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:50:34.999 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:50:35.000 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:50:35.006 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:50:35.006 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:50:35.008 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:50:35.009 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:35.009 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:50:35.010 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:35.010 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:35.010 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:50:35.011 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:35.011 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:35.011 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:50:35.012 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:35.012 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:35.013 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:50:35.013 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:35.014 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:35.014 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:50:35.014 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:48.096 [http-nio-8080-exec-5] DEBUG com.yun.stock.dao.ProductDao.findProductById - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and prod_id=? 
2019-01-25 09:50:48.097 [http-nio-8080-exec-5] DEBUG com.yun.stock.dao.ProductDao.findProductById - ==> Parameters: 1(Integer)
2019-01-25 09:50:48.099 [http-nio-8080-exec-5] DEBUG com.yun.stock.dao.ProductDao.findProductById - <==      Total: 1
2019-01-25 09:50:49.808 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.updateProduct - ==>  Preparing: update product set prod_name=?,prod_no=?,prod_type_id=? where prod_id=? 
2019-01-25 09:50:49.809 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.updateProduct - ==> Parameters: aaaa的是时(String), 222(String), 30(Integer), 1(Integer)
2019-01-25 09:50:49.873 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.updateProduct - <==    Updates: 1
2019-01-25 09:50:49.949 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:50:49.949 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:50:49.950 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:50:49.952 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:50:49.952 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:50:49.954 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:50:49.954 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:49.955 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:50:49.955 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:49.956 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:49.956 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:50:49.957 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:49.959 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:49.960 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:50:49.960 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:49.961 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:49.961 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:50:49.962 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:49.962 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:49.962 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:50:49.963 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:51.507 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductById - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and prod_id=? 
2019-01-25 09:50:51.507 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductById - ==> Parameters: 4(Integer)
2019-01-25 09:50:51.508 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductById - <==      Total: 1
2019-01-25 09:50:52.789 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.updateProduct - ==>  Preparing: update product set prod_name=?,prod_no=?,prod_type_id=? where prod_id=? 
2019-01-25 09:50:52.790 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.updateProduct - ==> Parameters: 342432(String), 345345(String), 31(Integer), 4(Integer)
2019-01-25 09:50:52.842 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.updateProduct - <==    Updates: 1
2019-01-25 09:50:52.888 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:50:52.888 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:50:52.889 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:50:52.892 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:50:52.892 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:50:52.894 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:50:52.895 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:52.895 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:50:52.897 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:52.897 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:52.897 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:50:52.899 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:52.899 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:52.899 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:50:52.901 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:52.902 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:52.902 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:50:52.903 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:52.904 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:50:52.904 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:50:52.905 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:50:55.486 [http-nio-8080-exec-4] INFO  com.yun.stock.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 09:50:55.733 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 09:50:55.734 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 09:50:55.740 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 09:50:55.741 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 09:50:55.743 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 09:50:55.744 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 09:50:55.745 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 09:50:55.748 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 09:50:55.748 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-25 09:50:55.749 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 09:50:55.749 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-25 09:50:55.750 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 09:50:55.750 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 09:50:55.750 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 09:50:55.751 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 09:51:00.783 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:51:00.784 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:51:00.786 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:51:00.790 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:51:00.791 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:51:00.795 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:51:00.795 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:00.796 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:51:00.797 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:00.798 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:00.799 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:51:00.801 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:00.802 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:00.802 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:51:00.806 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:00.807 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:00.807 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:51:00.808 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:00.808 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:00.808 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:51:00.809 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:03.087 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:51:03.087 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:51:03.089 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:51:03.092 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:51:03.093 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:51:03.097 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:51:03.097 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:03.097 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:51:03.099 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:03.100 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:03.100 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:51:03.102 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:03.102 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:03.102 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:51:03.104 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:03.104 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:03.104 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:51:03.106 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:51:03.106 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:51:03.106 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:51:03.109 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:46.066 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:54:46.067 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:54:46.069 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:54:46.075 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:54:46.076 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:54:46.078 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:54:46.079 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:46.079 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:54:46.080 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:46.080 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:46.080 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:54:46.081 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:46.081 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:46.081 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:54:46.082 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:46.082 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:46.083 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:54:46.083 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:46.084 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:46.085 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:54:46.085 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:47.918 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:47.919 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:54:47.921 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:54:52.006 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:54:52.007 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:54:52.009 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:16.739 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:55:16.740 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:55:16.741 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:55:16.744 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:55:16.745 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:55:16.747 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:55:16.748 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:16.748 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:16.750 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:16.750 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:16.750 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:55:16.752 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:16.752 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:16.753 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:55:16.755 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:16.755 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:16.755 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:55:16.759 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:16.759 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:16.759 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:55:16.761 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:18.460 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:18.461 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:18.463 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:19.219 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:19.220 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:19.222 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:19.885 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:19.886 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:19.888 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:20.548 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:20.549 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:20.549 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:36.885 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:55:36.886 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:55:36.890 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:55:36.894 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:55:36.894 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:55:36.897 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:55:36.897 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:36.898 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:36.899 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:36.900 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:36.900 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:55:36.901 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:36.902 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:36.902 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:55:36.903 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:36.903 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:36.904 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:55:36.905 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:36.906 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:36.906 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:55:36.909 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:37.896 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:37.897 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:37.898 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:38.740 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:38.741 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:55:38.743 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:55:39.396 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:55:39.397 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:55:39.399 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:02.518 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:57:02.518 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:57:02.519 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:57:02.522 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:57:02.523 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:57:02.525 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:57:02.526 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:02.526 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:57:02.527 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:02.528 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:02.528 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:57:02.529 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:02.529 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:02.529 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:57:02.531 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:02.531 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:02.531 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:57:02.533 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:02.533 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:02.533 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:57:02.534 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:03.547 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:03.548 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:57:03.549 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:04.082 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:04.083 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:57:04.085 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:57:05.018 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:57:05.019 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:57:05.020 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:41.183 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 09:59:41.184 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 09:59:41.186 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 09:59:41.190 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 09:59:41.190 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 09:59:41.193 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 09:59:41.193 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:41.193 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:59:41.194 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:41.195 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:41.195 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:59:41.196 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:41.196 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:41.196 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:59:41.197 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:41.197 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:41.197 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 09:59:41.198 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:41.198 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:41.199 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 09:59:41.200 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:42.435 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:42.436 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:59:42.437 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:43.259 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:43.260 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:59:43.262 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:43.705 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:43.706 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:59:43.708 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:44.189 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:44.190 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 09:59:44.191 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:44.807 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:44.808 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:59:44.810 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:45.369 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:45.369 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 09:59:45.371 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 09:59:45.785 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 09:59:45.786 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 09:59:45.787 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:39.717 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:00:39.718 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:00:39.719 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:00:39.722 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:00:39.723 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:00:39.725 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:00:39.725 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:39.726 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:00:39.727 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:39.727 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:39.727 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:00:39.728 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:39.729 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:39.729 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:00:39.730 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:39.730 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:39.731 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:00:39.732 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:39.732 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:39.732 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:00:39.735 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:41.221 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:41.222 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:00:41.224 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:43.658 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:43.659 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:00:43.661 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:00:46.354 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:00:46.354 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:00:46.356 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:01:08.089 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:01:08.090 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:01:08.092 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:29.846 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:29.847 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:04:29.848 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:33.606 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:04:33.607 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:04:33.609 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:04:33.613 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:04:33.614 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:04:33.617 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:04:33.618 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:33.618 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:04:33.620 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:33.620 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:33.621 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:04:33.622 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:33.622 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:33.623 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:04:33.624 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:33.624 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:33.625 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:04:33.626 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:33.627 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:33.627 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:04:33.628 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:35.219 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:35.220 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:04:35.221 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:37.939 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:37.940 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:04:37.942 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:04:40.450 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:04:40.451 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:04:40.453 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:10:20.412 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5012 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 10:10:20.417 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 10:10:20.417 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 10:10:21.009 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 10:10:21.051 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:10:21 CST 2019]; root of context hierarchy
2019-01-25 10:10:22.520 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 10:10:22.530 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 10:10:22.531 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 10:10:22.634 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 10:10:22.634 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1583 ms
2019-01-25 10:10:22.772 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 10:10:22.777 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 10:10:22.778 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 10:10:22.778 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 10:10:22.778 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 10:10:23.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:10:21 CST 2019]; root of context hierarchy
2019-01-25 10:10:23.590 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 10:10:23.592 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 10:10:23.592 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 10:10:23.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 10:10:23.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 10:10:23.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 10:10:23.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 10:10:23.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 10:10:23.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 10:10:23.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 10:10:23.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 10:10:23.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 10:10:23.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 10:10:23.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 10:10:23.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 10:10:23.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 10:10:23.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 10:10:23.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 10:10:23.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 10:10:23.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 10:10:23.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 10:10:23.638 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:10:23.638 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:10:23.679 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:10:23.972 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 10:10:24.197 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 10:10:24.216 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 10:10:24.251 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 10:10:24.265 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 10:10:24.283 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 10:10:24.288 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.26 seconds (JVM running for 5.868)
2019-01-25 10:10:46.957 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 10:10:46.958 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 10:10:46.975 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2019-01-25 10:10:49.578 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:10:49.599 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:10:49.608 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:10:49.619 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:10:49.620 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:10:49.623 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:10:49.625 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:10:49.625 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:10:49.627 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:10:49.628 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:10:49.629 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:10:49.629 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:10:49.630 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:10:49.630 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:10:49.631 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:10:49.632 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:10:49.632 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:10:49.633 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:10:49.633 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:10:49.634 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:10:49.634 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:05.272 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:11:05.274 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:11:05.278 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:11:05.283 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:11:05.284 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:11:05.290 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:11:05.290 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:05.291 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:11:05.292 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:05.293 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:05.293 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:11:05.295 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:05.296 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:05.297 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:11:05.298 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:05.299 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:05.299 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:11:05.300 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:05.301 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:05.301 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:11:05.302 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:47.355 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:11:47.356 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:11:47.359 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:11:47.367 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:11:47.369 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:11:47.373 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:11:47.374 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:47.374 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:11:47.376 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:47.376 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:47.376 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:11:47.377 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:47.378 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:47.379 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:11:47.380 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:47.380 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:47.380 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:11:47.381 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:47.382 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:47.382 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:11:47.384 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:48.571 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:48.572 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:11:48.573 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:11:51.703 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:11:51.704 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:11:51.708 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:11.015 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:12:11.017 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:12:11.020 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:12:11.026 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:12:11.027 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:12:11.040 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:12:11.040 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:11.041 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:12:11.042 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:11.044 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:11.044 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:12:11.045 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:11.046 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:11.046 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:12:11.047 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:11.047 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:11.048 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:12:11.049 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:11.049 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:11.049 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:12:11.050 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:12.607 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:12.608 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:12:12.609 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:14.872 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:14.873 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:12:14.876 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:18.067 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:18.070 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:12:18.074 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:24.402 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:12:24.404 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:12:24.406 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:12:24.416 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:12:24.416 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:12:24.419 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:12:24.420 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:24.420 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:12:24.422 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:24.423 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:24.423 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:12:24.424 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:24.424 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:24.424 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:12:24.425 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:24.426 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:24.427 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:12:24.428 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:24.429 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:24.429 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:12:24.430 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:12:33.716 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:12:33.717 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:12:33.718 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:14:36.537 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:14:36.537 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:14:36.539 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:14:36.542 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:14:36.543 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:14:36.546 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:14:36.546 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:14:36.547 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:14:36.548 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:14:36.548 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:14:36.548 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:14:36.550 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:14:36.550 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:14:36.551 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:14:36.552 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:14:36.552 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:14:36.553 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:14:36.554 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:14:36.554 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:14:36.555 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:14:36.556 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:14:37.560 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:14:37.562 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:14:37.563 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:11.678 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:15:11.679 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:15:11.682 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:15:11.689 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:15:11.690 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:15:11.697 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:15:11.698 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:11.698 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:15:11.699 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:11.700 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:11.700 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:15:11.701 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:11.701 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:11.702 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:15:11.702 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:11.703 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:11.703 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:15:11.704 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:11.704 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:11.705 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:15:11.706 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:12.889 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:12.889 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:15:12.892 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:37.688 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:15:37.689 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:15:37.690 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:15:37.692 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:15:37.693 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:15:37.694 [http-nio-8080-exec-7] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:15:37.695 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:37.695 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:15:37.696 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:37.696 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:37.696 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:15:37.698 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:37.698 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:37.698 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:15:37.699 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:37.699 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:37.699 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:15:37.700 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:37.700 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:37.701 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:15:37.702 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:15:38.624 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:15:38.625 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:15:38.625 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:16:37.487 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2840 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 10:16:37.491 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 10:16:37.492 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 10:16:37.867 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 10:16:38.121 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:16:38 CST 2019]; root of context hierarchy
2019-01-25 10:16:39.510 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 10:16:39.521 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 10:16:39.522 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 10:16:39.633 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 10:16:39.633 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1512 ms
2019-01-25 10:16:39.779 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 10:16:39.784 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 10:16:39.787 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 10:16:39.787 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 10:16:39.787 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 10:16:40.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:16:38 CST 2019]; root of context hierarchy
2019-01-25 10:16:40.588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 10:16:40.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 10:16:40.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 10:16:40.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 10:16:40.591 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 10:16:40.592 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 10:16:40.592 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 10:16:40.593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 10:16:40.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 10:16:40.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 10:16:40.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 10:16:40.594 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 10:16:40.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 10:16:40.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 10:16:40.595 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 10:16:40.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 10:16:40.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 10:16:40.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 10:16:40.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 10:16:40.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 10:16:40.602 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 10:16:40.634 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:16:40.634 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:16:40.672 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:16:40.970 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 10:16:41.223 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 10:16:41.242 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 10:16:41.253 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 10:16:41.266 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 10:16:41.287 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 10:16:41.295 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.385 seconds (JVM running for 5.615)
2019-01-25 10:47:27.666 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4912 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 10:47:27.673 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 10:47:27.673 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 10:47:28.020 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 10:47:28.549 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:47:28 CST 2019]; root of context hierarchy
2019-01-25 10:47:29.891 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 10:47:29.901 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 10:47:29.902 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 10:47:30.006 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 10:47:30.007 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1458 ms
2019-01-25 10:47:30.154 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 10:47:30.160 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 10:47:30.161 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 10:47:30.161 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 10:47:30.161 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 10:47:30.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:47:28 CST 2019]; root of context hierarchy
2019-01-25 10:47:30.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 10:47:30.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 10:47:30.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 10:47:30.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 10:47:30.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 10:47:30.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 10:47:30.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 10:47:30.955 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 10:47:30.955 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamSave(com.yun.stock.model.ProductParameter)
2019-01-25 10:47:30.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 10:47:30.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 10:47:30.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 10:47:30.959 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 10:47:30.959 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 10:47:30.959 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 10:47:30.959 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 10:47:30.960 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 10:47:30.961 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 10:47:30.961 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 10:47:30.961 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 10:47:30.961 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 10:47:30.964 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 10:47:30.965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 10:47:30.996 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:47:30.996 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:47:31.033 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:47:31.322 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 10:47:31.607 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 10:47:31.626 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 10:47:31.637 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 10:47:31.650 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 10:47:31.667 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 10:47:31.671 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.501 seconds (JVM running for 5.761)
2019-01-25 10:47:35.042 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 10:47:35.042 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 10:47:35.061 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-25 10:47:36.436 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:47:36.455 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:47:36.468 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:47:36.478 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:47:36.479 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:47:36.481 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:47:36.482 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:36.483 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:47:36.484 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:36.485 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:36.485 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:47:36.486 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:36.486 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:36.487 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:47:36.488 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:36.488 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:36.488 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:47:36.489 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:36.490 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:36.490 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:47:36.491 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:38.833 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:38.835 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:47:38.837 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:43.376 [http-nio-8080-exec-1] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 10:47:43.377 [http-nio-8080-exec-1] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: ertert(String), 1(Integer)
2019-01-25 10:47:43.436 [http-nio-8080-exec-1] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 10:47:43.547 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:47:43.548 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:47:43.550 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:47:43.554 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:47:43.555 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:47:43.562 [http-nio-8080-exec-3] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:47:43.563 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:43.564 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:47:43.565 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 10:47:43.566 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:43.567 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:47:43.568 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:43.569 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:43.570 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:47:43.571 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:43.572 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:43.572 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:47:43.574 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:43.575 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:43.577 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:47:43.579 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:45.375 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:45.376 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:47:45.383 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 10:47:53.036 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:53.037 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:47:53.039 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 10:47:55.195 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:55.196 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:47:55.198 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:47:57.419 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:47:57.421 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:47:57.424 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 10:48:00.910 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:00.911 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:48:00.914 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 10:48:12.257 [http-nio-8080-exec-9] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 10:48:12.257 [http-nio-8080-exec-9] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: 黄色(String), 1(Integer)
2019-01-25 10:48:12.269 [http-nio-8080-exec-9] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 10:48:12.322 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:48:12.322 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:48:12.323 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:48:12.325 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:48:12.325 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:48:12.327 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:48:12.328 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:12.328 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:48:12.330 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 10:48:12.330 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:12.331 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:48:12.333 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:12.334 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:12.334 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:48:12.335 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:12.335 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:12.335 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:48:12.335 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:12.336 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:12.336 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:48:12.336 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:13.599 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:13.600 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:48:13.603 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 10:48:18.561 [http-nio-8080-exec-5] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 10:48:18.562 [http-nio-8080-exec-5] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: 红色(String), 1(Integer)
2019-01-25 10:48:18.592 [http-nio-8080-exec-5] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 10:48:18.667 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:48:18.668 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:48:18.669 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:48:18.671 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:48:18.671 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:48:18.677 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:48:18.678 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:18.678 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:48:18.680 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 10:48:18.680 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:18.680 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:48:18.682 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:18.682 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:18.682 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:48:18.683 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:18.683 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:18.684 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:48:18.685 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:18.685 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:18.685 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:48:18.686 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:48:20.209 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:48:20.210 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:48:20.215 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 10:49:11.861 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:11.861 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:49:11.865 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 10:49:18.373 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 10:49:18.373 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 10:49:18.375 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 10:49:18.378 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 10:49:18.378 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 10:49:18.379 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 10:49:18.382 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:18.383 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:49:18.385 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 10:49:18.385 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:18.386 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 10:49:18.386 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:49:18.387 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:18.387 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 10:49:18.388 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:49:18.393 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:18.394 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 10:49:18.397 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:49:18.398 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:18.398 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 10:49:18.401 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 10:49:19.619 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 10:49:19.620 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 10:49:19.621 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 10:55:02.372 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1692 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 10:55:02.376 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 10:55:02.376 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 10:55:02.554 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 10:55:02.824 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:55:02 CST 2019]; root of context hierarchy
2019-01-25 10:55:04.469 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 10:55:04.479 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 10:55:04.480 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 10:55:04.591 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 10:55:04.592 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1768 ms
2019-01-25 10:55:04.734 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 10:55:04.739 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 10:55:04.740 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 10:55:04.740 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 10:55:04.740 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 10:55:05.498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 10:55:02 CST 2019]; root of context hierarchy
2019-01-25 10:55:05.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 10:55:05.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 10:55:05.563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 10:55:05.563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 10:55:05.563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 10:55:05.563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 10:55:05.564 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 10:55:05.564 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamDelete(int)
2019-01-25 10:55:05.565 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 10:55:05.565 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamSave(com.yun.stock.model.ProductParameter)
2019-01-25 10:55:05.568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 10:55:05.568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 10:55:05.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 10:55:05.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 10:55:05.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 10:55:05.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 10:55:05.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 10:55:05.570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 10:55:05.571 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 10:55:05.571 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 10:55:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 10:55:05.572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 10:55:05.576 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 10:55:05.576 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 10:55:05.610 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:55:05.610 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:55:05.650 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 10:55:05.974 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 10:55:06.345 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 10:55:06.368 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 10:55:06.380 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 10:55:06.394 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 10:55:06.412 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 10:55:06.417 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.585 seconds (JVM running for 5.747)
2019-01-25 11:27:59.533 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 11:27:59.533 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 11:27:59.554 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-01-25 11:27:59.905 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:27:59.924 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:27:59.934 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 11:28:03.158 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:28:03.159 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:28:03.162 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:28:44.064 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:28:44.066 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:28:44.069 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 11:28:49.814 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:28:49.816 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:28:49.822 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 11:28:51.971 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:28:51.972 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:28:51.977 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:28:55.472 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:28:55.473 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:28:55.475 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:29:35.770 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:29:35.771 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:29:35.776 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:29:39.976 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:29:39.979 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:29:39.983 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:29:44.185 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:29:44.187 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:29:44.190 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:29:48.968 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:29:48.970 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:29:48.972 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:29:58.267 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2964 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 11:29:58.279 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 11:29:58.280 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 11:29:58.625 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 11:29:58 CST 2019]; root of context hierarchy
2019-01-25 11:29:58.897 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 11:30:00.293 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 11:30:00.303 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 11:30:00.304 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 11:30:00.434 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 11:30:00.434 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1809 ms
2019-01-25 11:30:00.570 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 11:30:00.579 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 11:30:00.580 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 11:30:00.581 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 11:30:00.581 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 11:30:01.334 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 11:29:58 CST 2019]; root of context hierarchy
2019-01-25 11:30:01.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.stock.controller.ProductController.productDelete(int)
2019-01-25 11:30:01.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreAdd()
2019-01-25 11:30:01.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.stock.controller.ProductController.productSave(com.yun.stock.model.Product)
2019-01-25 11:30:01.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.stock.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 11:30:01.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 11:30:01.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductController.productUpdate(com.yun.stock.model.Product)
2019-01-25 11:30:01.395 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamList(int)
2019-01-25 11:30:01.395 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamDelete(int)
2019-01-25 11:30:01.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 11:30:01.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.stock.controller.ProductParamController.prodParamSave(com.yun.stock.model.ProductParameter)
2019-01-25 11:30:01.399 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 11:30:01.399 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.stock.model.ProductType> com.yun.stock.controller.ProductTypeController.productTypeTree()
2019-01-25 11:30:01.399 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeEdit()
2019-01-25 11:30:01.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeSave(com.yun.stock.model.ProductType)
2019-01-25 11:30:01.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 11:30:01.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeUpdateSave(com.yun.stock.model.ProductType)
2019-01-25 11:30:01.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.stock.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 11:30:01.401 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 11:30:01.401 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 11:30:01.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 11:30:01.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 11:30:01.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 11:30:01.405 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 11:30:01.405 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 11:30:01.438 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:30:01.438 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:30:01.476 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:30:01.763 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 11:30:01.994 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 11:30:02.014 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 11:30:02.027 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 11:30:02.040 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 11:30:02.083 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 11:30:02.087 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.296 seconds (JVM running for 5.441)
2019-01-25 11:30:06.665 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 11:30:06.665 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 11:30:06.686 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-01-25 11:30:07.702 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:07.722 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:07.731 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:07.741 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:07.742 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:07.744 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:07.745 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:07.746 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:07.748 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 11:30:07.749 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:07.749 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:07.750 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:07.750 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:07.751 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:07.752 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:07.752 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:07.752 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:07.753 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:07.754 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:07.754 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:07.755 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:09.123 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:09.124 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:09.126 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 3
2019-01-25 11:30:10.564 [http-nio-8080-exec-10] DEBUG c.y.s.d.ProductParameterDao.deleteProductParameter - ==>  Preparing: delete from product_parameter where prod_param_id=? 
2019-01-25 11:30:10.565 [http-nio-8080-exec-10] DEBUG c.y.s.d.ProductParameterDao.deleteProductParameter - ==> Parameters: 1(Integer)
2019-01-25 11:30:10.589 [http-nio-8080-exec-10] DEBUG c.y.s.d.ProductParameterDao.deleteProductParameter - <==    Updates: 1
2019-01-25 11:30:10.644 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:10.644 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:10.645 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:10.649 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:10.649 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:10.653 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:10.655 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:10.655 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:10.657 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:30:10.658 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:10.658 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:10.659 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:10.660 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:10.660 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:10.662 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:10.662 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:10.663 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:10.664 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:10.665 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:10.667 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:10.668 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:12.291 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:12.292 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:12.297 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:30:14.865 [http-nio-8080-exec-5] DEBUG c.y.s.d.ProductParameterDao.deleteProductParameter - ==>  Preparing: delete from product_parameter where prod_param_id=? 
2019-01-25 11:30:14.867 [http-nio-8080-exec-5] DEBUG c.y.s.d.ProductParameterDao.deleteProductParameter - ==> Parameters: 3(Integer)
2019-01-25 11:30:14.888 [http-nio-8080-exec-5] DEBUG c.y.s.d.ProductParameterDao.deleteProductParameter - <==    Updates: 1
2019-01-25 11:30:14.961 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:14.962 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:14.965 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:14.974 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:14.974 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:14.977 [http-nio-8080-exec-2] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:14.978 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:14.979 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:14.980 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:14.981 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:14.981 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:14.983 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:14.983 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:14.984 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:14.985 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:14.986 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:14.986 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:14.987 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:14.988 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:14.988 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:14.989 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:16.531 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:16.532 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:16.534 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:20.913 [http-nio-8080-exec-7] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 11:30:20.914 [http-nio-8080-exec-7] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: hhh(String), 2(Integer)
2019-01-25 11:30:20.950 [http-nio-8080-exec-7] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 11:30:21.045 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:21.045 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:21.046 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:21.048 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:21.048 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:21.051 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:21.052 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:21.052 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:21.053 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:21.053 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:21.053 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:21.055 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:21.055 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:21.055 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:21.057 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:21.057 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:21.057 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:21.058 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:21.058 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:21.059 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:21.062 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:22.678 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:22.679 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:22.680 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:26.914 [http-nio-8080-exec-1] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 11:30:26.914 [http-nio-8080-exec-1] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: uuuuu(String), 4(Integer)
2019-01-25 11:30:26.937 [http-nio-8080-exec-1] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 11:30:26.991 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:26.992 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:26.995 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:26.999 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:27.000 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:27.002 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:27.003 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:27.003 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:27.005 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:27.005 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:27.005 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:27.006 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:27.007 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:27.007 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:27.009 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:27.010 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:27.010 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:27.011 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:27.011 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:27.012 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:27.013 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:28.193 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:28.194 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:28.197 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:32.023 [http-nio-8080-exec-3] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 11:30:32.023 [http-nio-8080-exec-3] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: uuuu(String), 4(Integer)
2019-01-25 11:30:32.060 [http-nio-8080-exec-3] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 11:30:32.203 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:32.204 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:32.207 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:32.213 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:32.216 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:32.219 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:32.219 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:32.219 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:32.221 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:32.221 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:32.221 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:32.222 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:32.222 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:32.223 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:32.223 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:30:32.224 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:32.224 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:32.224 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:32.225 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:32.225 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:32.226 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:35.276 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:35.277 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:35.278 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:38.520 [http-nio-8080-exec-9] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==>  Preparing: insert into product_parameter(prod_param_name,prod_id) values(?,?) 
2019-01-25 11:30:38.522 [http-nio-8080-exec-9] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - ==> Parameters: werwe(String), 5(Integer)
2019-01-25 11:30:38.524 [http-nio-8080-exec-9] DEBUG c.y.s.d.ProductParameterDao.insertProductParameter - <==    Updates: 1
2019-01-25 11:30:38.577 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:38.578 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:38.579 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:38.581 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:38.581 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:38.582 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:38.583 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:38.583 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:38.584 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:38.584 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:38.584 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:38.585 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:38.586 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:38.586 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:38.586 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:30:38.587 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:38.587 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:38.587 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:38.588 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:38.588 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:38.588 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:40.299 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:40.300 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:40.303 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:43.043 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:43.044 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:43.046 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:44.939 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:44.941 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:44.944 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:30:47.917 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:47.926 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:47.929 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:52.238 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:52.239 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:52.241 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:30:57.958 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:30:57.961 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:30:57.964 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:30:57.971 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:30:57.972 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:30:57.981 [http-nio-8080-exec-6] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:30:57.982 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:57.982 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:30:57.985 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:57.986 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:57.986 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:30:57.987 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:57.987 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:57.988 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:30:57.988 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:30:57.989 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:57.990 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:30:57.993 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:30:57.994 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:30:57.994 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:30:57.995 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:31:00.324 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:31:00.325 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:31:00.326 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:31:00.331 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:31:00.331 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:31:00.334 [http-nio-8080-exec-8] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:31:00.334 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:00.335 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:31:00.336 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:00.336 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:00.336 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:31:00.338 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:00.338 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:00.338 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:31:00.339 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:31:00.340 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:00.340 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:31:00.342 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:00.342 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:00.342 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:31:00.343 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:31:01.402 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:31:01.403 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:31:01.406 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:31:01.409 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:31:01.409 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:31:01.411 [http-nio-8080-exec-9] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:31:01.411 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:01.411 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:31:01.412 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:01.413 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:01.413 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:31:01.414 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:01.414 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:01.415 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:31:01.416 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:31:01.417 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:01.417 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:31:01.418 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:01.419 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:01.419 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:31:01.420 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:31:02.005 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:31:02.005 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:31:02.007 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:31:02.010 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:31:02.010 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:31:02.012 [http-nio-8080-exec-10] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:31:02.013 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.013 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:31:02.015 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:02.015 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.015 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:31:02.018 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:02.019 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.019 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:31:02.021 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:31:02.022 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.022 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:31:02.025 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:02.025 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.025 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:31:02.027 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:31:02.506 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:31:02.506 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:31:02.508 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:31:02.515 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:31:02.516 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:31:02.518 [http-nio-8080-exec-1] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:31:02.518 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.519 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:31:02.520 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:02.520 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.521 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:31:02.522 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:02.523 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.523 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:31:02.524 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:31:02.524 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.525 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:31:02.526 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:02.526 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:02.526 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:31:02.527 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:31:03.061 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:31:03.062 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:31:03.064 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:31:03.070 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:31:03.071 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:31:03.074 [http-nio-8080-exec-4] DEBUG com.yun.stock.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:31:03.075 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:03.075 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:31:03.077 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:03.077 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:03.078 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:31:03.080 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:03.083 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:03.084 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:31:03.086 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:31:03.086 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:03.086 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:31:03.088 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:31:03.088 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:31:03.088 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:31:03.089 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:35:06.249 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4984 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 11:35:06.254 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 11:35:06.254 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 11:35:06.940 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 11:35:06 CST 2019]; root of context hierarchy
2019-01-25 11:35:06.981 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 11:35:08.421 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 11:35:08.430 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 11:35:08.431 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 11:35:08.547 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 11:35:08.548 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1608 ms
2019-01-25 11:35:08.689 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 11:35:08.694 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 11:35:08.695 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 11:35:08.695 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 11:35:08.695 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 11:35:09.444 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 11:35:06 CST 2019]; root of context hierarchy
2019-01-25 11:35:09.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 11:35:09.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 11:35:09.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 11:35:09.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 11:35:09.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 11:35:09.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 11:35:09.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 11:35:09.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 11:35:09.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 11:35:09.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 11:35:09.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 11:35:09.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 11:35:09.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 11:35:09.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 11:35:09.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 11:35:09.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 11:35:09.511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 11:35:09.511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 11:35:09.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 11:35:09.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 11:35:09.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 11:35:09.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 11:35:09.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 11:35:09.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 11:35:09.550 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:35:09.550 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:35:09.589 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:35:09.895 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 11:35:10.153 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 11:35:10.172 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 11:35:10.184 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 11:35:10.197 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 11:35:10.215 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 11:35:10.220 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.401 seconds (JVM running for 5.79)
2019-01-25 11:35:16.883 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 11:35:16.884 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 11:35:16.902 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 11:35:18.702 [http-nio-8080-exec-8] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 11:35:19.039 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:35:19.058 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 11:35:19.070 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:35:19.071 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 11:35:19.080 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:35:19.081 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 11:35:19.082 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 11:35:19.083 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:35:19.083 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-25 11:35:19.084 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 11:35:19.085 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-25 11:35:19.086 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:35:19.087 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 11:35:19.089 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 11:35:19.089 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 11:35:21.650 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:35:21.650 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:35:21.651 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:35:21.654 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:35:21.655 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:35:21.659 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:35:21.660 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:21.661 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:35:21.663 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:21.665 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:21.665 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:35:21.666 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:21.667 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:21.667 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:35:21.668 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:35:21.669 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:21.669 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:35:21.670 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:21.670 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:21.670 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:35:21.673 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:35:23.176 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:35:23.178 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:35:23.181 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:35:23.187 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:35:23.187 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:35:23.191 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:35:23.192 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.192 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:35:23.194 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:23.195 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.196 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:35:23.198 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:23.199 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.199 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:35:23.200 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:35:23.200 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.201 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:35:23.202 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:23.202 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.202 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:35:23.203 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:35:23.797 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:35:23.799 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:35:23.801 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:35:23.810 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:35:23.811 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:35:23.819 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:35:23.820 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.820 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:35:23.821 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:23.822 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.823 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:35:23.824 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:23.825 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.826 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:35:23.829 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:35:23.829 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.830 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:35:23.835 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:23.835 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:23.836 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:35:23.837 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:35:24.819 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:35:24.820 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:35:24.832 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:35:24.838 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:35:24.839 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:35:24.843 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:35:24.845 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:24.845 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:35:24.851 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:24.851 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:24.852 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:35:24.853 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:24.853 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:24.854 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:35:24.855 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:35:24.855 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:24.856 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:35:24.857 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:35:24.857 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:35:24.857 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:35:24.858 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:38:54.491 [http-nio-8080-exec-9] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 11:38:54.556 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:38:54.557 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 11:38:54.559 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:38:54.559 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 11:38:54.561 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:38:54.561 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 11:38:54.563 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 11:38:54.563 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:38:54.563 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-25 11:38:54.564 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 11:38:54.565 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-25 11:38:54.565 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:38:54.565 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 11:38:54.567 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 11:38:54.567 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 11:38:55.174 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:38:55.179 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:38:55.182 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:38:55.189 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:38:55.190 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:38:55.197 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:38:55.198 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:38:55.199 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:38:55.200 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:38:55.201 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:38:55.201 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:38:55.204 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:38:55.204 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:38:55.205 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:38:55.206 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:38:55.207 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:38:55.208 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:38:55.209 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:38:55.209 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:38:55.210 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:38:55.212 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:39:07.363 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 11:39:07.365 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 11:39:07.374 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 4
2019-01-25 11:46:21.875 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4304 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 11:46:21.879 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 11:46:21.880 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 11:46:22.154 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 11:46:22.283 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 11:46:22 CST 2019]; root of context hierarchy
2019-01-25 11:46:24.078 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 11:46:24.088 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 11:46:24.088 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 11:46:24.193 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 11:46:24.193 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1910 ms
2019-01-25 11:46:24.337 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 11:46:24.342 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 11:46:24.342 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 11:46:24.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 11:46:24.343 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 11:46:25.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 11:46:22 CST 2019]; root of context hierarchy
2019-01-25 11:46:25.183 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 11:46:25.184 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 11:46:25.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 11:46:25.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 11:46:25.186 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 11:46:25.186 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 11:46:25.187 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 11:46:25.187 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 11:46:25.187 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 11:46:25.188 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 11:46:25.190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 11:46:25.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 11:46:25.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 11:46:25.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 11:46:25.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 11:46:25.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 11:46:25.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 11:46:25.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 11:46:25.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 11:46:25.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 11:46:25.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 11:46:25.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 11:46:25.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 11:46:25.197 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 11:46:25.198 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 11:46:25.230 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:46:25.231 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:46:25.268 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 11:46:25.563 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 11:46:25.820 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 11:46:25.845 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 11:46:25.858 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 11:46:25.872 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 11:46:25.891 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 11:46:25.896 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.463 seconds (JVM running for 5.617)
2019-01-25 11:46:29.032 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 11:46:29.032 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 11:46:29.050 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 11:46:31.651 [http-nio-8080-exec-8] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 11:46:31.997 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:46:32.018 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 11:46:32.029 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:46:32.030 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 11:46:32.036 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:46:32.037 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 11:46:32.038 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 11:46:32.039 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:46:32.040 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-25 11:46:32.041 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 11:46:32.042 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-25 11:46:32.042 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 11:46:32.043 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 11:46:32.044 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 11:46:32.044 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 11:46:32.228 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:46:32.228 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:46:32.229 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:46:32.232 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:46:32.232 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:46:32.235 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:46:32.236 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:46:32.237 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:46:32.238 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:46:32.240 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:46:32.241 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:46:32.242 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:46:32.242 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:46:32.242 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:46:32.243 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:46:32.243 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:46:32.244 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:46:32.246 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:46:32.247 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:46:32.247 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:46:32.248 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:46:41.420 [http-nio-8080-exec-1] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 11:46:41.422 [http-nio-8080-exec-1] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 11:46:41.429 [http-nio-8080-exec-1] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 4
2019-01-25 11:46:43.672 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - ==>  Preparing: delete from user_info where user_id=? 
2019-01-25 11:46:43.674 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - ==> Parameters: 4(Integer)
2019-01-25 11:46:43.704 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - <==    Updates: 1
2019-01-25 11:46:43.782 [http-nio-8080-exec-5] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 11:46:43.783 [http-nio-8080-exec-5] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 11:46:43.787 [http-nio-8080-exec-5] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 3
2019-01-25 11:46:46.106 [http-nio-8080-exec-4] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - ==>  Preparing: delete from user_info where user_id=? 
2019-01-25 11:46:46.108 [http-nio-8080-exec-4] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - ==> Parameters: 1(Integer)
2019-01-25 11:46:46.178 [http-nio-8080-exec-4] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - <==    Updates: 1
2019-01-25 11:46:46.278 [http-nio-8080-exec-2] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 11:46:46.279 [http-nio-8080-exec-2] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 11:46:46.281 [http-nio-8080-exec-2] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 2
2019-01-25 11:46:49.022 [http-nio-8080-exec-6] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - ==>  Preparing: delete from user_info where user_id=? 
2019-01-25 11:46:49.022 [http-nio-8080-exec-6] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - ==> Parameters: 2(Integer)
2019-01-25 11:46:49.055 [http-nio-8080-exec-6] DEBUG com.yun.user.dao.UserInfoDao.deleteUserInfo - <==    Updates: 1
2019-01-25 11:46:49.117 [http-nio-8080-exec-7] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 11:46:49.118 [http-nio-8080-exec-7] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 11:46:49.120 [http-nio-8080-exec-7] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 1
2019-01-25 11:46:58.993 [http-nio-8080-exec-9] DEBUG com.yun.user.dao.UserInfoDao.insertUserInfo - ==>  Preparing: insert into user_info(login_name,login_pass,user_name) values(?,?,?) 
2019-01-25 11:46:58.993 [http-nio-8080-exec-9] DEBUG com.yun.user.dao.UserInfoDao.insertUserInfo - ==> Parameters: admin(String), 123(String), admin(String)
2019-01-25 11:46:59.009 [http-nio-8080-exec-9] DEBUG com.yun.user.dao.UserInfoDao.insertUserInfo - <==    Updates: 1
2019-01-25 11:46:59.103 [http-nio-8080-exec-10] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 11:46:59.103 [http-nio-8080-exec-10] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 11:46:59.105 [http-nio-8080-exec-10] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 2
2019-01-25 11:56:03.247 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:56:03.248 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:56:03.252 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:56:03.259 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:56:03.262 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:56:03.268 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:56:03.268 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:03.268 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:56:03.269 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:56:03.270 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:03.270 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:56:03.271 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:56:03.272 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:03.272 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:56:03.273 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:56:03.273 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:03.274 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:56:03.275 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:56:03.275 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:03.275 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:56:03.276 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 11:56:07.882 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 
2019-01-25 11:56:07.883 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 11:56:07.886 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 11:56:07.890 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,? 
2019-01-25 11:56:07.891 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 11:56:07.895 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-25 11:56:07.896 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:07.896 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 11:56:07.898 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:56:07.899 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:07.899 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 11:56:07.900 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:56:07.901 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:07.902 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-01-25 11:56:07.903 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-01-25 11:56:07.904 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:07.904 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-01-25 11:56:07.905 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 11:56:07.905 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 11:56:07.906 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 7(Integer)
2019-01-25 11:56:07.907 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:25:09.565 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4288 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 15:25:09.570 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 15:25:09.570 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 15:25:09.931 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 15:25:10.262 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 15:25:10 CST 2019]; root of context hierarchy
2019-01-25 15:25:11.942 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 15:25:11.952 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 15:25:11.953 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 15:25:12.049 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 15:25:12.049 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1787 ms
2019-01-25 15:25:12.184 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 15:25:12.192 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 15:25:12.193 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 15:25:12.194 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 15:25:12.194 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 15:25:12.946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 15:25:10 CST 2019]; root of context hierarchy
2019-01-25 15:25:13.002 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 15:25:13.003 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 15:25:13.003 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 15:25:13.004 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 15:25:13.004 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 15:25:13.004 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 15:25:13.005 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 15:25:13.005 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 15:25:13.005 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 15:25:13.006 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 15:25:13.008 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 15:25:13.009 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 15:25:13.009 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 15:25:13.009 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 15:25:13.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 15:25:13.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 15:25:13.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 15:25:13.010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(org.springframework.ui.Model)
2019-01-25 15:25:13.011 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 15:25:13.012 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 15:25:13.012 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 15:25:13.012 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 15:25:13.012 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 15:25:13.012 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 15:25:13.015 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 15:25:13.016 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 15:25:13.049 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 15:25:13.049 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 15:25:13.086 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 15:25:13.396 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 15:25:13.666 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 15:25:13.685 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 15:25:13.695 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 15:25:13.708 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 15:25:13.726 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 15:25:13.731 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.638 seconds (JVM running for 5.745)
2019-01-25 15:25:22.025 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 15:25:22.025 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 15:25:22.043 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 15:25:22.071 [http-nio-8080-exec-1] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:25:22.493 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:22.512 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:25:22.524 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:22.525 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:22.531 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:22.531 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:22.532 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:22.533 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:22.534 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-25 15:25:22.534 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:22.535 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-25 15:25:22.536 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:22.536 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 15:25:22.537 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:22.537 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:25:27.221 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:25:27.223 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 31(Integer)
2019-01-25 15:25:27.225 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:27.225 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 31(Integer)
2019-01-25 15:25:27.226 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:27.226 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:25:27.229 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_type_id=? 
2019-01-25 15:25:27.230 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==> Parameters: 31(Integer)
2019-01-25 15:25:27.234 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - <==      Total: 0
2019-01-25 15:25:27.238 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - ==>  Preparing: delete from product_type where prod_type_id=? 
2019-01-25 15:25:27.239 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - ==> Parameters: 31(Integer)
2019-01-25 15:25:27.248 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - <==    Updates: 1
2019-01-25 15:25:27.295 [http-nio-8080-exec-3] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:25:27.344 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:27.345 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:25:27.347 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:27.347 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:27.349 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:27.350 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:27.352 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:27.353 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:25:27.355 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:27.355 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 15:25:27.357 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:27.357 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:25:29.825 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:25:29.826 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 29(Integer)
2019-01-25 15:25:29.829 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:29.829 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:29.831 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:29.833 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:29.834 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:29.834 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:25:29.835 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:25:31.092 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:31.093 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:25:31.098 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:31.099 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:31.101 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:31.101 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:31.102 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:31.103 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:25:31.104 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:31.104 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 15:25:31.105 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:31.106 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:25:32.432 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:25:32.433 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:25:32.434 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:25:32.437 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:25:32.438 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:25:32.440 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:25:35.574 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:25:35.575 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:25:35.578 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:25:35.581 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:25:35.582 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:25:35.583 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:25:36.662 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:25:36.731 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:36.732 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:25:36.734 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:36.734 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:36.736 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:36.737 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:36.739 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:36.739 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:25:36.739 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:36.740 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 15:25:36.741 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:36.742 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:25:37.285 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:25:37.288 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:25:37.289 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:25:37.293 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:25:37.294 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:25:37.295 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:25:38.729 [http-nio-8080-exec-4] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:25:38.798 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:38.798 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:25:38.800 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:38.801 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:38.802 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:38.803 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:38.804 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:38.805 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:25:38.808 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:38.809 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 15:25:38.811 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:38.812 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:25:46.065 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:25:46.065 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 38(Integer)
2019-01-25 15:25:46.067 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:46.068 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-25 15:25:46.070 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:25:46.070 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:25:46.074 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_type_id=? 
2019-01-25 15:25:46.075 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==> Parameters: 38(Integer)
2019-01-25 15:25:46.076 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - <==      Total: 0
2019-01-25 15:25:46.080 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - ==>  Preparing: delete from product_type where prod_type_id=? 
2019-01-25 15:25:46.080 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - ==> Parameters: 38(Integer)
2019-01-25 15:25:46.081 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - <==    Updates: 1
2019-01-25 15:25:46.155 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:25:46.202 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:46.202 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:25:46.204 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:46.204 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:25:46.205 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:25:46.206 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:25:46.207 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:25:46.207 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:25:46.207 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 1
2019-01-25 15:26:03.864 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - ==>  Preparing: insert into product_type(prod_type_name,parent_id) values(?,?) 
2019-01-25 15:26:03.865 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - ==> Parameters: 汽车用品(String), 0(Integer)
2019-01-25 15:26:03.895 [http-nio-8080-exec-9] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - <==    Updates: 1
2019-01-25 15:26:03.967 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:26:04.013 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:04.014 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:26:04.016 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:04.016 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:26:04.018 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:04.019 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:26:04.020 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:26:04.020 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:26:04.021 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:04.021 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:26:04.022 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:26:04.023 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:26:08.761 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:08.761 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:26:08.762 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:08.763 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:26:08.764 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:08.764 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:26:08.765 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:26:08.765 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:26:08.765 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:08.766 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:26:08.766 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:26:08.766 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:26:16.812 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - ==>  Preparing: insert into product_type(prod_type_name,parent_id) values(?,?) 
2019-01-25 15:26:16.814 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - ==> Parameters: 方向盘(String), 39(Integer)
2019-01-25 15:26:16.851 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - <==    Updates: 1
2019-01-25 15:26:16.926 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:26:16.982 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:16.983 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:26:16.984 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:16.985 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:26:16.986 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:16.987 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:26:16.988 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:26:16.988 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:26:16.989 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:16.989 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:26:16.991 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:16.991 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:26:16.992 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:26:16.992 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:26:16.992 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:26:24.807 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:26:24.807 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 39(Integer)
2019-01-25 15:26:24.809 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:24.810 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:26:24.811 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:26:24.812 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:26:24.813 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:26:24.813 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:26:24.813 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:27:45.396 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:27:45.448 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:27:45.448 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:27:45.449 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:27:45.449 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:27:45.451 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:27:45.451 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:27:45.452 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:27:45.453 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:27:45.453 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:27:45.454 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:27:45.457 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:27:45.457 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:27:45.458 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:27:45.458 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:27:45.458 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:28:56.565 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:28:56.569 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:28:56.570 [http-nio-8080-exec-3] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:28:56.572 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:28:56.572 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:28:56.573 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:28:57.329 [http-nio-8080-exec-5] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:28:57.398 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:57.399 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:28:57.400 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:57.401 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:28:57.402 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:57.402 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:28:57.403 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:28:57.404 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:28:57.404 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:57.404 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:28:57.406 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:57.407 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:28:57.408 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:28:57.408 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:28:57.408 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:28:59.248 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:59.248 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:28:59.249 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:59.250 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:28:59.251 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:59.251 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:28:59.252 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:28:59.253 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:28:59.253 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:59.253 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:28:59.255 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:28:59.256 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:28:59.257 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:28:59.257 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:28:59.257 [http-nio-8080-exec-8] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:29:01.216 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:01.218 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:29:01.221 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:01.222 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:29:01.225 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:01.226 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:29:01.227 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:01.228 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:01.228 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:01.228 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:29:01.229 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:01.230 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:29:01.231 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:01.231 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:01.231 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:29:29.765 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:29:29.835 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:29.835 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:29:29.837 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:29.837 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:29:29.839 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:29.840 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:29:29.841 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:29.841 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:29.842 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:29.842 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:29:29.844 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:29.844 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:29:29.845 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:29.846 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:29.846 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:29:36.328 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:29:36.329 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:29:36.333 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:29:36.337 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:29:36.337 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:29:36.339 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:29:38.388 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:29:38.389 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:29:38.392 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:29:38.397 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:29:38.398 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:29:38.398 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:29:41.282 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:41.282 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:29:41.285 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:41.285 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:29:41.286 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:41.286 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:29:41.287 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:41.287 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:41.288 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:41.288 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:29:41.290 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:41.290 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:29:41.291 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:41.292 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:41.292 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:29:51.272 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:51.273 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:29:51.274 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:51.275 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:29:51.276 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:51.276 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:29:51.277 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:51.277 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:51.278 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:51.278 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:29:51.280 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:29:51.280 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:29:51.281 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:29:51.282 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:29:51.282 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:29:54.005 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id,prod_state) values(?,?,?,0) 
2019-01-25 15:29:54.006 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: 方向盘(String), 22(String), 40(Integer)
2019-01-25 15:29:54.007 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-25 15:29:54.072 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:29:54.073 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:29:54.073 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:29:54.077 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:29:54.077 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:29:54.079 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:29:54.080 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:29:54.080 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 15:29:54.081 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:29:57.630 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:29:57.630 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 15:29:57.631 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:30:04.968 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:30:04.970 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 1(Integer)
2019-01-25 15:30:04.972 [http-nio-8080-exec-10] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:30:22.413 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.deleteProduct - ==>  Preparing: update product set prod_state=1 where prod_id=? 
2019-01-25 15:30:22.413 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.deleteProduct - ==> Parameters: 1(Integer)
2019-01-25 15:30:22.415 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.deleteProduct - <==    Updates: 1
2019-01-25 15:30:22.484 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:30:22.484 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:30:22.487 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:30:22.494 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:30:22.496 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:30:22.497 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:30:32.330 [http-nio-8080-exec-4] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:30:32.393 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:32.393 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:30:32.394 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:32.395 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:30:32.396 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:32.397 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:30:32.398 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:30:32.398 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:30:32.399 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:32.399 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:30:32.401 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:32.401 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 40(Integer)
2019-01-25 15:30:32.403 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:30:32.403 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:30:32.403 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:30:35.572 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:30:35.573 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 40(Integer)
2019-01-25 15:30:35.576 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:35.577 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 40(Integer)
2019-01-25 15:30:35.578 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:30:35.578 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:30:35.582 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_type_id=? 
2019-01-25 15:30:35.583 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==> Parameters: 40(Integer)
2019-01-25 15:30:35.586 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - <==      Total: 0
2019-01-25 15:30:35.589 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - ==>  Preparing: delete from product_type where prod_type_id=? 
2019-01-25 15:30:35.589 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - ==> Parameters: 40(Integer)
2019-01-25 15:30:35.591 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductTypeDao.deleteProductType - <==    Updates: 1
2019-01-25 15:30:35.669 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:30:35.728 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:35.729 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:30:35.730 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:35.730 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:30:35.732 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:35.733 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:30:35.734 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:30:35.734 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:30:35.736 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:35.736 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:30:35.738 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:30:35.739 [http-nio-8080-exec-7] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:30:47.436 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:47.437 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:30:47.438 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:47.439 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:30:47.440 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:47.440 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:30:47.441 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:30:47.442 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:30:47.442 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:47.442 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:30:47.444 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:30:47.445 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:30:49.518 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - ==>  Preparing: insert into product_type(prod_type_name,parent_id) values(?,?) 
2019-01-25 15:30:49.520 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - ==> Parameters: 方向盘(String), 39(Integer)
2019-01-25 15:30:49.522 [http-nio-8080-exec-10] DEBUG c.yun.product.dao.ProductTypeDao.insertProductType - <==    Updates: 1
2019-01-25 15:30:49.603 [http-nio-8080-exec-1] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:30:49.669 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:49.670 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:30:49.671 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:49.671 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:30:49.673 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:49.673 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:30:49.674 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:30:49.675 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:30:49.675 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:49.675 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:30:49.677 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:30:49.677 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 15:30:49.678 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:30:49.679 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:30:49.679 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:30:52.352 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:30:52.353 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:30:52.354 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:30:52.359 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:30:52.360 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:30:52.362 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 15:31:02.459 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:02.460 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:31:02.461 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:02.462 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:31:02.463 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:02.464 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:31:02.466 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:02.466 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:02.467 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:02.467 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:31:02.470 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:02.470 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 15:31:02.472 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:02.472 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:02.472 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:31:04.312 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id,prod_state) values(?,?,?,0) 
2019-01-25 15:31:04.313 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: 方向盘(String), 334(String), 41(Integer)
2019-01-25 15:31:04.323 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-25 15:31:04.380 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:04.380 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:04.380 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:04.382 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:04.382 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:04.383 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:04.384 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:04.384 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:04.385 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:05.797 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:05.798 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:05.800 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:05.806 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:05.807 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:05.810 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:05.810 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:05.811 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:05.814 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:07.009 [http-nio-8080-exec-9] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 15:31:07.068 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:07.068 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:31:07.070 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:07.070 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:31:07.071 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:07.071 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:31:07.072 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:07.072 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:07.073 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:07.073 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:31:07.074 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:07.074 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 15:31:07.075 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:07.075 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:07.076 [http-nio-8080-exec-10] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:31:09.480 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:31:09.480 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 39(Integer)
2019-01-25 15:31:09.482 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:09.482 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:31:09.483 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:09.483 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 15:31:09.484 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:09.485 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:09.485 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:31:10.845 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:10.845 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:31:10.846 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:10.846 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:31:10.848 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:10.848 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:31:10.849 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:10.850 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:10.850 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:10.850 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:31:10.852 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:10.852 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 15:31:10.854 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:10.854 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:10.854 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:31:13.711 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-25 15:31:13.712 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 41(Integer)
2019-01-25 15:31:13.713 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:13.714 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 41(Integer)
2019-01-25 15:31:13.715 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-25 15:31:13.715 [http-nio-8080-exec-4] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-25 15:31:13.719 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_type_id=? 
2019-01-25 15:31:13.719 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - ==> Parameters: 41(Integer)
2019-01-25 15:31:13.721 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductByProdType - <==      Total: 1
2019-01-25 15:31:14.739 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:14.740 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 15:31:14.741 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:14.741 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 15:31:14.742 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:14.743 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 15:31:14.743 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:14.745 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:14.746 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:14.746 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 15:31:14.748 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 15:31:14.749 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 15:31:14.750 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 15:31:14.751 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 15:31:14.751 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 15:31:16.523 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:16.523 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:16.526 [http-nio-8080-exec-5] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:16.530 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:16.530 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:16.532 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:16.532 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:16.533 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:16.534 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:37.232 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:37.232 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:37.234 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:37.239 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:37.240 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:37.242 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:37.243 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:37.243 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:37.244 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:37.822 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:37.822 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:37.825 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:37.829 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:37.829 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:37.831 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:37.831 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:37.831 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:37.832 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:38.244 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:38.244 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:38.246 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:38.250 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:38.250 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:38.252 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:38.252 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:38.252 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:38.253 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:39.527 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:39.528 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:39.531 [http-nio-8080-exec-9] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-01-25 15:31:44.488 [http-nio-8080-exec-10] DEBUG c.y.p.d.ProductParameterDao.deleteProductParameter - ==>  Preparing: delete from product_parameter where prod_param_id=? 
2019-01-25 15:31:44.488 [http-nio-8080-exec-10] DEBUG c.y.p.d.ProductParameterDao.deleteProductParameter - ==> Parameters: 4(Integer)
2019-01-25 15:31:44.490 [http-nio-8080-exec-10] DEBUG c.y.p.d.ProductParameterDao.deleteProductParameter - <==    Updates: 1
2019-01-25 15:31:44.583 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:31:44.584 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:31:44.584 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:31:44.587 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:31:44.588 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:31:44.588 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:31:44.589 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:44.589 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:44.589 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:31:45.856 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:31:45.857 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:31:45.859 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:35:26.345 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:35:26.345 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:35:26.347 [http-nio-8080-exec-1] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:35:26.350 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:35:26.351 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:35:26.352 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:35:26.352 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:35:26.353 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:35:26.354 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:35:32.111 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:35:32.112 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:35:32.116 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:35:32.123 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:35:32.123 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:35:32.126 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:35:32.127 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:35:32.127 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:35:32.128 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:35:46.943 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:35:46.944 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:35:46.946 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:35:46.949 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:35:46.949 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:35:46.951 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:35:46.951 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:35:46.951 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:35:46.952 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:35:48.050 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:35:48.051 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:35:48.053 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:36:01.495 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 15:36:01.495 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 15:36:01.497 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 15:36:01.500 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 15:36:01.500 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 15:36:01.502 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 15:36:01.503 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:36:01.503 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:36:01.504 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:36:02.967 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:36:02.968 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:36:02.969 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:36:07.847 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 15:36:07.848 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 15:36:07.850 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 15:40:07.482 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5500 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 15:40:07.486 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 15:40:07.487 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 15:40:07.927 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 15:40:07 CST 2019]; root of context hierarchy
2019-01-25 15:40:08.466 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 15:40:10.064 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 15:40:10.076 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 15:40:10.078 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 15:40:10.226 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 15:40:10.227 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2300 ms
2019-01-25 15:40:10.408 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 15:40:10.413 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 15:40:10.414 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 15:40:10.414 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 15:40:10.414 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 15:40:11.263 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 15:40:07 CST 2019]; root of context hierarchy
2019-01-25 15:40:11.318 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 15:40:11.319 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 15:40:11.319 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 15:40:11.319 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 15:40:11.320 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 15:40:11.320 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 15:40:11.321 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 15:40:11.321 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 15:40:11.321 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 15:40:11.322 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 15:40:11.324 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 15:40:11.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 15:40:11.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 15:40:11.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 15:40:11.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 15:40:11.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 15:40:11.326 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 15:40:11.326 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(org.springframework.ui.Model)
2019-01-25 15:40:11.327 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 15:40:11.327 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 15:40:11.328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 15:40:11.328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 15:40:11.328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 15:40:11.328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 15:40:11.331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 15:40:11.331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 15:40:11.367 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 15:40:11.368 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 15:40:11.407 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 15:40:11.768 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 15:40:12.015 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 15:40:12.066 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 15:40:12.082 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 15:40:12.099 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 15:40:12.123 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 15:40:12.129 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.164 seconds (JVM running for 6.633)
2019-01-25 15:41:03.186 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 15:41:03.186 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 15:41:03.207 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-25 15:41:05.659 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.yun.stock.dao.ProductStockDao.findProductStockList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.yun.stock.dao.ProductStockDao.findProductStockList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:227)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:49)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy79.findProductStockList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy80.findProductStockList(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductStockList(ProductStockService.java:17)
	at com.yun.stock.controller.ProductStockController.productStocklist(ProductStockController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 15:41:56.258 [http-nio-8080-exec-9] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-25 15:41:56.285 [http-nio-8080-exec-9] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-25 15:41:56.299 [http-nio-8080-exec-9] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 2
2019-01-25 15:42:04.399 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.yun.stock.dao.ProductStockDao.findProductStockList] with root cause
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.yun.stock.dao.ProductStockDao.findProductStockList
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:227)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:49)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy79.findProductStockList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy80.findProductStockList(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductStockList(ProductStockService.java:17)
	at com.yun.stock.controller.ProductStockController.productStocklist(ProductStockController.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 16:03:23.235 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5272 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:03:23.240 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:03:23.241 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:03:24.227 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:03:24 CST 2019]; root of context hierarchy
2019-01-25 16:03:24.299 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:03:25.680 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:03:25.691 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:03:25.692 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:03:25.804 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:03:25.804 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1577 ms
2019-01-25 16:03:25.952 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:03:25.963 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:03:25.964 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:03:25.964 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:03:25.964 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:03:26.474 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.stock.dao.ProductStockDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-01-25 16:03:26.481 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController': Unsatisfied dependency expressed through field 'productStockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockService': Unsatisfied dependency expressed through field 'productStockDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
2019-01-25 16:03:26.483 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-01-25 16:03:26.521 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-01-25 16:03:26.528 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController': Unsatisfied dependency expressed through field 'productStockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockService': Unsatisfied dependency expressed through field 'productStockDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockService': Unsatisfied dependency expressed through field 'productStockDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-01-25 16:04:46.028 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6084 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:04:46.032 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:04:46.033 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:04:46.339 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:04:46.688 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:04:46 CST 2019]; root of context hierarchy
2019-01-25 16:04:48.427 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:04:48.437 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:04:48.438 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:04:48.586 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:04:48.586 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1898 ms
2019-01-25 16:04:48.792 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:04:48.797 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:04:48.798 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:04:48.798 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:04:48.798 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:04:49.466 [main] ERROR org.mybatis.spring.mapper.MapperFactoryBean - Error while adding the mapper 'interface com.yun.stock.dao.ProductStockDao' to configuration.
org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-01-25 16:04:49.471 [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController': Unsatisfied dependency expressed through field 'productStockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockService': Unsatisfied dependency expressed through field 'productStockDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
2019-01-25 16:04:49.475 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2019-01-25 16:04:49.505 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019-01-25 16:04:49.517 [main] ERROR org.springframework.boot.SpringApplication - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockController': Unsatisfied dependency expressed through field 'productStockService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockService': Unsatisfied dependency expressed through field 'productStockDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.yun.YunEbStockApplication.main(YunEbStockApplication.java:13)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'productStockService': Unsatisfied dependency expressed through field 'productStockDao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'productStockDao' defined in file [E:\workspace\yun-eb-stock\target\classes\com\yun\stock\dao\ProductStockDao.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585)
	... 32 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:83)
	at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:44)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)
	... 42 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:472)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parseStatement(MapperAnnotationBuilder.java:289)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:134)
	at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:72)
	at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:741)
	at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:80)
	... 45 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error creating document instance.  Cause: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 189; Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:259)
	at org.apache.ibatis.parsing.XPathParser.<init>(XPathParser.java:115)
	at org.apache.ibatis.scripting.xmltags.XMLLanguageDriver.createSqlSource(XMLLanguageDriver.java:51)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.buildSqlSourceFromStrings(MapperAnnotationBuilder.java:482)
	at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.getSqlSourceFromAnnotations(MapperAnnotationBuilder.java:465)
	... 50 common frames omitted
Caused by: org.xml.sax.SAXParseException: Attribute name "param.prodName" associated with an element type "if" must be followed by the ' = ' character.
	at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
	at org.apache.xerces.util.ErrorHandlerWrapper.fatalError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source)
	at org.apache.xerces.impl.XMLScanner.reportFatalError(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanAttribute(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)
	at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
	at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
	at org.apache.xerces.parsers.DOMParser.parse(Unknown Source)
	at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source)
	at org.apache.ibatis.parsing.XPathParser.createDocument(XPathParser.java:257)
	... 54 common frames omitted
2019-01-25 16:04:59.555 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1768 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:04:59.598 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:04:59.599 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:04:59.914 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:05:00.391 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:05:00 CST 2019]; root of context hierarchy
2019-01-25 16:05:01.848 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:05:01.859 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:05:01.860 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:05:01.965 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:05:01.966 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1575 ms
2019-01-25 16:05:02.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:05:02.114 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:05:02.115 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:05:02.115 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:05:02.115 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:05:02.868 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:05:00 CST 2019]; root of context hierarchy
2019-01-25 16:05:02.924 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 16:05:02.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 16:05:02.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 16:05:02.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 16:05:02.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 16:05:02.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 16:05:02.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 16:05:02.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 16:05:02.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 16:05:02.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 16:05:02.930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 16:05:02.930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 16:05:02.930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 16:05:02.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 16:05:02.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 16:05:02.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 16:05:02.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 16:05:02.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 16:05:02.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 16:05:02.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 16:05:02.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 16:05:02.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 16:05:02.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 16:05:02.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 16:05:02.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 16:05:02.937 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 16:05:02.969 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:05:02.969 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:05:03.006 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:05:03.296 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 16:05:03.565 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 16:05:03.584 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 16:05:03.595 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 16:05:03.608 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 16:05:03.625 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 16:05:03.630 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.473 seconds (JVM running for 5.635)
2019-01-25 16:05:08.148 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 16:05:08.148 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 16:05:08.166 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 16:05:11.023 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'param.prodName!=null'. Cause: org.apache.ibatis.ognl.OgnlException: source is null for getProperty(null, "prodName")] with root cause
org.apache.ibatis.ognl.OgnlException: source is null for getProperty(null, "prodName")
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2678)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTChain.getValueBody(ASTChain.java:141)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy58.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.findProductStockRowCnt(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy80.findProductStockRowCnt(Unknown Source)
	at com.yun.stock.service.ProductStockService.findProductStockRowCnt(ProductStockService.java:23)
	at com.yun.stock.controller.ProductStockController.productStocklist(ProductStockController.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 16:07:15.465 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4928 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:07:15.469 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:07:15.470 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:07:15.811 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:07:15 CST 2019]; root of context hierarchy
2019-01-25 16:07:16.136 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:07:17.442 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:07:17.452 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:07:17.453 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:07:17.562 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:07:17.563 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1753 ms
2019-01-25 16:07:17.702 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:07:17.706 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:07:17.707 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:07:17.707 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:07:17.707 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:07:18.439 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:07:15 CST 2019]; root of context hierarchy
2019-01-25 16:07:18.493 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 16:07:18.494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 16:07:18.494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 16:07:18.494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 16:07:18.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 16:07:18.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 16:07:18.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 16:07:18.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 16:07:18.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 16:07:18.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 16:07:18.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 16:07:18.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 16:07:18.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 16:07:18.500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 16:07:18.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 16:07:18.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 16:07:18.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 16:07:18.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 16:07:18.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 16:07:18.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 16:07:18.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 16:07:18.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 16:07:18.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 16:07:18.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 16:07:18.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 16:07:18.509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 16:07:18.543 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:07:18.543 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:07:18.597 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:07:18.895 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 16:07:19.153 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 16:07:19.173 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 16:07:19.183 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 16:07:19.196 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 16:07:19.214 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 16:07:19.219 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.232 seconds (JVM running for 5.404)
2019-01-25 16:07:22.589 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 16:07:22.589 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 16:07:22.608 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-25 16:07:22.923 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:07:22.942 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:07:22.955 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:07:22.962 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:07:22.963 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:07:22.964 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:07:23.364 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "/stock/productStockList": Exception evaluating SpringEL expression: "page.pageCnt" (/stock/productStockList)
2019-01-25 16:07:23.369 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "page.pageCnt" (/stock/productStockList)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'pageCnt' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:222)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:120)
	at org.thymeleaf.standard.processor.attr.AbstractStandardTextChildModifierAttrProcessor.getText(AbstractStandardTextChildModifierAttrProcessor.java:68)
	at org.thymeleaf.processor.attr.AbstractTextChildModifierAttrProcessor.getModifiedChildren(AbstractTextChildModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractChildrenModifierAttrProcessor.processAttribute(AbstractChildrenModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 16:14:55.630 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5600 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:14:55.651 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:14:55.651 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:14:56.186 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:14:56 CST 2019]; root of context hierarchy
2019-01-25 16:14:56.191 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:14:57.682 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:14:57.692 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:14:57.693 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:14:57.798 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:14:57.798 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1612 ms
2019-01-25 16:14:57.934 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:14:57.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:14:57.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:14:57.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:14:57.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:14:58.674 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:14:56 CST 2019]; root of context hierarchy
2019-01-25 16:14:58.729 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 16:14:58.730 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 16:14:58.731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 16:14:58.732 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 16:14:58.733 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 16:14:58.733 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 16:14:58.737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 16:14:58.737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 16:14:58.738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 16:14:58.738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 16:14:58.742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 16:14:58.742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 16:14:58.742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 16:14:58.743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 16:14:58.743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 16:14:58.743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 16:14:58.743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 16:14:58.744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 16:14:58.744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 16:14:58.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 16:14:58.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 16:14:58.745 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 16:14:58.746 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 16:14:58.746 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 16:14:58.749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 16:14:58.750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 16:14:58.784 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:14:58.784 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:14:58.823 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:14:59.118 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 16:14:59.399 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 16:14:59.418 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 16:14:59.429 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 16:14:59.442 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 16:14:59.459 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 16:14:59.463 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.242 seconds (JVM running for 5.541)
2019-01-25 16:15:13.188 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 16:15:13.189 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 16:15:13.209 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-25 16:15:14.782 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 16:15:14.802 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 16:15:14.815 [http-nio-8080-exec-8] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 16:15:14.825 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 16:15:14.826 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:15:14.828 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 16:15:14.829 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 16:15:14.830 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 16:15:14.832 [http-nio-8080-exec-8] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 16:15:17.132 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:15:17.133 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:15:17.139 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:15:17.141 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:15:17.142 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:15:17.144 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:15:22.887 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:15:22.888 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:15:22.890 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:15:22.891 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:15:22.892 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:15:22.893 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:15:26.710 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:15:26.712 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:15:26.716 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:15:26.720 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:15:26.722 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:15:26.725 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:15:31.411 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:15:31.413 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:15:31.416 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:15:31.418 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:15:31.419 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:15:31.422 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:15:37.599 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:15:37.601 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:15:37.604 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:15:37.606 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:15:37.607 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:15:37.611 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:29:52.780 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:29:52.781 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:29:52.784 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:29:52.788 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:29:52.789 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:29:52.793 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:29:55.474 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:29:55.476 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:29:55.479 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:29:55.482 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:29:55.484 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:29:55.486 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:30:58.442 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1688 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:30:58.447 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:30:58.447 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:30:58.928 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:30:58 CST 2019]; root of context hierarchy
2019-01-25 16:30:59.110 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:31:00.564 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:31:00.578 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:31:00.580 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:31:00.688 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:31:00.689 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1761 ms
2019-01-25 16:31:00.864 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:31:00.869 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:31:00.870 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:31:00.870 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:31:00.870 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:31:01.640 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:30:58 CST 2019]; root of context hierarchy
2019-01-25 16:31:01.698 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 16:31:01.699 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 16:31:01.699 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 16:31:01.699 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 16:31:01.700 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 16:31:01.700 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 16:31:01.701 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 16:31:01.701 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 16:31:01.701 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 16:31:01.701 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 16:31:01.704 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 16:31:01.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 16:31:01.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 16:31:01.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 16:31:01.705 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 16:31:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 16:31:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 16:31:01.706 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 16:31:01.707 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 16:31:01.707 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 16:31:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 16:31:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 16:31:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 16:31:01.708 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 16:31:01.711 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 16:31:01.712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 16:31:01.745 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:31:01.746 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:31:01.784 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:31:02.083 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 16:31:02.332 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 16:31:02.352 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 16:31:02.362 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 16:31:02.376 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 16:31:02.393 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 16:31:02.398 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.352 seconds (JVM running for 5.708)
2019-01-25 16:31:06.119 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 16:31:06.119 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 16:31:06.137 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 16:31:10.130 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:31:10.150 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:31:10.159 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:31:10.166 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:31:10.167 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:31:10.168 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:32:13.992 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 16:32:13.993 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 16:32:13.997 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 16:32:14.001 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 16:32:14.002 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:32:14.005 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 16:32:14.006 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 16:32:14.007 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 16:32:14.008 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 16:32:17.398 [http-nio-8080-exec-3] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 16:32:17.482 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 16:32:17.482 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 16:32:17.487 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 16:32:17.488 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 16:32:17.490 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 16:32:17.492 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 16:32:17.493 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 16:32:17.494 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 16:32:17.495 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 16:32:17.495 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 16:32:17.497 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 16:32:17.497 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 16:32:17.497 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 16:32:17.499 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 16:32:17.499 [http-nio-8080-exec-5] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 16:32:20.765 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 16:32:20.766 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 16:32:20.768 [http-nio-8080-exec-6] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 16:32:20.773 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 16:32:20.773 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:32:20.775 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 16:32:20.775 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 16:32:20.776 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 16:32:20.778 [http-nio-8080-exec-6] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 16:32:25.107 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:32:25.108 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:32:25.110 [http-nio-8080-exec-7] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:32:25.111 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:32:25.112 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:32:25.114 [http-nio-8080-exec-7] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:40:13.922 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4220 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:40:13.926 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:40:13.927 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:40:14.271 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:40:14 CST 2019]; root of context hierarchy
2019-01-25 16:40:14.696 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:40:16.017 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:40:16.027 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:40:16.029 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:40:16.137 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:40:16.137 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1866 ms
2019-01-25 16:40:16.283 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:40:16.288 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:40:16.289 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:40:16.290 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:40:16.290 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:40:17.156 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:40:14 CST 2019]; root of context hierarchy
2019-01-25 16:40:17.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 16:40:17.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 16:40:17.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 16:40:17.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 16:40:17.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 16:40:17.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 16:40:17.240 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 16:40:17.240 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 16:40:17.240 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 16:40:17.241 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 16:40:17.243 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 16:40:17.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 16:40:17.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 16:40:17.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 16:40:17.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 16:40:17.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 16:40:17.245 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 16:40:17.246 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 16:40:17.246 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 16:40:17.246 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 16:40:17.246 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 16:40:17.247 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 16:40:17.247 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 16:40:17.247 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 16:40:17.248 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 16:40:17.248 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 16:40:17.251 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 16:40:17.252 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 16:40:17.284 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:40:17.284 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:40:17.323 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:40:17.624 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 16:40:17.890 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 16:40:17.909 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 16:40:17.920 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 16:40:17.933 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 16:40:17.951 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 16:40:17.956 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.566 seconds (JVM running for 5.737)
2019-01-25 16:40:36.814 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 16:40:36.814 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 16:40:36.833 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-25 16:40:37.153 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:40:37.172 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:40:37.185 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:40:37.192 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:40:37.193 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:40:37.194 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:40:44.643 [http-nio-8080-exec-2] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-2] Exception processing template "/stock/productStockAdd": Error resolving template "/stock/productStockAdd", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-01-25 16:40:44.649 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "/stock/productStockAdd", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "/stock/productStockAdd", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 16:41:27.231 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5972 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 16:41:27.236 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 16:41:27.237 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 16:41:27.612 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 16:41:27.751 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:41:27 CST 2019]; root of context hierarchy
2019-01-25 16:41:29.250 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 16:41:29.261 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 16:41:29.262 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 16:41:29.387 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 16:41:29.387 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1636 ms
2019-01-25 16:41:29.531 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 16:41:29.536 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 16:41:29.537 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 16:41:29.537 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 16:41:29.537 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 16:41:30.285 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 16:41:27 CST 2019]; root of context hierarchy
2019-01-25 16:41:30.346 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 16:41:30.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 16:41:30.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 16:41:30.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 16:41:30.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 16:41:30.348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 16:41:30.349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 16:41:30.349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 16:41:30.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 16:41:30.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 16:41:30.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 16:41:30.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 16:41:30.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 16:41:30.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 16:41:30.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 16:41:30.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 16:41:30.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 16:41:30.355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 16:41:30.355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 16:41:30.355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 16:41:30.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 16:41:30.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 16:41:30.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 16:41:30.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 16:41:30.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 16:41:30.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 16:41:30.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 16:41:30.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 16:41:30.393 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:41:30.393 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:41:30.430 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 16:41:30.723 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 16:41:30.982 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 16:41:31.002 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 16:41:31.013 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 16:41:31.027 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 16:41:31.044 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 16:41:31.049 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.317 seconds (JVM running for 5.482)
2019-01-25 16:41:36.640 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 16:41:36.640 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 16:41:36.658 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2019-01-25 16:41:48.235 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:41:48.254 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:41:48.266 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:41:48.273 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:41:48.274 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:41:48.275 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:48:47.596 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:48:47.597 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:48:47.603 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:48:47.607 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:48:47.607 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:48:47.609 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:48:53.209 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:48:53.211 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:48:53.214 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:48:53.216 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:48:53.217 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:48:53.219 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:49:31.558 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:49:31.558 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:49:31.560 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:49:31.562 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:49:31.564 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:49:31.567 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:49:33.999 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:49:34.001 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:49:34.008 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:49:34.012 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:49:34.014 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:49:34.017 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 16:49:39.415 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 16:49:39.417 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 16:49:39.420 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 16:49:39.422 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 16:49:39.423 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 16:49:39.428 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:23:29.794 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 17:23:29.795 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 17:23:29.797 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 17:23:29.801 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 17:23:29.801 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:23:29.803 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 17:23:29.805 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 17:23:29.805 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 17:23:29.806 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 17:23:31.522 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:23:31.525 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:23:31.529 [http-nio-8080-exec-4] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:23:31.530 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:23:31.531 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:23:31.532 [http-nio-8080-exec-4] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:23:38.963 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:23:38.964 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:23:38.967 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:23:38.968 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:23:38.968 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:23:38.970 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:23:48.252 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4532 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:23:48.257 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:23:48.258 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:23:48.737 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:23:48 CST 2019]; root of context hierarchy
2019-01-25 17:23:48.849 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:23:50.358 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:23:50.368 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:23:50.369 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:23:50.479 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:23:50.479 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1742 ms
2019-01-25 17:23:50.645 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:23:50.654 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:23:50.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:23:50.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:23:50.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:23:51.407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:23:48 CST 2019]; root of context hierarchy
2019-01-25 17:23:51.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:23:51.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:23:51.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:23:51.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:23:51.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:23:51.465 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:23:51.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:23:51.466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:23:51.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:23:51.467 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:23:51.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:23:51.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:23:51.470 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:23:51.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:23:51.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:23:51.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:23:51.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:23:51.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:23:51.472 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:23:51.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:23:51.473 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:23:51.474 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:23:51.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:23:51.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:23:51.475 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:23:51.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:23:51.480 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:23:51.480 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:23:51.513 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:23:51.513 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:23:51.550 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:23:51.847 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:23:52.108 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:23:52.127 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:23:52.138 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:23:52.153 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:23:52.171 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:23:52.176 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.27 seconds (JVM running for 5.433)
2019-01-25 17:24:01.602 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:24:01.603 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:24:01.623 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-25 17:24:04.675 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:24:04.694 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:24:04.706 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:24:04.713 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:24:04.714 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:24:04.715 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:24:07.502 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:24:07.504 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:24:07.511 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:24:07.513 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:24:07.514 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:24:07.516 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:24:36.494 [http-nio-8080-exec-5] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-25 17:24:36.596 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:24:36.597 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 17:24:36.604 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:24:36.604 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 17:24:36.606 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:24:36.606 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 17:24:36.607 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 17:24:36.608 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 17:24:36.609 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:24:36.610 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 17:24:36.612 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:24:36.612 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 17:24:36.613 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 17:24:36.613 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 17:24:36.614 [http-nio-8080-exec-3] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 17:24:37.188 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-01-25 17:24:37.189 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-01-25 17:24:37.193 [http-nio-8080-exec-2] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-25 17:24:37.198 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-01-25 17:24:37.199 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:24:37.202 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 17:24:37.203 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 17:24:37.203 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 17:24:37.204 [http-nio-8080-exec-2] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
2019-01-25 17:24:38.829 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:24:38.830 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:24:38.833 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:24:38.835 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:24:38.836 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:24:38.838 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:25:54.456 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5484 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:25:54.463 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:25:54.464 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:25:54.943 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:25:54 CST 2019]; root of context hierarchy
2019-01-25 17:25:54.959 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:25:56.672 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:25:56.683 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:25:56.684 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:25:56.792 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:25:56.793 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1850 ms
2019-01-25 17:25:56.933 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:25:56.938 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:25:56.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:25:56.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:25:56.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:25:57.701 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:25:54 CST 2019]; root of context hierarchy
2019-01-25 17:25:57.756 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:25:57.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:25:57.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:25:57.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:25:57.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:25:57.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:25:57.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:25:57.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:25:57.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:25:57.760 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:25:57.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:25:57.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:25:57.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:25:57.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:25:57.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:25:57.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:25:57.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:25:57.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:25:57.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:25:57.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:25:57.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:25:57.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:25:57.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:25:57.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:25:57.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:25:57.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:25:57.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:25:57.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:25:57.807 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:25:57.807 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:25:57.845 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:25:58.143 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:25:58.407 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:25:58.427 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:25:58.437 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:25:58.451 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:25:58.469 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:25:58.473 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.433 seconds (JVM running for 5.579)
2019-01-25 17:26:02.277 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:26:02.277 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:26:02.296 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-25 17:26:05.249 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:26:05.554 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:26:05.574 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:26:05.585 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:26:05.593 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:26:05.593 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:26:05.594 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:26:05.595 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:26:34.292 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:26:34.296 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:26:34.297 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:26:34.298 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:26:34.300 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:26:34.301 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:26:34.302 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:26:34.303 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:26:36.011 [http-nio-8080-exec-3] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:26:36.013 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:26:36.014 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:26:36.021 [http-nio-8080-exec-3] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:26:36.023 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:26:36.025 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:26:36.027 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:26:36.028 [http-nio-8080-exec-3] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:27:22.371 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4256 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:27:22.380 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:27:22.380 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:27:22.842 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:27:22 CST 2019]; root of context hierarchy
2019-01-25 17:27:23.003 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:27:25.376 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:27:25.393 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:27:25.395 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:27:25.568 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:27:25.568 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2727 ms
2019-01-25 17:27:25.842 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:27:25.851 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:27:25.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:27:25.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:27:25.852 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:27:26.862 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:27:22 CST 2019]; root of context hierarchy
2019-01-25 17:27:26.922 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:27:26.922 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:27:26.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:27:26.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:27:26.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:27:26.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:27:26.924 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:27:26.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:27:26.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:27:26.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:27:26.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:27:26.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:27:26.929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:27:26.929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:27:26.929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:27:26.929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:27:26.930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:27:26.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:27:26.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:27:26.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:27:26.931 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:27:26.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:27:26.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:27:26.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:27:26.932 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:27:26.933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:27:26.935 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:27:26.936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:27:26.969 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:27:26.969 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:27:27.006 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:27:27.305 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:27:27.572 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:27:27.592 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:27:27.603 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:27:27.617 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:27:27.634 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:27:27.639 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.685 seconds (JVM running for 6.888)
2019-01-25 17:27:30.738 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:27:30.739 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:27:30.760 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-01-25 17:27:33.177 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:27:33.482 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:27:33.502 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:27:33.515 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:27:33.522 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:27:33.523 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:27:33.524 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:27:33.525 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:27:34.796 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:27:34.799 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:27:34.800 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:27:34.804 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:27:34.806 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:27:34.807 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:27:34.810 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:27:34.810 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:29:01.886 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-25 17:29:01.902 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-25 17:29:01.904 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-25 17:29:02.053 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-25 17:29:02.068 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-25 17:29:02.113 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@689604d9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@18078bef, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@799f10e1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4c371370, org.springframework.test.context.transaction.TransactionalTestExecutionListener@145f66e3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3023df74, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@313ac989, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4562e04d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a65fe7c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4135c3b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6302bbb1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@31304f14]
2019-01-25 17:29:02.115 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.YunEbStockApplicationTests], using SpringBootContextLoader
2019-01-25 17:29:02.118 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.YunEbStockApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-25 17:29:02.118 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.YunEbStockApplicationTests]: YunEbStockApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-25 17:29:02.128 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.YunEbStockApplicationTests
2019-01-25 17:29:02.139 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-25 17:29:02.144 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@408d971b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c6cb480, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3c46e67a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c730b35, org.springframework.test.context.transaction.TransactionalTestExecutionListener@206a70ef, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@292b08d6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@22555ebf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@36ebc363, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@45752059, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@34e9fd99, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3c41ed1d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@54d9d12d]
2019-01-25 17:29:02.156 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-25 17:29:02.158 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-25 17:29:02.158 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-25 17:29:02.166 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-25 17:29:02.174 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-25 17:29:02.179 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5dda768f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7a8c8dcf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@24269709, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2aceadd4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@24aed80c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3a52dba3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2a5c8d3f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@752325ad, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@279fedbd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@b3ca52e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@45c7e403, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2925bf5b]
2019-01-25 17:29:02.758 [main] INFO  com.yun.ProductTypeTest - Starting ProductTypeTest on USER-20181202BJ with PID 4264 (started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:29:02.759 [main] DEBUG com.yun.ProductTypeTest - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:29:02.759 [main] INFO  com.yun.ProductTypeTest - No active profile set, falling back to default profiles: default
2019-01-25 17:29:03.517 [main] INFO  o.s.w.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4d15107f: startup date [Fri Jan 25 17:29:03 CST 2019]; root of context hierarchy
2019-01-25 17:29:03.813 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:29:07.172 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4d15107f: startup date [Fri Jan 25 17:29:03 CST 2019]; root of context hierarchy
2019-01-25 17:29:07.302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:29:07.304 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:29:07.304 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:29:07.305 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:29:07.305 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:29:07.306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:29:07.308 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:29:07.308 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:29:07.308 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:29:07.309 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:29:07.314 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:29:07.315 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:29:07.315 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:29:07.315 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:29:07.316 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:29:07.316 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:29:07.317 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:29:07.318 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:29:07.318 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:29:07.319 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:29:07.320 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:29:07.322 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:29:07.323 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:29:07.323 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:29:07.324 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:29:07.324 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:29:07.327 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:29:07.328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:29:07.446 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:29:07.446 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:29:07.531 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:29:08.128 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: ServletContext resource [/index.html]
2019-01-25 17:29:08.752 [main] INFO  com.yun.ProductTypeTest - Started ProductTypeTest in 6.402 seconds (JVM running for 8.048)
2019-01-25 17:29:09.511 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:29:09.562 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-25 17:29:09.581 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:29:09.582 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-25 17:29:09.592 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:29:09.593 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-25 17:29:09.595 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 17:29:09.596 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 17:29:09.597 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:29:09.598 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-01-25 17:29:09.601 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-25 17:29:09.602 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-01-25 17:29:09.603 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-25 17:29:09.604 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-25 17:29:09.604 [main] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-25 17:29:09.642 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.YunEbStockApplicationTests], using SpringBootContextLoader
2019-01-25 17:29:09.643 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.YunEbStockApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-25 17:29:09.645 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.YunEbStockApplicationTests]: YunEbStockApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-25 17:29:09.655 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.YunEbStockApplicationTests
2019-01-25 17:29:09.660 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-25 17:29:09.663 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@76536c53, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@38d08cb5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@363c32cc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6f3f0ae, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6baf25d7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57a6a933, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5b5b59, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1934ad7c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@b27b210, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@69aa7d76, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@33f17289, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@f1266c6]
2019-01-25 17:29:09.677 [Thread-2] INFO  o.s.w.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4d15107f: startup date [Fri Jan 25 17:29:03 CST 2019]; root of context hierarchy
2019-01-25 17:29:31.976 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5460 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:29:31.982 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:29:31.983 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:29:32.520 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:29:32.667 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:29:32 CST 2019]; root of context hierarchy
2019-01-25 17:29:34.055 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:29:34.065 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:29:34.066 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:29:34.171 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:29:34.171 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1504 ms
2019-01-25 17:29:34.320 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:29:34.327 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:29:34.328 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:29:34.328 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:29:34.329 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:29:35.083 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:29:32 CST 2019]; root of context hierarchy
2019-01-25 17:29:35.139 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:29:35.140 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:29:35.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:29:35.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:29:35.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:29:35.141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:29:35.142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:29:35.142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:29:35.143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:29:35.143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:29:35.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:29:35.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:29:35.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:29:35.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:29:35.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:29:35.148 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:29:35.148 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:29:35.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:29:35.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:29:35.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:29:35.150 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:29:35.151 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:29:35.151 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:29:35.152 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:29:35.152 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:29:35.152 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:29:35.155 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:29:35.155 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:29:35.189 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:29:35.190 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:29:35.227 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:29:35.521 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:29:35.813 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:29:35.835 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:29:35.848 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:29:35.863 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:29:35.883 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:29:35.889 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.356 seconds (JVM running for 5.638)
2019-01-25 17:29:49.629 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:29:49.629 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:29:49.647 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 17:29:52.528 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:29:52.822 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:29:52.842 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:29:52.851 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:29:52.859 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:29:52.860 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:29:52.861 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:29:52.862 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:29:54.717 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:29:54.719 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:29:54.720 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:29:54.723 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:29:54.725 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:29:54.726 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:29:54.728 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:29:54.729 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:30:49.581 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:30:49.585 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:30:49.586 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:30:49.588 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:30:49.589 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:30:49.590 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:30:49.592 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:30:49.593 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:36:14.292 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-01-25 17:36:14.294 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-01-25 17:36:14.294 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-01-25 17:36:14.295 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-01-25 17:36:14.298 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-01-25 17:36:14.299 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-01-25 17:36:14.301 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 0
2019-01-25 17:36:14.303 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-01-25 17:41:00.628 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5560 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:41:00.633 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:41:00.633 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:41:01.278 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:41:01 CST 2019]; root of context hierarchy
2019-01-25 17:41:01.438 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:41:03.038 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:41:03.049 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:41:03.050 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:41:03.169 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:41:03.170 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1892 ms
2019-01-25 17:41:03.316 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:41:03.322 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:41:03.323 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:41:03.323 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:41:03.323 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:41:04.085 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:41:01 CST 2019]; root of context hierarchy
2019-01-25 17:41:04.145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-25 17:41:04.146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:41:04.146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:41:04.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:41:04.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:41:04.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:41:04.148 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:41:04.148 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:41:04.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:41:04.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:41:04.149 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:41:04.153 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:41:04.153 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:41:04.153 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:41:04.154 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:41:04.155 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:41:04.155 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:41:04.155 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:41:04.156 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:41:04.156 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:41:04.157 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:41:04.157 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:41:04.158 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:41:04.158 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:41:04.158 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:41:04.158 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:41:04.159 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:41:04.162 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:41:04.162 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:41:04.196 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:41:04.196 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:41:04.234 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:41:04.584 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:41:04.816 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:41:04.836 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:41:04.847 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:41:04.863 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:41:04.885 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:41:04.890 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.634 seconds (JVM running for 6.123)
2019-01-25 17:41:07.705 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:41:07.705 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:41:07.724 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 17:41:08.061 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id limit ?,? 
2019-01-25 17:41:08.081 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %null%(String), null, null
2019-01-25 17:41:08.174 [http-nio-8080-exec-1] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-01-25 17:41:08.245 [http-nio-8080-exec-1] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2019-01-25 17:41:08.264 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 1
### The error may exist in com/yun/product/dao/ProductDao.java (best guess)
### The error may involve com.yun.product.dao.ProductDao.findProductByParam-Inline
### The error occurred while setting parameters
### SQL: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0  and p.prod_name like ?  order by prod_id limit ?,?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 1] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'null,null' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy91.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy92.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy73.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:72)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$4de29b47.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$d3404356.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productListForAutoComplete(ProductController.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-25 17:42:18.919 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4756 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:42:18.923 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:42:18.924 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:42:19.329 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:42:19 CST 2019]; root of context hierarchy
2019-01-25 17:42:19.394 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:42:21.033 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:42:21.046 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:42:21.047 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:42:21.159 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:42:21.159 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1831 ms
2019-01-25 17:42:21.320 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:42:21.326 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:42:21.327 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:42:21.327 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:42:21.327 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:42:22.147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:42:19 CST 2019]; root of context hierarchy
2019-01-25 17:42:22.205 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-25 17:42:22.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:42:22.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:42:22.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:42:22.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:42:22.206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:42:22.207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:42:22.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:42:22.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:42:22.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:42:22.208 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:42:22.211 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:42:22.212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:42:22.212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:42:22.212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:42:22.212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:42:22.213 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:42:22.213 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:42:22.214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:42:22.214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:42:22.215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:42:22.215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:42:22.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:42:22.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:42:22.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:42:22.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:42:22.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:42:22.220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:42:22.220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:42:22.254 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:42:22.255 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:42:22.301 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:42:22.627 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:42:22.916 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:42:22.940 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:42:22.952 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:42:22.968 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:42:22.987 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:42:22.991 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.543 seconds (JVM running for 5.743)
2019-01-25 17:42:27.474 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:42:27.474 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:42:27.493 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-25 17:42:27.889 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-25 17:42:27.917 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %null%(String)
2019-01-25 17:42:27.926 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 17:43:29.694 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 and p.prod_name like ? order by prod_id 
2019-01-25 17:43:29.695 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %null%(String)
2019-01-25 17:43:29.697 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-25 17:43:42.503 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3632 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-25 17:43:42.509 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-25 17:43:42.509 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-25 17:43:42.997 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-25 17:43:43.159 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:43:43 CST 2019]; root of context hierarchy
2019-01-25 17:43:44.806 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-25 17:43:44.817 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-25 17:43:44.818 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-25 17:43:44.939 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-25 17:43:44.939 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1780 ms
2019-01-25 17:43:45.081 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-25 17:43:45.087 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-25 17:43:45.088 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-25 17:43:45.088 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-25 17:43:45.089 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-25 17:43:45.837 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Jan 25 17:43:43 CST 2019]; root of context hierarchy
2019-01-25 17:43:45.892 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-01-25 17:43:45.893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-25 17:43:45.893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-25 17:43:45.893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-25 17:43:45.894 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-01-25 17:43:45.894 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-01-25 17:43:45.894 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-01-25 17:43:45.895 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-01-25 17:43:45.895 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-01-25 17:43:45.896 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-01-25 17:43:45.896 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-01-25 17:43:45.898 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-25 17:43:45.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-25 17:43:45.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-25 17:43:45.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-25 17:43:45.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-25 17:43:45.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-25 17:43:45.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-25 17:43:45.901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-01-25 17:43:45.901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-01-25 17:43:45.901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStocklist]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-01-25 17:43:45.901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-25 17:43:45.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-25 17:43:45.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-25 17:43:45.903 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-25 17:43:45.903 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-25 17:43:45.903 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-01-25 17:43:45.906 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-25 17:43:45.907 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-25 17:43:45.940 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:43:45.941 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:43:45.978 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-25 17:43:46.272 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-25 17:43:46.527 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-25 17:43:46.547 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-25 17:43:46.558 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-25 17:43:46.572 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-25 17:43:46.590 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-25 17:43:46.595 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.577 seconds (JVM running for 5.801)
2019-01-25 17:43:59.487 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-25 17:43:59.487 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-25 17:43:59.505 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-25 17:43:59.840 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-01-25 17:43:59.860 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-01-25 17:43:59.875 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-25 17:43:59.877 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-01-25 17:43:59.878 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-01-25 17:43:59.878 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 0
