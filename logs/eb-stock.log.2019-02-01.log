2019-02-01 08:58:08.172 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 08:58:08.571 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5824 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 08:58:08.571 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 08:58:08.572 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 08:58:08.831 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 08:58:08 CST 2019]; root of context hierarchy
2019-02-01 08:58:10.194 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 08:58:10.204 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 08:58:10.205 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 08:58:10.311 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 08:58:10.312 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1480 ms
2019-02-01 08:58:10.521 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 08:58:10.521 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 08:58:10.522 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 08:58:10.522 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 08:58:10.522 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 08:58:10.522 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 08:58:11.329 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 08:58:08 CST 2019]; root of context hierarchy
2019-02-01 08:58:11.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 08:58:11.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 08:58:11.388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 08:58:11.388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 08:58:11.388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 08:58:11.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 08:58:11.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 08:58:11.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 08:58:11.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 08:58:11.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 08:58:11.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 08:58:11.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 08:58:11.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 08:58:11.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 08:58:11.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 08:58:11.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:58:11.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 08:58:11.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 08:58:11.395 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 08:58:11.395 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 08:58:11.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 08:58:11.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 08:58:11.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 08:58:11.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 08:58:11.397 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 08:58:11.397 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 08:58:11.398 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:58:11.398 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 08:58:11.398 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:58:11.399 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 08:58:11.399 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 08:58:11.399 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 08:58:11.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 08:58:11.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 08:58:11.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 08:58:11.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 08:58:11.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 08:58:11.401 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 08:58:11.401 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:58:11.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:58:11.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 08:58:11.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 08:58:11.402 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 08:58:11.403 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 08:58:11.403 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 08:58:11.404 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:58:11.404 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 08:58:11.404 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 08:58:11.407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 08:58:11.407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 08:58:11.440 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 08:58:11.440 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 08:58:11.481 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 08:58:11.820 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 08:58:12.073 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 08:58:12.093 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 08:58:12.103 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 08:58:12.116 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 08:58:12.275 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 08:58:12.281 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.743 seconds (JVM running for 5.893)
2019-02-01 08:58:18.829 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 08:58:18.830 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 08:58:18.849 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-01 08:58:18.859 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 08:58:20.375 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:58:20.444 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:58:20.444 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:58:20.448 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:58:22.017 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:58:22.086 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:58:22.086 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:58:22.086 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:58:22.106 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 08:58:23.063 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:58:23.108 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:58:23.110 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:58:23.110 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:58:23.123 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 08:58:23.870 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:58:23.932 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:58:23.932 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:58:23.934 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:58:23.964 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 08:58:25.102 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:58:25.136 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:58:25.137 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:58:25.137 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:58:25.151 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 08:58:27.064 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:58:27.117 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:58:27.119 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:58:27.119 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:58:27.134 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 08:59:01.784 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5340 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 08:59:01.789 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 08:59:01.789 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 08:59:02.208 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 08:59:02.316 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 08:59:02 CST 2019]; root of context hierarchy
2019-02-01 08:59:03.915 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 08:59:03.925 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 08:59:03.926 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 08:59:04.036 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 08:59:04.036 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1720 ms
2019-02-01 08:59:04.205 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 08:59:04.206 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 08:59:04.206 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 08:59:04.206 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 08:59:04.206 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 08:59:04.206 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 08:59:05.103 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 08:59:02 CST 2019]; root of context hierarchy
2019-02-01 08:59:05.160 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 08:59:05.162 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 08:59:05.162 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 08:59:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 08:59:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 08:59:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 08:59:05.163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 08:59:05.164 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 08:59:05.164 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 08:59:05.165 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 08:59:05.165 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 08:59:05.165 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 08:59:05.165 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 08:59:05.168 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 08:59:05.168 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 08:59:05.168 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 08:59:05.169 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 08:59:05.169 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 08:59:05.169 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 08:59:05.169 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:59:05.171 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 08:59:05.171 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 08:59:05.172 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 08:59:05.172 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 08:59:05.172 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 08:59:05.172 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 08:59:05.173 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:59:05.174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 08:59:05.174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 08:59:05.174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 08:59:05.174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:59:05.174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 08:59:05.175 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 08:59:05.175 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 08:59:05.176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 08:59:05.176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 08:59:05.176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 08:59:05.176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 08:59:05.177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 08:59:05.177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 08:59:05.177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:59:05.178 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:59:05.178 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 08:59:05.179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 08:59:05.179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 08:59:05.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 08:59:05.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 08:59:05.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 08:59:05.184 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 08:59:05.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 08:59:05.219 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 08:59:05.219 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 08:59:05.264 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 08:59:05.606 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 08:59:05.876 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 08:59:05.897 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 08:59:05.908 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 08:59:05.921 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 08:59:06.113 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 08:59:06.119 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.817 seconds (JVM running for 6.049)
2019-02-01 08:59:06.882 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 08:59:06.883 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 08:59:06.901 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-02-01 08:59:06.912 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 08:59:06.956 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 08:59:06.957 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 08:59:06.957 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 08:59:07.132 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 08:59:13.893 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-01 08:59:14.209 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-01 08:59:14.229 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-02-01 08:59:14.240 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-01 08:59:14.250 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 08:59:14.644 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 08:59:14.670 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 08:59:19.257 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-02-01 08:59:19.260 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-02-01 08:59:19.298 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/jquery.treetable.css
2019-02-01 08:59:19.300 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.treetable.js
2019-02-01 08:59:19.307 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/jquery.treetable.theme.default.css
2019-02-01 08:59:19.346 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-02-01 08:59:19.358 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:19.358 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-02-01 08:59:19.365 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:19.365 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-02-01 08:59:19.374 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:19.374 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-02-01 08:59:19.375 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 08:59:19.376 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 08:59:19.378 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:19.378 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-02-01 08:59:19.380 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:19.380 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-02-01 08:59:19.381 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 08:59:19.381 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 08:59:19.382 [http-nio-8080-exec-2] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-02-01 08:59:20.511 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeEdit
2019-02-01 08:59:20.547 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap-treeview.css
2019-02-01 08:59:20.553 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap-treeview.js
2019-02-01 08:59:20.559 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.validate.min.js
2019-02-01 08:59:20.562 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.message_cn.js
2019-02-01 08:59:23.391 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-02-01 08:59:23.392 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-02-01 08:59:23.440 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-02-01 08:59:23.443 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:23.443 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-02-01 08:59:23.445 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:23.447 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-02-01 08:59:23.450 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:23.450 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-02-01 08:59:23.451 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 08:59:23.452 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 08:59:23.455 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:23.456 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-02-01 08:59:23.458 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 08:59:23.458 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-02-01 08:59:23.460 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 08:59:23.460 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 08:59:23.461 [http-nio-8080-exec-1] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-02-01 08:59:24.860 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-01 08:59:24.898 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-01 08:59:24.899 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-01 08:59:24.900 [http-nio-8080-exec-4] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-01 08:59:24.903 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-01 08:59:24.903 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 08:59:24.906 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-01 08:59:24.907 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 08:59:24.907 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-01 08:59:24.908 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 08:59:24.908 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 08:59:24.909 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-01 08:59:24.909 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 08:59:24.910 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 08:59:24.911 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 08:59:24.913 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 08:59:24.914 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 08:59:24.914 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-01 08:59:24.915 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 08:59:24.916 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 08:59:24.916 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-01 08:59:24.917 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 08:59:26.647 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productPreAdd
2019-02-01 08:59:30.682 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 08:59:30.687 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 08:59:30.698 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 08:59:30.699 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 08:59:30.700 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 08:59:30.706 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 08:59:30.707 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 08:59:30.712 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 08:59:30.714 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 08:59:31.802 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreAdd
2019-02-01 08:59:34.558 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 08:59:34.560 [http-nio-8080-exec-6] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 08:59:34.563 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 08:59:34.564 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 08:59:34.566 [http-nio-8080-exec-6] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 08:59:34.576 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 08:59:34.577 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 08:59:34.580 [http-nio-8080-exec-6] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 08:59:34.584 [http-nio-8080-exec-6] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 08:59:35.515 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreAdd
2019-02-01 08:59:41.127 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-01 08:59:41.162 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/WdatePicker.js
2019-02-01 08:59:41.190 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/WdatePicker.css
2019-02-01 08:59:41.213 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/My97DatePicker.html
2019-02-01 08:59:41.226 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/config.js
2019-02-01 08:59:41.226 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/calendar.js
2019-02-01 08:59:41.234 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/datepicker.css
2019-02-01 08:59:41.234 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/whyGreen/datepicker.css
2019-02-01 08:59:41.234 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/lang/zh-cn.js
2019-02-01 08:59:45.686 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-02-01 08:59:49.095 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-02-01 08:59:51.736 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-02-01 10:00:08.191 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 620 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 10:00:08.195 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 10:00:08.195 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 10:00:08.583 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 10:00:08 CST 2019]; root of context hierarchy
2019-02-01 10:00:08.751 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 10:00:10.528 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 10:00:10.546 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 10:00:10.548 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 10:00:10.711 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 10:00:10.712 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2129 ms
2019-02-01 10:00:10.908 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 10:00:10.909 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 10:00:10.909 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 10:00:10.909 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 10:00:10.910 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 10:00:10.910 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 10:00:11.861 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 10:00:08 CST 2019]; root of context hierarchy
2019-02-01 10:00:11.949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 10:00:11.950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 10:00:11.950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 10:00:11.951 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 10:00:11.951 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 10:00:11.951 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 10:00:11.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 10:00:11.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 10:00:11.952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 10:00:11.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 10:00:11.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 10:00:11.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 10:00:11.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 10:00:11.957 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 10:00:11.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 10:00:11.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 10:00:11.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 10:00:11.959 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 10:00:11.959 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 10:00:11.960 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:00:11.960 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 10:00:11.962 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 10:00:11.962 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 10:00:11.963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 10:00:11.963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 10:00:11.964 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 10:00:11.964 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 10:00:11.965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 10:00:11.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:00:11.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 10:00:11.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 10:00:11.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:00:11.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 10:00:11.968 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 10:00:11.968 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 10:00:11.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 10:00:11.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 10:00:11.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 10:00:11.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 10:00:11.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 10:00:11.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 10:00:11.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:00:11.971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:00:11.971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 10:00:11.972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 10:00:11.972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 10:00:11.972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:00:11.973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 10:00:11.973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 10:00:11.976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 10:00:11.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 10:00:12.017 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 10:00:12.017 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 10:00:12.063 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 10:00:12.420 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 10:00:12.720 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 10:00:12.743 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 10:00:12.757 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 10:00:12.771 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 10:00:12.947 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 10:00:12.954 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.307 seconds (JVM running for 6.668)
2019-02-01 10:00:19.309 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 10:00:19.310 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 10:00:19.334 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2019-02-01 10:00:19.344 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 10:00:19.731 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "main": Could not parse as expression: "@{}" (main)
2019-02-01 10:00:19.736 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{}" (main)] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "@{}" (main)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:238)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:79)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:40)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:80)
	at org.thymeleaf.spring4.processor.attr.SpringHrefAttrProcessor.getTargetAttributeValue(SpringHrefAttrProcessor.java:69)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 10:00:19.835 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 10:00:42.848 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 10:00:42.917 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 10:00:42.919 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 10:00:42.919 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 10:00:43.028 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 10:00:43.052 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 10:00:43.074 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 10:00:45.890 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 10:00:46.201 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name,ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num,ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) twhere 1=1 
2019-02-01 10:00:46.224 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 10:00:46.232 [http-nio-8080-exec-10] INFO  o.s.beans.factory.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-02-01 10:00:46.279 [http-nio-8080-exec-10] INFO  o.s.jdbc.support.SQLErrorCodesFactory - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2019-02-01 10:00:46.291 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1
### The error may exist in com/yun/report/dao/ProductReceCurrDao.java (best guess)
### The error may involve com.yun.report.dao.ProductReceCurrDao.findProductReceCurrList-Inline
### The error occurred while setting parameters
### SQL: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name,ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num,ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) twhere 1=1
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy99.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy100.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.findProductReceCurrList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy80.findProductReceCurrList(Unknown Source)
	at com.yun.report.service.ProductStockReportService.findProductReceCurrList(ProductStockReportService.java:20)
	at com.yun.report.controller.ProductStockReportController.productStockReport(ProductStockReportController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 10:01:47.714 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 10:01:47.719 [http-nio-8080-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name,ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num,ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) twhere 1=1 
2019-02-01 10:01:47.720 [http-nio-8080-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 10:01:47.724 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1
### The error may exist in com/yun/report/dao/ProductReceCurrDao.java (best guess)
### The error may involve com.yun.report.dao.ProductReceCurrDao.findProductReceCurrList-Inline
### The error occurred while setting parameters
### SQL: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name,ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num,ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) twhere 1=1
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy99.execute(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy100.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.findProductReceCurrList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy80.findProductReceCurrList(Unknown Source)
	at com.yun.report.service.ProductStockReportService.findProductReceCurrList(ProductStockReportService.java:20)
	at com.yun.report.controller.ProductStockReportController.productStockReport(ProductStockReportController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 10:01:47.783 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 10:01:56.377 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4552 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 10:01:56.382 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 10:01:56.382 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 10:01:56.605 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 10:01:56.810 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 10:01:56 CST 2019]; root of context hierarchy
2019-02-01 10:01:58.378 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 10:01:58.388 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 10:01:58.389 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 10:01:58.497 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 10:01:58.497 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1687 ms
2019-02-01 10:01:58.654 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 10:01:58.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 10:01:58.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 10:01:58.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 10:01:58.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 10:01:58.655 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 10:01:59.488 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 10:01:56 CST 2019]; root of context hierarchy
2019-02-01 10:01:59.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 10:01:59.545 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 10:01:59.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 10:01:59.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 10:01:59.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 10:01:59.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 10:01:59.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 10:01:59.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 10:01:59.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 10:01:59.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 10:01:59.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 10:01:59.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 10:01:59.549 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 10:01:59.551 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 10:01:59.552 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 10:01:59.552 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:01:59.552 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 10:01:59.553 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 10:01:59.553 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 10:01:59.553 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 10:01:59.554 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 10:01:59.554 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 10:01:59.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 10:01:59.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 10:01:59.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 10:01:59.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 10:01:59.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 10:01:59.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 10:01:59.556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:01:59.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 10:01:59.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 10:01:59.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:01:59.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 10:01:59.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 10:01:59.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 10:01:59.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 10:01:59.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 10:01:59.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 10:01:59.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 10:01:59.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 10:01:59.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 10:01:59.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:01:59.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:01:59.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 10:01:59.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 10:01:59.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 10:01:59.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 10:01:59.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 10:01:59.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 10:01:59.565 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 10:01:59.566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 10:01:59.598 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 10:01:59.598 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 10:01:59.639 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 10:01:59.940 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 10:02:00.189 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 10:02:00.209 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 10:02:00.219 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 10:02:00.239 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 10:02:00.411 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 10:02:00.416 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.59 seconds (JVM running for 5.803)
2019-02-01 10:02:12.717 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 10:02:12.718 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 10:02:12.738 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-02-01 10:02:12.748 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 10:02:13.039 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 10:02:13.058 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 10:02:13.071 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 10:02:13.499 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 10:02:13.499 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 10:02:13.503 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 10:02:13.504 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 10:02:13.564 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 10:03:04.118 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 10:03:04.123 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 10:03:04.124 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 10:03:04.127 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 10:03:04.169 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 10:03:04.169 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 10:03:04.172 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 10:03:04.178 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 10:03:04.223 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 10:03:07.320 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/
2019-02-01 10:03:07.333 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 10:03:10.694 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-01 10:03:10.738 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-01 10:03:10.739 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-02-01 10:03:10.740 [http-nio-8080-exec-2] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-01 10:03:10.749 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 10:03:12.719 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 10:03:12.722 [http-nio-8080-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 10:03:12.724 [http-nio-8080-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 10:03:12.742 [http-nio-8080-exec-6] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:00:15.007 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:00:15.009 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 16:00:15.010 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 16:00:15.012 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:00:15.043 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 16:00:15.046 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 16:00:15.047 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 16:00:15.052 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 16:02:27.592 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 16:02:27.648 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 16:02:27.651 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 16:02:27.655 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 16:02:27.658 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 16:02:27.706 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 16:02:27.730 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 16:02:32.085 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:02:32.088 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 16:02:32.089 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 16:02:32.093 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:02:40.655 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 16:02:40.721 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 16:02:40.723 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 16:02:40.723 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 16:02:40.721 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 16:02:40.759 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 16:02:40.780 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 16:02:43.454 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/
2019-02-01 16:02:43.461 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/index.html
2019-02-01 16:02:50.954 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/login
2019-02-01 16:02:50.957 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-02-01 16:02:50.958 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-02-01 16:02:50.960 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-02-01 16:02:50.970 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 16:02:57.154 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:02:57.156 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 16:02:57.157 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 16:02:57.160 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:05:14.878 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 16:05:14.942 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 16:05:14.943 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 16:05:14.945 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 16:05:14.947 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 16:05:14.977 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 16:05:14.993 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 16:05:18.676 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:05:18.680 [http-nio-8080-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 16:05:18.682 [http-nio-8080-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 16:05:18.687 [http-nio-8080-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:05:22.258 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:05:22.263 [http-nio-8080-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 and t.prod_param_name like ? 
2019-02-01 16:05:22.265 [http-nio-8080-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: %a%(String)
2019-02-01 16:05:22.269 [http-nio-8080-exec-4] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 3
2019-02-01 16:05:27.634 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:05:27.641 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 and t.prod_name like ? 
2019-02-01 16:05:27.644 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: %味%(String)
2019-02-01 16:05:27.649 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 1
2019-02-01 16:05:30.768 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:05:30.772 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 16:05:30.775 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 16:05:30.778 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:05:42.065 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6680 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 16:05:42.070 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 16:05:42.070 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 16:05:42.772 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 16:05:42.835 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 16:05:42 CST 2019]; root of context hierarchy
2019-02-01 16:05:44.323 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 16:05:44.339 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 16:05:44.340 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 16:05:44.461 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 16:05:44.461 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1626 ms
2019-02-01 16:05:44.620 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 16:05:44.620 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 16:05:44.620 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 16:05:44.621 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 16:05:44.621 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 16:05:44.621 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 16:05:45.444 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 16:05:42 CST 2019]; root of context hierarchy
2019-02-01 16:05:45.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 16:05:45.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 16:05:45.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 16:05:45.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 16:05:45.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 16:05:45.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 16:05:45.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 16:05:45.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 16:05:45.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 16:05:45.509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 16:05:45.510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 16:05:45.510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 16:05:45.510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 16:05:45.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 16:05:45.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 16:05:45.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 16:05:45.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 16:05:45.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 16:05:45.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 16:05:45.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 16:05:45.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 16:05:45.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 16:05:45.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 16:05:45.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 16:05:45.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 16:05:45.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 16:05:45.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 16:05:45.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 16:05:45.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 16:05:45.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 16:05:45.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 16:05:45.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 16:05:45.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 16:05:45.519 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 16:05:45.519 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 16:05:45.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 16:05:45.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 16:05:45.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 16:05:45.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 16:05:45.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 16:05:45.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 16:05:45.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 16:05:45.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 16:05:45.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 16:05:45.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 16:05:45.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 16:05:45.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 16:05:45.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 16:05:45.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 16:05:45.527 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 16:05:45.527 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 16:05:45.561 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 16:05:45.561 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 16:05:45.603 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 16:05:45.911 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 16:05:46.167 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 16:05:46.187 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 16:05:46.198 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 16:05:46.211 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 16:05:46.397 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 16:05:46.404 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.713 seconds (JVM running for 5.921)
2019-02-01 16:05:48.753 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 16:05:48.753 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 16:05:48.772 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-01 16:05:48.782 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 16:05:49.206 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 16:05:49.208 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 16:05:49.211 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 16:05:49.214 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 16:05:49.255 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 16:05:49.278 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 16:05:52.021 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:05:52.329 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 16:05:52.355 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 16:05:52.375 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 16:05:56.358 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 16:05:56.366 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 and t.prod_name like ? 
2019-02-01 16:05:56.367 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: %味%(String)
2019-02-01 16:05:56.370 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 1
2019-02-01 16:06:10.977 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/aa
2019-02-01 19:06:43.342 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 884 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:06:43.346 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:06:43.347 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:06:43.774 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:06:43 CST 2019]; root of context hierarchy
2019-02-01 19:06:43.797 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:06:45.398 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:06:45.410 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:06:45.411 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:06:45.513 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:06:45.513 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1739 ms
2019-02-01 19:06:45.690 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:06:45.691 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:06:45.692 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:06:45.692 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:06:45.692 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:06:45.692 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:06:46.540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:06:43 CST 2019]; root of context hierarchy
2019-02-01 19:06:46.596 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:06:46.597 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:06:46.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:06:46.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:06:46.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:06:46.598 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:06:46.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:06:46.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:06:46.599 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:06:46.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:06:46.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:06:46.600 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:06:46.601 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:06:46.603 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:06:46.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:06:46.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:06:46.604 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:06:46.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:06:46.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:06:46.605 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:06:46.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:06:46.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:06:46.606 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:06:46.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:06:46.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:06:46.607 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:06:46.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:06:46.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:06:46.608 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:06:46.609 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:06:46.609 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:06:46.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:06:46.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:06:46.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:06:46.610 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:06:46.611 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:06:46.611 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:06:46.611 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:06:46.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:06:46.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:06:46.612 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:06:46.613 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:06:46.613 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:06:46.613 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:06:46.614 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:06:46.614 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:06:46.615 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:06:46.615 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:06:46.615 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:06:46.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:06:46.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:06:46.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:06:46.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:06:46.653 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:06:46.654 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:06:46.696 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:06:47.005 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:06:47.291 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:06:47.312 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:06:47.324 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:06:47.338 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:06:47.530 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:06:47.537 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.778 seconds (JVM running for 5.923)
2019-02-01 19:06:50.374 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:06:50.375 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:06:50.395 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-02-01 19:06:50.405 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:06:50.827 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:06:50.827 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:06:50.832 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:06:50.839 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:06:50.876 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:06:50.896 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:06:53.405 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 19:06:53.713 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 19:06:53.733 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 19:06:53.747 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 19:06:57.902 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 19:06:57.914 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 19:06:57.915 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 19:06:57.924 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 19:07:00.316 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:07:00.330 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:07:00.331 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:07:00.333 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:08:21.756 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:08:21.807 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:08:21.808 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:08:21.809 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:08:21.813 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:08:21.847 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:08:21.869 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:08:25.659 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:08:25.666 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:08:25.668 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:08:25.673 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:08:35.692 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2108 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:08:35.700 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:08:35.700 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:08:35.994 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:08:36.363 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:08:36 CST 2019]; root of context hierarchy
2019-02-01 19:08:38.112 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:08:38.124 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:08:38.125 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:08:38.228 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:08:38.229 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1866 ms
2019-02-01 19:08:38.388 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:08:38.388 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:08:38.389 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:08:38.389 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:08:38.389 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:08:38.389 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:08:39.283 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:08:36 CST 2019]; root of context hierarchy
2019-02-01 19:08:39.340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:08:39.343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:08:39.343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:08:39.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:08:39.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:08:39.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:08:39.345 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:08:39.345 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:08:39.345 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:08:39.346 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:08:39.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:08:39.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:08:39.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:08:39.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:08:39.351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:08:39.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:08:39.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:08:39.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:08:39.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:08:39.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:08:39.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:08:39.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:08:39.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:08:39.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:08:39.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:08:39.356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:08:39.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:08:39.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:08:39.357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:08:39.359 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:08:39.359 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:08:39.359 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:08:39.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:08:39.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:08:39.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:08:39.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:08:39.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:08:39.361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:08:39.362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:08:39.362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:08:39.362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:08:39.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:08:39.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:08:39.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:08:39.363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:08:39.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:08:39.364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:08:39.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:08:39.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:08:39.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:08:39.365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:08:39.368 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:08:39.369 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:08:39.405 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:08:39.405 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:08:39.448 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:08:39.756 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:08:40.042 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:08:40.062 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:08:40.072 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:08:40.234 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:08:40.254 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:08:40.260 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.097 seconds (JVM running for 6.389)
2019-02-01 19:08:47.296 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:08:47.297 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:08:47.322 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-02-01 19:08:47.333 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:08:47.755 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:08:47.755 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:08:47.758 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:08:47.762 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:08:47.804 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:08:47.823 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:08:50.501 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:08:50.810 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:08:50.830 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:08:50.840 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:09:27.212 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:09:27.223 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:09:27.225 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: null, null
2019-02-01 19:09:27.229 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 0
2019-02-01 19:09:27.234 [http-nio-8080-exec-9] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-9] Exception processing template "report/productCurrentChange": Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-02-01 19:09:27.239 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:09:28.545 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:09:28.552 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:09:28.553 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:09:28.555 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:09:29.101 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 19:09:29.109 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 19:09:29.110 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 19:09:29.125 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 19:09:31.383 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-02-01 19:09:31.386 [http-nio-8080-exec-3] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-02-01 19:09:31.421 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/jquery.treetable.css
2019-02-01 19:09:31.432 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/jquery.treetable.theme.default.css
2019-02-01 19:09:31.432 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.treetable.js
2019-02-01 19:09:31.459 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-02-01 19:09:31.487 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:09:31.488 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-02-01 19:09:31.493 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:09:31.494 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-02-01 19:09:31.500 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:09:31.500 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-02-01 19:09:31.501 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 19:09:31.501 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 19:09:31.502 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:09:31.503 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-02-01 19:09:31.505 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:09:31.505 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-02-01 19:09:31.506 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 19:09:31.506 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 19:09:31.508 [http-nio-8080-exec-6] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-02-01 19:09:32.044 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productList
2019-02-01 19:09:32.053 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 
2019-02-01 19:09:32.053 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: 
2019-02-01 19:09:32.057 [http-nio-8080-exec-7] DEBUG c.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-02-01 19:09:32.064 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id limit ?,? 
2019-02-01 19:09:32.064 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:09:32.067 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-01 19:09:32.067 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:09:32.068 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-01 19:09:32.069 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:09:32.070 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:09:32.070 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-01 19:09:32.072 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:09:32.073 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:09:32.073 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 19:09:32.074 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 19:09:32.075 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:09:32.075 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-01 19:09:32.076 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 19:09:32.077 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:09:32.077 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-01 19:09:32.080 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:09:36.400 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 19:09:36.406 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 19:09:36.419 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:09:36.419 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 19:09:36.420 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 19:09:36.425 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:09:36.425 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:09:36.429 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 19:09:36.431 [http-nio-8080-exec-8] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 19:09:39.255 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 19:09:39.262 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 19:09:39.266 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:09:39.266 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 19:09:39.268 [http-nio-8080-exec-9] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 19:09:39.272 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:09:39.272 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:09:39.276 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 19:09:39.279 [http-nio-8080-exec-9] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 19:09:40.023 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-01 19:09:40.079 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.message_cn.js
2019-02-01 19:09:40.080 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/WdatePicker.js
2019-02-01 19:09:40.093 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.validate.min.js
2019-02-01 19:09:40.112 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/WdatePicker.css
2019-02-01 19:09:40.138 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/My97DatePicker.html
2019-02-01 19:09:40.150 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/config.js
2019-02-01 19:09:40.152 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/calendar.js
2019-02-01 19:09:40.158 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/lang/zh-cn.js
2019-02-01 19:09:40.159 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/datepicker.css
2019-02-01 19:09:40.162 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/whyGreen/datepicker.css
2019-02-01 19:09:40.840 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-02-01 19:09:41.897 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-02-01 19:09:43.066 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-02-01 19:09:45.827 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:09:45.834 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:09:45.836 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: null, null
2019-02-01 19:09:45.837 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 0
2019-02-01 19:09:45.840 [http-nio-8080-exec-5] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-5] Exception processing template "report/productCurrentChange": Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-02-01 19:09:45.841 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:09:46.393 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:09:46.395 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:09:46.396 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:09:46.401 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:10:54.463 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:10:54.468 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:10:54.470 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:10:54.472 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:11:21.543 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:11:21.546 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:11:21.549 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:11:21.557 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:22:10.555 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3268 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:22:10.559 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:22:10.560 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:22:11.028 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:22:11 CST 2019]; root of context hierarchy
2019-02-01 19:22:11.211 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:22:12.738 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:22:12.749 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:22:12.750 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:22:12.849 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:22:12.849 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1821 ms
2019-02-01 19:22:13.008 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:22:13.009 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:22:13.009 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:22:13.009 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:22:13.009 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:22:13.009 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:22:13.875 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:22:11 CST 2019]; root of context hierarchy
2019-02-01 19:22:13.942 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:22:13.943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:22:13.944 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:22:13.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:22:13.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:22:13.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:22:13.945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:22:13.946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:22:13.946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:22:13.947 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:22:13.948 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:22:13.948 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:22:13.949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:22:13.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:22:13.953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:22:13.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:22:13.954 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:22:13.955 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:22:13.955 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:22:13.955 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:22:13.957 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:22:13.957 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:22:13.958 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:22:13.960 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:22:13.962 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:22:13.962 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:22:13.963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:22:13.963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:22:13.964 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:22:13.965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:22:13.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:22:13.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:22:13.966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:22:13.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:22:13.967 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:22:13.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:22:13.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:22:13.969 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:22:13.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:22:13.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:22:13.971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:22:13.972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:22:13.972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:22:13.973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:22:13.973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:22:13.973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:22:13.974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:22:13.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:22:13.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:22:13.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:22:13.975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:22:13.979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:22:13.979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:22:14.014 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:22:14.014 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:22:14.060 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:22:14.380 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:22:14.641 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:22:14.664 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:22:14.675 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:22:14.837 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:22:14.857 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:22:14.863 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.688 seconds (JVM running for 5.883)
2019-02-01 19:23:17.640 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3988 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:23:17.645 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:23:17.645 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:23:17.846 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:23:18.094 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:23:18 CST 2019]; root of context hierarchy
2019-02-01 19:23:19.880 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:23:19.893 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:23:19.894 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:23:19.995 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:23:19.996 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1902 ms
2019-02-01 19:23:20.156 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:23:20.158 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:23:20.158 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:23:20.158 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:23:20.158 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:23:20.159 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:23:21.003 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:23:18 CST 2019]; root of context hierarchy
2019-02-01 19:23:21.064 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:23:21.105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:23:21.106 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:23:21.107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:23:21.107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:23:21.107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:23:21.108 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:23:21.108 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:23:21.108 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:23:21.109 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:23:21.110 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:23:21.110 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:23:21.110 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:23:21.113 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:23:21.114 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:23:21.114 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:23:21.114 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:23:21.115 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:23:21.115 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:23:21.115 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:23:21.116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:23:21.116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:23:21.116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:23:21.117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:23:21.117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:23:21.117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:23:21.118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:23:21.118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:23:21.118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:23:21.119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:23:21.119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:23:21.119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:23:21.119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:23:21.121 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:23:21.122 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:23:21.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:23:21.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:23:21.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:23:21.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:23:21.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:23:21.123 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:23:21.124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:23:21.124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:23:21.125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:23:21.125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:23:21.125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:23:21.126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:23:21.126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:23:21.126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:23:21.127 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:23:21.127 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:23:21.130 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:23:21.131 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:23:21.167 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:23:21.167 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:23:21.213 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:23:21.500 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:23:21.762 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:23:21.782 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:23:21.793 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:23:21.807 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:23:21.974 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:23:21.979 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.933 seconds (JVM running for 6.062)
2019-02-01 19:23:25.057 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:23:25.057 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:23:25.076 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-01 19:23:25.088 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:23:25.526 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:23:25.531 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:23:25.532 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:23:25.534 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:23:25.581 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:23:25.607 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:23:28.413 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeList
2019-02-01 19:23:28.427 [http-nio-8080-exec-8] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-02-01 19:23:28.480 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productTypeTree
2019-02-01 19:23:28.774 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:23:28.797 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-02-01 19:23:28.812 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:23:28.812 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-02-01 19:23:28.819 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:23:28.819 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-02-01 19:23:28.820 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 19:23:28.821 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 19:23:28.821 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:23:28.822 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 39(Integer)
2019-02-01 19:23:28.824 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-02-01 19:23:28.824 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 41(Integer)
2019-02-01 19:23:28.826 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-02-01 19:23:28.826 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-02-01 19:23:28.826 [http-nio-8080-exec-9] DEBUG c.y.product.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-02-01 19:23:31.274 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 19:23:31.284 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 19:23:31.318 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:23:31.318 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 19:23:31.320 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 19:23:31.323 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:23:31.324 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:23:31.327 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 19:23:31.329 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 19:23:36.916 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:23:36.924 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:23:36.926 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:23:36.929 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:23:39.146 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 19:23:39.149 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 19:23:39.151 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 19:23:39.159 [http-nio-8080-exec-5] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 19:23:44.517 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:23:44.521 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:23:44.523 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:23:44.526 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:26:10.666 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3096 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:26:10.671 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:26:10.672 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:26:11.351 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:26:11.361 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:26:11 CST 2019]; root of context hierarchy
2019-02-01 19:26:13.208 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:26:13.228 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:26:13.230 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:26:13.370 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:26:13.370 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2009 ms
2019-02-01 19:26:13.553 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:26:13.553 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:26:13.553 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:26:13.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:26:13.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:26:13.554 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:26:14.442 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:26:11 CST 2019]; root of context hierarchy
2019-02-01 19:26:14.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:26:14.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:26:14.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:26:14.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:26:14.519 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:26:14.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:26:14.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:26:14.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:26:14.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:26:14.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:26:14.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:26:14.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:26:14.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:26:14.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:26:14.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:26:14.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:26:14.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:26:14.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:26:14.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:26:14.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:26:14.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:26:14.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:26:14.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:26:14.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:26:14.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:26:14.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:26:14.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:26:14.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:26:14.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:26:14.538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:26:14.539 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:26:14.539 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:26:14.539 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:26:14.539 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:26:14.539 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:26:14.540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:26:14.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:26:14.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:26:14.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:26:14.542 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:26:14.542 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:26:14.543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:26:14.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:26:14.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:26:14.545 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:26:14.545 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:26:14.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:26:14.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:26:14.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:26:14.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:26:14.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:26:14.552 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:26:14.553 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:26:14.596 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:26:14.596 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:26:14.658 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:26:14.998 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:26:15.259 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:26:15.279 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:26:15.291 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:26:15.463 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:26:15.492 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:26:15.500 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.267 seconds (JVM running for 6.41)
2019-02-01 19:28:24.059 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:28:24.059 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:28:24.084 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-02-01 19:28:24.099 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:28:24.539 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:28:24.540 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:28:24.540 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:28:24.546 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:28:24.587 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:28:24.609 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:28:26.962 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:28:27.270 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:28:27.290 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:28:27.299 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:28:27.344 [http-nio-8080-exec-8] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:28:27.348 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:130)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:28:37.899 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5964 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:28:37.904 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:28:37.905 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:28:38.441 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:28:38.466 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:28:38 CST 2019]; root of context hierarchy
2019-02-01 19:28:39.997 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:28:40.009 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:28:40.010 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:28:40.115 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:28:40.116 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1650 ms
2019-02-01 19:28:40.283 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:28:40.283 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:28:40.284 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:28:40.284 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:28:40.284 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:28:40.284 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:28:41.121 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:28:38 CST 2019]; root of context hierarchy
2019-02-01 19:28:41.178 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:28:41.179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:28:41.179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:28:41.179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:28:41.179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:28:41.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:28:41.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:28:41.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:28:41.180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:28:41.181 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:28:41.182 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:28:41.182 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:28:41.182 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:28:41.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:28:41.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:28:41.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:28:41.185 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:28:41.186 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:28:41.186 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:28:41.186 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:28:41.187 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:28:41.187 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:28:41.187 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:28:41.188 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:28:41.188 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:28:41.189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:28:41.189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:28:41.189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:28:41.189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:28:41.190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:28:41.190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:28:41.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:28:41.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:28:41.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:28:41.191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:28:41.192 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:28:41.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:28:41.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:28:41.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:28:41.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:28:41.193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:28:41.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:28:41.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:28:41.194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:28:41.195 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:28:41.195 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:28:41.196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:28:41.196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:28:41.196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:28:41.197 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:28:41.197 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:28:41.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:28:41.200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:28:41.232 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:28:41.233 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:28:41.273 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:28:41.596 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:28:41.847 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:28:41.867 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:28:41.879 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:28:41.892 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:28:42.066 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:28:42.071 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.608 seconds (JVM running for 5.731)
2019-02-01 19:28:46.410 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:28:46.410 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:28:46.432 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2019-02-01 19:28:46.441 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:28:46.858 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:28:46.860 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:28:46.864 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:28:46.867 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:28:46.907 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:28:46.928 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:28:49.079 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:28:49.401 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:28:49.421 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:28:49.430 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:28:49.473 [http-nio-8080-exec-8] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:28:49.476 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:130)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:29:03.808 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 19:29:03.813 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 19:29:03.840 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:29:03.841 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 19:29:03.843 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 19:29:03.853 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:29:03.853 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:29:03.858 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 19:29:03.861 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 19:29:06.328 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 19:29:06.336 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 19:29:06.340 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:29:06.341 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 19:29:06.344 [http-nio-8080-exec-10] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 19:29:06.353 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:29:06.354 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:29:06.357 [http-nio-8080-exec-10] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 19:29:06.360 [http-nio-8080-exec-10] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 19:29:08.054 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-01 19:29:09.693 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-02-01 19:29:11.074 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentIn
2019-02-01 19:29:12.853 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentOut
2019-02-01 19:29:15.829 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:29:15.833 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:29:15.834 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:29:15.836 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:29:15.847 [http-nio-8080-exec-4] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-4] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:29:15.848 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:103)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:32:20.868 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:32:20.914 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:32:20.914 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:32:20.920 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:32:20.925 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:32:20.959 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:32:20.994 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:32:22.770 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:32:22.773 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:32:22.775 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:32:22.780 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:32:22.792 [http-nio-8080-exec-4] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-4] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:32:22.793 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:103)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:32:24.869 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:32:24.872 [http-nio-8080-exec-6] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:32:24.876 [http-nio-8080-exec-6] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:32:24.884 [http-nio-8080-exec-6] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:32:24.896 [http-nio-8080-exec-6] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-6] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:32:24.897 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:103)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:32:30.918 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:32:30.923 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:32:30.924 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: null, null
2019-02-01 19:32:30.925 [http-nio-8080-exec-7] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 0
2019-02-01 19:32:30.929 [http-nio-8080-exec-7] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-7] Exception processing template "report/productCurrentChange": Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers
2019-02-01 19:32:30.930 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "report/productCurrentChange", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:246)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:32:33.632 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:32:33.635 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:32:33.636 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:32:33.641 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:32:33.654 [http-nio-8080-exec-8] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:32:33.654 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:103)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:38:21.572 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2656 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:38:21.576 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:38:21.577 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:38:21.894 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:38:22.311 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:38:22 CST 2019]; root of context hierarchy
2019-02-01 19:38:24.000 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:38:24.011 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:38:24.012 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:38:24.129 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:38:24.129 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1818 ms
2019-02-01 19:38:24.315 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:38:24.316 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:38:24.316 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:38:24.316 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:38:24.316 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:38:24.316 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:38:25.306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:38:22 CST 2019]; root of context hierarchy
2019-02-01 19:38:25.370 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:38:25.371 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:38:25.372 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:38:25.372 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:38:25.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:38:25.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:38:25.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:38:25.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:38:25.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:38:25.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:38:25.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:38:25.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:38:25.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:38:25.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:38:25.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:38:25.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:38:25.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:38:25.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:38:25.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:38:25.382 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:38:25.382 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:38:25.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:38:25.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:38:25.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:38:25.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:38:25.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:38:25.385 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:38:25.385 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:38:25.385 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:38:25.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:38:25.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:38:25.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:38:25.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:38:25.388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:38:25.388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:38:25.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:38:25.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:38:25.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:38:25.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:38:25.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:38:25.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:38:25.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:38:25.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:38:25.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:38:25.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:38:25.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:38:25.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:38:25.395 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:38:25.395 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:38:25.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:38:25.396 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:38:25.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:38:25.400 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:38:25.440 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:38:25.440 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:38:25.486 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:38:25.882 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:38:26.241 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:38:26.265 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:38:26.280 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:38:26.296 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:38:26.494 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:38:26.499 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.291 seconds (JVM running for 6.634)
2019-02-01 19:38:32.287 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:38:32.287 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:38:32.308 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2019-02-01 19:38:32.317 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:38:32.735 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:38:32.736 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:38:32.737 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:38:32.743 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:38:32.785 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:38:32.812 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:38:35.074 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:38:35.361 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:38:35.382 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:38:35.391 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:38:35.435 [http-nio-8080-exec-8] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "report/productReceiveChange": Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)
2019-02-01 19:38:35.439 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error formatting date with format pattern "yyyy-MM-dd" (report/productReceiveChange)] with root cause
java.lang.IllegalArgumentException: Cannot apply format on null
	at org.thymeleaf.util.Validate.notNull(Validate.java:37)
	at org.thymeleaf.util.DateUtils.format(DateUtils.java:357)
	at org.thymeleaf.expression.Dates.format(Dates.java:215)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:117)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:130)
	at org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:50)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:348)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yun.user.filter.LoginFilter.doFilter(LoginFilter.java:36)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-02-01 19:39:32.212 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:39:32.217 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:39:32.217 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:39:32.220 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:39:37.352 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:39:37.363 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:39:37.365 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: (String), (String)
2019-02-01 19:39:37.378 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:39:53.832 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2464 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:39:53.838 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:39:53.838 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:39:54.341 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:39:54.657 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:39:54 CST 2019]; root of context hierarchy
2019-02-01 19:39:56.306 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:39:56.321 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:39:56.323 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:39:56.441 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:39:56.441 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1784 ms
2019-02-01 19:39:56.601 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:39:56.601 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:39:56.602 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:39:56.602 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:39:56.602 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:39:56.602 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:39:57.437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:39:54 CST 2019]; root of context hierarchy
2019-02-01 19:39:57.495 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:39:57.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:39:57.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:39:57.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:39:57.496 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:39:57.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:39:57.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:39:57.497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:39:57.498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:39:57.498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:39:57.499 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:39:57.499 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:39:57.499 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:39:57.501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:39:57.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:39:57.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:39:57.502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:39:57.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:39:57.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:39:57.503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:39:57.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:39:57.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:39:57.504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:39:57.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:39:57.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:39:57.505 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:39:57.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:39:57.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:39:57.506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:39:57.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:39:57.507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:39:57.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:39:57.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:39:57.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:39:57.508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:39:57.509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:39:57.509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:39:57.509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:39:57.510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:39:57.510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:39:57.510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:39:57.511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:39:57.511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:39:57.511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:39:57.511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:39:57.512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:39:57.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:39:57.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:39:57.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:39:57.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:39:57.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:39:57.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:39:57.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:39:57.549 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:39:57.549 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:39:57.591 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:39:57.909 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:39:58.156 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:39:58.176 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:39:58.186 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:39:58.349 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:39:58.368 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:39:58.375 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.867 seconds (JVM running for 6.03)
2019-02-01 19:40:01.141 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:40:01.142 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:40:01.160 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-02-01 19:40:01.175 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:40:01.596 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:40:01.596 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:40:01.602 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:40:01.608 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:40:01.644 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:40:01.667 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:40:05.548 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:40:05.865 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:40:05.885 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:40:05.894 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:41:07.077 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5196 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:41:07.081 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:41:07.081 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:41:07.379 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:41:07.513 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:41:07 CST 2019]; root of context hierarchy
2019-02-01 19:41:09.156 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:41:09.166 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:41:09.167 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:41:09.265 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:41:09.265 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1753 ms
2019-02-01 19:41:09.419 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:41:09.420 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:41:09.420 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:41:09.420 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:41:09.420 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:41:09.420 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:41:10.265 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:41:07 CST 2019]; root of context hierarchy
2019-02-01 19:41:10.323 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:41:10.324 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:41:10.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:41:10.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:41:10.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:41:10.325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:41:10.326 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:41:10.326 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:41:10.326 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:41:10.327 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:41:10.327 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:41:10.327 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:41:10.328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:41:10.330 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:41:10.330 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:41:10.331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:41:10.331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:41:10.331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:41:10.331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:41:10.332 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:41:10.332 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:41:10.333 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:41:10.333 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:41:10.334 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:41:10.334 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:41:10.334 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:41:10.334 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:41:10.334 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:41:10.335 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:41:10.335 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:41:10.336 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:41:10.336 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:41:10.336 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:41:10.337 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:41:10.337 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:41:10.338 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:41:10.339 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:41:10.339 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:41:10.339 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:41:10.340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:41:10.340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:41:10.341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:41:10.341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:41:10.342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:41:10.342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:41:10.342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:41:10.343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:41:10.343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:41:10.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:41:10.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:41:10.344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:41:10.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:41:10.347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:41:10.382 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:41:10.382 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:41:10.423 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:41:10.729 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:41:10.977 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:41:10.998 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:41:11.008 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:41:11.169 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:41:11.191 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:41:11.196 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.609 seconds (JVM running for 5.743)
2019-02-01 19:41:14.295 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:41:14.295 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:41:14.313 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-02-01 19:41:14.325 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:41:14.744 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:41:14.753 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:41:14.756 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:41:14.763 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:41:14.797 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:41:14.816 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:41:17.655 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 19:41:17.673 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 19:41:17.966 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:41:17.987 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 19:41:17.998 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 19:41:18.008 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:41:18.009 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:41:18.011 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 19:41:18.013 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 19:41:18.731 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-01 19:41:19.662 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/My97DatePicker/skin/default/img.gif
2019-02-01 19:41:22.827 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-02-01 19:41:22.846 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-02-01 19:41:22.847 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-02-01 19:41:22.850 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-01 19:41:22.851 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:22.852 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-01 19:41:22.853 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:41:22.853 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:22.854 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-01 19:41:22.855 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:41:22.855 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:22.855 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 19:41:22.857 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 19:41:22.857 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:22.857 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-01 19:41:22.858 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 19:41:22.859 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:22.860 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-01 19:41:22.861 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:41:25.854 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productListForTrade
2019-02-01 19:41:25.856 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_state=0 order by prod_id 
2019-02-01 19:41:25.857 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 
2019-02-01 19:41:25.859 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-02-01 19:41:25.859 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:25.860 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-01 19:41:25.862 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:41:25.863 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:25.864 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 3(Integer)
2019-02-01 19:41:25.869 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:41:25.870 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:25.870 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 19:41:25.871 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 19:41:25.871 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:25.871 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-01 19:41:25.872 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 19:41:25.873 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 19:41:25.873 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 6(Integer)
2019-02-01 19:41:25.874 [http-nio-8080-exec-4] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 19:41:38.092 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-02-01 19:41:40.813 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveReject
2019-02-01 19:42:03.250 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:42:03.261 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:42:03.262 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:42:03.264 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:42:21.806 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:42:21.812 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:42:21.814 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: (String), (String)
2019-02-01 19:42:21.818 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:42:22.581 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:42:22.583 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:42:22.584 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: (String), (String)
2019-02-01 19:42:22.586 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:46:12.360 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:46:12.362 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:46:12.363 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:46:12.365 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:46:14.010 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:46:14.011 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:46:14.012 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: null, null
2019-02-01 19:46:14.014 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:46:22.993 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6956 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:46:22.998 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:46:22.999 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:46:23.301 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:46:23.450 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:46:23 CST 2019]; root of context hierarchy
2019-02-01 19:46:25.123 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:46:25.134 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:46:25.135 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:46:25.242 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:46:25.243 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1793 ms
2019-02-01 19:46:25.414 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:46:25.415 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:46:25.415 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:46:25.415 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:46:25.416 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:46:25.416 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:46:26.317 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:46:23 CST 2019]; root of context hierarchy
2019-02-01 19:46:26.372 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:46:26.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:46:26.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:46:26.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:46:26.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:46:26.373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:46:26.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:46:26.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:46:26.374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:46:26.375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:46:26.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:46:26.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:46:26.376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:46:26.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:46:26.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:46:26.379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:46:26.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:46:26.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:46:26.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:46:26.380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:46:26.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:46:26.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:46:26.381 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:46:26.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:46:26.383 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:46:26.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:46:26.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:46:26.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:46:26.384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:46:26.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:46:26.386 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:46:26.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:46:26.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:46:26.387 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:46:26.388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:46:26.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:46:26.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:46:26.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:46:26.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:46:26.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:46:26.390 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:46:26.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:46:26.391 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:46:26.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:46:26.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:46:26.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:46:26.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:46:26.393 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:46:26.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:46:26.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:46:26.394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:46:26.397 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:46:26.397 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:46:26.430 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:46:26.430 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:46:26.472 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:46:26.897 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:46:27.194 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:46:27.220 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:46:27.235 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:46:27.426 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:46:27.445 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:46:27.450 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.883 seconds (JVM running for 6.007)
2019-02-01 19:46:31.402 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:46:31.403 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:46:31.420 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2019-02-01 19:46:31.429 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:46:31.723 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:46:31.743 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:46:31.753 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:49:22.533 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:49:22.606 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:49:22.607 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:49:22.610 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:49:22.613 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:49:22.663 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:49:22.692 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:49:25.118 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:49:25.127 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:49:25.129 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:49:25.132 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:49:44.659 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:49:44.709 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:49:44.709 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:49:44.709 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:49:44.709 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:49:44.743 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:49:44.773 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:49:48.136 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:49:48.141 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:49:48.142 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:49:48.144 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:53:09.814 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5280 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:53:09.819 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:53:09.819 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:53:10.256 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:53:10.368 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:53:10 CST 2019]; root of context hierarchy
2019-02-01 19:53:12.206 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:53:12.216 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:53:12.217 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:53:12.327 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:53:12.328 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1961 ms
2019-02-01 19:53:12.501 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:53:12.502 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:53:12.503 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:53:12.503 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:53:12.503 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:53:12.503 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:53:13.454 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:53:10 CST 2019]; root of context hierarchy
2019-02-01 19:53:13.513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:53:13.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:53:13.514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:53:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:53:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:53:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:53:13.515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:53:13.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:53:13.516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:53:13.517 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:53:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:53:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:53:13.518 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:53:13.520 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:53:13.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:53:13.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:53:13.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:53:13.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:53:13.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:53:13.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:53:13.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:53:13.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:53:13.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:53:13.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:53:13.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:53:13.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:53:13.526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:53:13.526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:53:13.526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:53:13.527 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:53:13.527 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:53:13.528 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:53:13.528 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:53:13.528 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:53:13.528 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:53:13.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:53:13.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:53:13.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:53:13.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:53:13.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:53:13.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:53:13.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:53:13.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:53:13.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:53:13.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:53:13.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:53:13.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:53:13.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:53:13.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:53:13.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:53:13.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:53:13.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:53:13.538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:53:13.573 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:53:13.573 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:53:13.615 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:53:13.931 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:53:14.283 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:53:14.315 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:53:14.328 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:53:14.344 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:53:14.544 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:53:14.549 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.207 seconds (JVM running for 6.468)
2019-02-01 19:53:16.661 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:53:16.662 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:53:16.680 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-02-01 19:53:16.690 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:53:17.134 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:53:17.135 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:53:17.135 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:53:17.136 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:53:17.185 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:53:17.210 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:53:19.432 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:53:19.738 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:53:19.759 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:53:19.768 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:54:34.188 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6576 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:54:34.192 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:54:34.193 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:54:34.582 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:54:34 CST 2019]; root of context hierarchy
2019-02-01 19:54:34.684 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:54:36.420 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:54:36.434 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:54:36.435 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:54:36.587 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:54:36.587 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2006 ms
2019-02-01 19:54:36.827 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:54:36.829 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:54:36.829 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:54:36.829 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:54:36.829 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:54:36.829 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:54:37.695 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:54:34 CST 2019]; root of context hierarchy
2019-02-01 19:54:37.754 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:54:37.755 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:54:37.756 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:54:37.756 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:54:37.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:54:37.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:54:37.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:54:37.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:54:37.757 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:54:37.758 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:54:37.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:54:37.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:54:37.759 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:54:37.762 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:54:37.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:54:37.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:54:37.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:54:37.763 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:54:37.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:54:37.764 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:54:37.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:54:37.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:54:37.765 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:54:37.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:54:37.766 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:54:37.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:54:37.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:54:37.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:54:37.767 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:54:37.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:54:37.768 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:54:37.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:54:37.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:54:37.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:54:37.769 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:54:37.770 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:54:37.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:54:37.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:54:37.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:54:37.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:54:37.771 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:54:37.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:54:37.772 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:54:37.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:54:37.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:54:37.773 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:54:37.774 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:54:37.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:54:37.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:54:37.775 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:54:37.776 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:54:37.779 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:54:37.780 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:54:37.814 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:54:37.815 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:54:37.860 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:54:38.265 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:54:38.512 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:54:38.532 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:54:38.545 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:54:38.719 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:54:38.739 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:54:38.744 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.05 seconds (JVM running for 6.263)
2019-02-01 19:54:42.056 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:54:42.056 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:54:42.074 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-02-01 19:54:42.085 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:54:42.382 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:54:42.404 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:54:42.414 [http-nio-8080-exec-1] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:54:49.887 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:54:49.893 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:54:49.894 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-02(String)
2019-02-01 19:54:49.911 [http-nio-8080-exec-2] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 3
2019-02-01 19:55:01.076 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:55:01.082 [http-nio-8080-exec-3] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? and prod_name like ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:55:01.084 [http-nio-8080-exec-3] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-02(String), %向%(String)
2019-02-01 19:55:01.094 [http-nio-8080-exec-3] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 3
2019-02-01 19:55:03.520 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:55:03.528 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? and prod_name like ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:55:03.532 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-02(String), %a%(String)
2019-02-01 19:55:03.534 [http-nio-8080-exec-4] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:55:15.424 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:55:15.431 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:55:15.436 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-02(String)
2019-02-01 19:55:15.446 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 3
2019-02-01 19:56:20.721 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 7012 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:56:20.725 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:56:20.726 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:56:21.152 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:56:21.193 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:56:21 CST 2019]; root of context hierarchy
2019-02-01 19:56:22.734 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:56:22.745 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:56:22.746 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:56:22.844 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:56:22.845 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1652 ms
2019-02-01 19:56:23.004 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:56:23.005 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:56:23.006 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:56:23.006 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:56:23.006 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:56:23.006 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:56:23.839 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:56:21 CST 2019]; root of context hierarchy
2019-02-01 19:56:23.897 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:56:23.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:56:23.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:56:23.899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:56:23.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:56:23.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:56:23.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:56:23.900 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:56:23.901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:56:23.901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:56:23.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:56:23.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:56:23.902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:56:23.905 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:56:23.905 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:56:23.905 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:56:23.906 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:56:23.906 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:56:23.906 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:56:23.907 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:56:23.907 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:56:23.908 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:56:23.908 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:56:23.909 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:56:23.909 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:56:23.909 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:56:23.909 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:56:23.910 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:56:23.910 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:56:23.912 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:56:23.912 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:56:23.912 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:56:23.912 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:56:23.912 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:56:23.913 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:56:23.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:56:23.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:56:23.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:56:23.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:56:23.914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:56:23.915 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:56:23.916 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:56:23.916 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:56:23.916 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:56:23.917 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:56:23.917 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:56:23.918 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:56:23.918 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:56:23.918 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:56:23.918 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:56:23.919 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:56:23.921 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:56:23.922 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:56:23.956 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:56:23.956 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:56:24.002 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:56:24.325 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:56:24.587 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:56:24.606 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:56:24.617 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:56:24.630 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:56:24.829 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:56:24.835 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.663 seconds (JVM running for 5.791)
2019-02-01 19:56:26.000 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:56:26.000 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:56:26.029 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2019-02-01 19:56:26.043 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:56:26.548 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:56:26.549 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:56:26.549 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:56:26.553 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:56:26.600 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:56:26.640 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:56:29.009 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:56:29.320 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:56:29.342 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:56:29.352 [http-nio-8080-exec-8] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:56:31.122 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:56:31.129 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:56:31.133 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:56:31.136 [http-nio-8080-exec-9] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:56:34.263 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:56:34.270 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:56:34.272 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-02(String)
2019-02-01 19:56:34.291 [http-nio-8080-exec-10] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 3
2019-02-01 19:58:32.105 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 6264 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 19:58:32.110 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 19:58:32.110 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 19:58:32.629 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:58:32 CST 2019]; root of context hierarchy
2019-02-01 19:58:32.657 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 19:58:34.286 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 19:58:34.297 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 19:58:34.298 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 19:58:34.406 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 19:58:34.407 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1779 ms
2019-02-01 19:58:34.586 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 19:58:34.587 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 19:58:34.587 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 19:58:34.587 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 19:58:34.587 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 19:58:34.587 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 19:58:35.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 19:58:32 CST 2019]; root of context hierarchy
2019-02-01 19:58:35.521 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 19:58:35.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 19:58:35.522 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 19:58:35.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 19:58:35.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 19:58:35.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 19:58:35.523 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 19:58:35.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:58:35.524 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 19:58:35.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 19:58:35.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 19:58:35.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 19:58:35.525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 19:58:35.528 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 19:58:35.528 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 19:58:35.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:58:35.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 19:58:35.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 19:58:35.529 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 19:58:35.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 19:58:35.530 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:58:35.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:58:35.531 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:58:35.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:58:35.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 19:58:35.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:58:35.532 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 19:58:35.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:58:35.533 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock)
2019-02-01 19:58:35.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 19:58:35.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:58:35.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 19:58:35.534 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 19:58:35.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:58:35.535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:58:35.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 19:58:35.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 19:58:35.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 19:58:35.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock)
2019-02-01 19:58:35.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock)
2019-02-01 19:58:35.537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 19:58:35.538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:58:35.538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:58:35.538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 19:58:35.539 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 19:58:35.540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 19:58:35.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 19:58:35.542 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 19:58:35.542 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 19:58:35.543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 19:58:35.543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 19:58:35.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 19:58:35.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 19:58:35.582 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:58:35.582 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:58:35.625 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 19:58:35.945 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 19:58:36.192 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 19:58:36.214 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 19:58:36.225 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 19:58:36.239 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 19:58:36.418 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 19:58:36.422 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.762 seconds (JVM running for 5.895)
2019-02-01 19:58:38.791 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 19:58:38.791 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 19:58:38.810 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-01 19:58:38.821 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 19:58:39.250 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 19:58:39.250 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 19:58:39.258 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 19:58:39.260 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 19:58:39.296 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 19:58:39.324 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 19:58:41.458 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:58:41.775 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:58:41.798 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:58:41.809 [http-nio-8080-exec-8] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 0
2019-02-01 19:58:47.720 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:58:47.726 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:58:47.727 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: 2019-02-01(String), 2019-02-02(String)
2019-02-01 19:58:47.729 [http-nio-8080-exec-9] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 0
2019-02-01 19:58:54.193 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:58:54.198 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:58:54.200 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: 2019-01-28(String), 2019-02-02(String)
2019-02-01 19:58:54.214 [http-nio-8080-exec-10] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 11
2019-02-01 19:59:17.351 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productCurrentStockChange
2019-02-01 19:59:17.357 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==>  Preparing: select t.prod_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:59:17.362 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:59:17.364 [http-nio-8080-exec-1] DEBUG c.y.r.d.ProductReceCurrDao.findProductStockChange - <==      Total: 0
2019-02-01 19:59:18.396 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockChange
2019-02-01 19:59:18.402 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==>  Preparing: select t.prod_rece_trade_id, t.trade_date,t.prod_id,p.prod_name,t.prod_param_id,pp.prod_param_name, t.begin_num,t.trade_add,t.trade_del,t.end_num,t.oper_id,u.user_name from product_receive_trade t,product p,product_parameter pp,user_info u where t.prod_id=p.prod_id and t.prod_param_id=pp.prod_param_id and t.oper_id=u.user_id and t.trade_date BETWEEN ? and ? ORDER BY t.prod_id,t.prod_param_id,t.trade_date 
2019-02-01 19:59:18.404 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - ==> Parameters: 2019-02-01(String), 2019-02-01(String)
2019-02-01 19:59:18.408 [http-nio-8080-exec-5] DEBUG c.y.r.d.P.findProductReceiveStockChange - <==      Total: 0
2019-02-01 19:59:19.011 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockReport
2019-02-01 19:59:19.016 [http-nio-8080-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==>  Preparing: select t.prod_id,t.prod_name,t.prod_param_id,t.prod_param_name, ifnull((select stock_num from product_receive_stock prs where prs.prod_id=t.prod_id and prs.prod_param_id=t.prod_param_id),0) prod_rece_num, ifnull((select stock_num from product_stock ps where ps.prod_id=t.prod_id and ps.prod_param_id=t.prod_param_id),0) prod_curr_num from (select p.prod_id,p.prod_name,pp.prod_param_id,pp.prod_param_name from product p LEFT JOIN product_parameter pp on p.prod_id=pp.prod_id where p.prod_state=0 order by p.prod_id,pp.prod_param_id) t where 1=1 
2019-02-01 19:59:19.017 [http-nio-8080-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - ==> Parameters: 
2019-02-01 19:59:19.022 [http-nio-8080-exec-3] DEBUG c.y.r.d.ProductReceCurrDao.findProductReceCurrList - <==      Total: 7
2019-02-01 19:59:20.853 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 19:59:20.859 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 19:59:20.887 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 19:59:20.888 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 19:59:20.890 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 19:59:20.894 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 19:59:20.896 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 19:59:20.901 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 19:59:20.904 [http-nio-8080-exec-4] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:39:58.789 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 20:39:58.899 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1312 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 20:39:58.899 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 20:39:58.899 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 20:39:59.192 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 20:39:59 CST 2019]; root of context hierarchy
2019-02-01 20:40:00.627 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 20:40:00.644 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 20:40:00.646 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 20:40:00.769 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 20:40:00.770 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1578 ms
2019-02-01 20:40:00.938 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 20:40:00.939 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 20:40:00.940 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 20:40:00.940 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 20:40:00.940 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 20:40:00.940 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 20:40:01.782 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 20:39:59 CST 2019]; root of context hierarchy
2019-02-01 20:40:01.840 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 20:40:01.842 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 20:40:01.842 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 20:40:01.842 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 20:40:01.842 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 20:40:01.843 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 20:40:01.843 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 20:40:01.843 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 20:40:01.843 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 20:40:01.844 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 20:40:01.844 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 20:40:01.844 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 20:40:01.845 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 20:40:01.847 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 20:40:01.848 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 20:40:01.848 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.848 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 20:40:01.848 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 20:40:01.849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 20:40:01.849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 20:40:01.850 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:40:01.850 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:40:01.850 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:40:01.851 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:40:01.851 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 20:40:01.851 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.852 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 20:40:01.852 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 20:40:01.852 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 20:40:01.853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 20:40:01.854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 20:40:01.854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 20:40:01.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:40:01.855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 20:40:01.856 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 20:40:01.856 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 20:40:01.856 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 20:40:01.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 20:40:01.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.858 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 20:40:01.858 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 20:40:01.859 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:40:01.859 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 20:40:01.859 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 20:40:01.859 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 20:40:01.862 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 20:40:01.863 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 20:40:01.896 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 20:40:01.896 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 20:40:01.941 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 20:40:02.273 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 20:40:02.537 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 20:40:02.556 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 20:40:02.567 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 20:40:02.728 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 20:40:02.750 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 20:40:02.755 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.858 seconds (JVM running for 6.019)
2019-02-01 20:40:09.862 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 20:40:09.862 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 20:40:09.880 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2019-02-01 20:40:09.891 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:40:09.912 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:40:10.197 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:40:10.217 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:40:10.229 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:40:10.239 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:40:10.240 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:40:10.244 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:40:10.246 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:40:14.275 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:40:14.287 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:40:14.288 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 9(Integer)
2019-02-01 20:40:14.292 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:40:15.645 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-01 20:40:15.676 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 20:40:15.677 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-01 20:40:15.679 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 20:40:18.286 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:40:18.307 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:40:18.307 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-02-01 20:40:18.309 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:40:18.314 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-02-01 20:40:18.315 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 37(Integer), 9(Integer)
2019-02-01 20:40:18.353 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-02-01 20:40:28.957 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:40:28.958 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:40:28.962 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:40:28.963 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:40:28.966 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:40:28.973 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:40:28.973 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:40:28.977 [http-nio-8080-exec-5] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:40:28.981 [http-nio-8080-exec-5] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:40:30.520 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:40:30.525 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:40:30.526 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 9(Integer)
2019-02-01 20:40:30.532 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:40:31.730 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:40:31.735 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:40:31.735 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-02-01 20:40:31.737 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:40:31.741 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-02-01 20:40:31.741 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 37(Integer), 9(Integer)
2019-02-01 20:40:31.765 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-02-01 20:40:36.254 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 20:40:36.262 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 20:40:36.264 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:40:36.265 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 20:40:36.266 [http-nio-8080-exec-8] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 20:40:36.269 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:40:36.270 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:40:36.274 [http-nio-8080-exec-8] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 20:40:36.276 [http-nio-8080-exec-8] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 20:40:38.613 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreUpdate
2019-02-01 20:40:38.619 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockById - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_stock_id=? 
2019-02-01 20:40:38.620 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockById - ==> Parameters: 9(Integer)
2019-02-01 20:40:38.627 [http-nio-8080-exec-9] DEBUG c.y.stock.dao.ProductStockDao.findProductStockById - <==      Total: 1
2019-02-01 20:40:39.653 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockUpdate
2019-02-01 20:40:39.669 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductStockByProdIdAndProdParamId - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and p.prod_id=? and pp.prod_param_Id=? 
2019-02-01 20:40:39.669 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductStockByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-02-01 20:40:39.672 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductStockByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:40:39.677 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductStockDao.updateProductStock - ==>  Preparing: update product_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_stock_id=? 
2019-02-01 20:40:39.679 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductStockDao.updateProductStock - ==> Parameters: 2(Integer), 8(Integer), 10(Integer), 9(Integer)
2019-02-01 20:40:39.720 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductStockDao.updateProductStock - <==    Updates: 1
2019-02-01 20:40:43.260 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 20:40:43.262 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 20:40:43.272 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:40:43.273 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 20:40:43.278 [http-nio-8080-exec-1] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 20:40:43.283 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:40:43.284 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:40:43.286 [http-nio-8080-exec-1] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 20:40:43.288 [http-nio-8080-exec-1] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 20:40:46.319 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveIn
2019-02-01 20:41:30.323 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/main
2019-02-01 20:41:30.425 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/bootstrap.min.css
2019-02-01 20:41:30.427 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/css/site.css
2019-02-01 20:41:30.430 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/jquery.min.js
2019-02-01 20:41:30.434 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/js/bootstrap.min.js
2019-02-01 20:41:30.508 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/default.html
2019-02-01 20:41:30.568 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/favicon.ico
2019-02-01 20:41:33.853 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:41:33.855 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:41:33.860 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:41:33.860 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:41:33.864 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:41:33.867 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:41:33.868 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:41:33.873 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:41:33.875 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:41:35.093 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:41:35.097 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:41:35.098 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 10(Integer)
2019-02-01 20:41:35.100 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:41:36.287 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:41:36.294 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:41:36.294 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 3(Integer), 9(Integer)
2019-02-01 20:41:36.295 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:41:36.298 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-02-01 20:41:36.299 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 3(Integer), 9(Integer), 4(Integer), 10(Integer)
2019-02-01 20:41:36.332 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-02-01 20:41:44.449 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5220 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-02-01 20:41:44.454 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-02-01 20:41:44.455 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-02-01 20:41:44.798 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-02-01 20:41:44.884 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 20:41:44 CST 2019]; root of context hierarchy
2019-02-01 20:41:46.428 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-02-01 20:41:46.439 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-02-01 20:41:46.440 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-02-01 20:41:46.547 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-02-01 20:41:46.547 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1663 ms
2019-02-01 20:41:46.720 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-02-01 20:41:46.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-02-01 20:41:46.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-02-01 20:41:46.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-02-01 20:41:46.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'loginFilter' to urls: [/*]
2019-02-01 20:41:46.721 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-02-01 20:41:47.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Fri Feb 01 20:41:44 CST 2019]; root of context hierarchy
2019-02-01 20:41:47.615 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-02-01 20:41:47.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-02-01 20:41:47.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-02-01 20:41:47.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productDelete]}" onto public java.lang.String com.yun.product.controller.ProductController.productDelete(int)
2019-02-01 20:41:47.616 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreUpdate(int,org.springframework.ui.Model)
2019-02-01 20:41:47.617 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productUpdate]}" onto public java.lang.String com.yun.product.controller.ProductController.productUpdate(com.yun.product.model.Product)
2019-02-01 20:41:47.617 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForAutoComplete]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForAutoComplete(java.lang.String)
2019-02-01 20:41:47.617 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForStock]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForStock()
2019-02-01 20:41:47.618 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productListForTrade]}" onto public java.util.List<com.yun.product.model.Product> com.yun.product.controller.ProductController.productListForTrade(java.lang.String)
2019-02-01 20:41:47.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamDelete]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamDelete(int)
2019-02-01 20:41:47.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamPreAdd(int,org.springframework.ui.Model)
2019-02-01 20:41:47.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamSave]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamSave(com.yun.product.model.ProductParameter)
2019-02-01 20:41:47.619 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/prodParamList]}" onto public java.lang.String com.yun.product.controller.ProductParamController.prodParamList(int)
2019-02-01 20:41:47.622 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-02-01 20:41:47.622 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-02-01 20:41:47.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-02-01 20:41:47.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-02-01 20:41:47.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-02-01 20:41:47.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-02-01 20:41:47.623 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.624 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockReport]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productStockReport(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:41:47.625 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productReceiveStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:41:47.625 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentStockChange]}" onto public java.lang.String com.yun.report.controller.ProductStockReportController.productCurrentStockChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:41:47.625 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockList]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:41:47.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreAdd()
2019-02-01 20:41:47.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockSave]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockSave(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockDelete(int)
2019-02-01 20:41:47.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveStockController.productReceiveStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 20:41:47.626 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockUpdate]}" onto public void com.yun.stock.controller.ProductReceiveStockController.productReceiveStockUpdate(com.yun.stock.model.ProductReceiveStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.627 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveStockToCurrentStock]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.productReceiveStockToCurrentStock(int,org.springframework.ui.Model)
2019-02-01 20:41:47.628 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveInSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveInSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.628 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveReject]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 20:41:47.628 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveIn]}" onto public java.lang.String com.yun.stock.controller.ProductReceiveTradeController.receiveIn(org.springframework.ui.Model)
2019-02-01 20:41:47.628 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveRejectSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.receiveRejectSave(com.yun.stock.model.ProductReceiveTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.628 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productReceiveToCurrentSave]}" onto public void com.yun.stock.controller.ProductReceiveTradeController.productReceiveToCurrentSave(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-02-01 20:41:47.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockSave]}" onto public void com.yun.stock.controller.ProductStockController.productStockSave(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.629 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockList]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStocklist(java.lang.String,java.lang.String,org.springframework.ui.Model)
2019-02-01 20:41:47.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreAdd]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreAdd()
2019-02-01 20:41:47.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockDelete]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockDelete(int)
2019-02-01 20:41:47.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockPreUpdate]}" onto public java.lang.String com.yun.stock.controller.ProductStockController.productStockPreUpdate(int,org.springframework.ui.Model)
2019-02-01 20:41:47.630 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productStockUpdate]}" onto public void com.yun.stock.controller.ProductStockController.productStockUpdate(com.yun.stock.model.ProductStock,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOut]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.receiveReject(org.springframework.ui.Model)
2019-02-01 20:41:47.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentIn]}" onto public java.lang.String com.yun.stock.controller.ProductTradeController.productCurrentIn(org.springframework.ui.Model)
2019-02-01 20:41:47.631 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentInSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentInSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productCurrentOutSave]}" onto public void com.yun.stock.controller.ProductTradeController.productCurrentOutSave(com.yun.stock.model.ProductTrade,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.632 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-02-01 20:41:47.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-02-01 20:41:47.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public void com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-02-01 20:41:47.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/deleteUserInfo]}" onto public java.lang.String com.yun.user.controller.UserController.userDelete(int)
2019-02-01 20:41:47.633 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-02-01 20:41:47.634 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-02-01 20:41:47.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-02-01 20:41:47.637 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-02-01 20:41:47.670 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 20:41:47.670 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 20:41:47.714 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-02-01 20:41:48.002 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-02-01 20:41:48.261 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-02-01 20:41:48.282 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-02-01 20:41:48.294 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-02-01 20:41:48.469 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-02-01 20:41:48.490 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-02-01 20:41:48.494 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.584 seconds (JVM running for 5.752)
2019-02-01 20:41:50.636 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-02-01 20:41:50.636 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-02-01 20:41:50.655 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-02-01 20:41:50.668 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:41:50.693 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:41:51.046 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:41:51.067 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:41:51.079 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:41:51.089 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:41:51.089 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:41:51.093 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:41:51.095 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:41:55.375 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:41:55.385 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:41:55.387 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 11(Integer)
2019-02-01 20:41:55.392 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:41:57.025 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-01 20:41:57.051 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 20:41:57.052 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 20:41:57.053 [http-nio-8080-exec-3] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 20:42:00.212 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:42:00.236 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:42:00.237 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-02-01 20:42:00.239 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:42:07.412 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-01 20:42:07.419 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 20:42:07.421 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 20:42:07.426 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 20:42:10.975 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:42:10.980 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:42:10.982 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 6(Integer)
2019-02-01 20:42:10.984 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:42:16.991 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-01 20:42:17.003 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 20:42:17.004 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 4(Integer)
2019-02-01 20:42:17.007 [http-nio-8080-exec-7] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 20:42:19.168 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:42:19.175 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:42:19.176 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 4(Integer), 5(Integer)
2019-02-01 20:42:19.179 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:42:19.184 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-02-01 20:42:19.185 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 4(Integer), 5(Integer), 28(Integer), 11(Integer)
2019-02-01 20:42:19.199 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-02-01 20:42:20.453 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:42:20.457 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:42:20.464 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:20.464 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:42:20.465 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:42:20.471 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:20.471 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:20.476 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:42:20.478 [http-nio-8080-exec-10] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:42:22.430 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:42:22.432 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:42:22.436 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:22.437 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:42:22.440 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:42:22.447 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:22.448 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:22.462 [http-nio-8080-exec-1] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:42:22.464 [http-nio-8080-exec-1] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:42:24.799 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 20:42:24.805 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 20:42:24.818 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:24.819 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 20:42:24.823 [http-nio-8080-exec-2] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 20:42:24.834 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:24.835 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:24.838 [http-nio-8080-exec-2] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 20:42:24.840 [http-nio-8080-exec-2] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 20:42:26.424 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockPreUpdate
2019-02-01 20:42:26.429 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockById - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_stock_id=? 
2019-02-01 20:42:26.431 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockById - ==> Parameters: 8(Integer)
2019-02-01 20:42:26.434 [http-nio-8080-exec-3] DEBUG c.y.stock.dao.ProductStockDao.findProductStockById - <==      Total: 1
2019-02-01 20:42:27.592 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockUpdate
2019-02-01 20:42:27.601 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductStockByProdIdAndProdParamId - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and p.prod_id=? and pp.prod_param_Id=? 
2019-02-01 20:42:27.602 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductStockByProdIdAndProdParamId - ==> Parameters: 5(Integer), 7(Integer)
2019-02-01 20:42:27.606 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductStockByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:42:27.609 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductStockDao.updateProductStock - ==>  Preparing: update product_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_stock_id=? 
2019-02-01 20:42:27.610 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductStockDao.updateProductStock - ==> Parameters: 5(Integer), 7(Integer), 30(Integer), 8(Integer)
2019-02-01 20:42:27.611 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductStockDao.updateProductStock - <==    Updates: 1
2019-02-01 20:42:28.826 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productStockList
2019-02-01 20:42:28.827 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 跳转到物品库存查询控制器
2019-02-01 20:42:28.830 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==>  Preparing: select count(*) from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:28.831 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - ==> Parameters: 
2019-02-01 20:42:28.833 [http-nio-8080-exec-5] DEBUG c.y.s.dao.ProductStockDao.findProductStockRowCnt - <==      Total: 1
2019-02-01 20:42:28.836 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==>  Preparing: select ps.prod_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:28.837 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:28.839 [http-nio-8080-exec-5] DEBUG c.y.stock.dao.ProductStockDao.findProductStockList - <==      Total: 2
2019-02-01 20:42:28.844 [http-nio-8080-exec-5] DEBUG com.yun.stock.controller.ProductStockController - 转到物品库存页面
2019-02-01 20:42:30.645 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:42:30.647 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:42:30.653 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:30.654 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:42:30.656 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:42:30.660 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:30.661 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:30.664 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:42:30.667 [http-nio-8080-exec-6] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:42:32.298 [http-nio-8080-exec-7] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:42:32.303 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:42:32.304 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 9(Integer)
2019-02-01 20:42:32.306 [http-nio-8080-exec-7] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:42:33.421 [http-nio-8080-exec-8] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:42:33.426 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:42:33.427 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 2(Integer), 8(Integer)
2019-02-01 20:42:33.429 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
2019-02-01 20:42:33.433 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - ==>  Preparing: update product_receive_stock set prod_id=?,prod_param_id=?,stock_num=? where prod_rece_stock_id=? 
2019-02-01 20:42:33.434 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - ==> Parameters: 2(Integer), 8(Integer), 37(Integer), 9(Integer)
2019-02-01 20:42:33.456 [http-nio-8080-exec-8] DEBUG c.y.s.d.P.updateProductReceiveStock - <==    Updates: 1
2019-02-01 20:42:34.645 [http-nio-8080-exec-9] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:42:34.647 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:42:34.649 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:34.649 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:42:34.650 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:42:34.653 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:34.655 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:34.660 [http-nio-8080-exec-9] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:42:34.662 [http-nio-8080-exec-9] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:42:36.483 [http-nio-8080-exec-10] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:42:36.493 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:42:36.494 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 9(Integer)
2019-02-01 20:42:36.498 [http-nio-8080-exec-10] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:42:37.809 [http-nio-8080-exec-1] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-01 20:42:37.814 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 20:42:37.815 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 2(Integer)
2019-02-01 20:42:37.818 [http-nio-8080-exec-1] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 1
2019-02-01 20:42:40.670 [http-nio-8080-exec-2] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:42:40.671 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:42:40.674 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:40.675 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:42:40.676 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:42:40.680 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:40.682 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 0(Integer), 5(Integer)
2019-02-01 20:42:40.687 [http-nio-8080-exec-2] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 5
2019-02-01 20:42:40.689 [http-nio-8080-exec-2] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:42:44.418 [http-nio-8080-exec-3] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockList
2019-02-01 20:42:44.422 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 跳转到待收库存查询控制器
2019-02-01 20:42:44.424 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==>  Preparing: select count(*) from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 
2019-02-01 20:42:44.424 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - ==> Parameters: 
2019-02-01 20:42:44.426 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockRowCnt - <==      Total: 1
2019-02-01 20:42:44.430 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 order by p.prod_id,pp.prod_param_id limit ?,? 
2019-02-01 20:42:44.430 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - ==> Parameters: 5(Integer), 5(Integer)
2019-02-01 20:42:44.432 [http-nio-8080-exec-3] DEBUG c.y.s.d.P.findProductReceiveStockList - <==      Total: 1
2019-02-01 20:42:44.434 [http-nio-8080-exec-3] DEBUG c.y.stock.controller.ProductReceiveStockController - 转到待收库存页面
2019-02-01 20:42:45.877 [http-nio-8080-exec-4] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockPreUpdate
2019-02-01 20:42:45.878 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockById - ==>  Preparing: select ps.prod_rece_stock_id,ps.stock_num,p.prod_id,p.prod_name,p.prod_no,prod_state,pp.prod_param_id,pp.prod_param_name from product_receive_stock ps inner join product p on ps.prod_id=p.prod_id left join product_parameter pp on ps.prod_param_id=pp.prod_param_id where 1=1 and ps.prod_rece_stock_id=? 
2019-02-01 20:42:45.879 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockById - ==> Parameters: 14(Integer)
2019-02-01 20:42:45.881 [http-nio-8080-exec-4] DEBUG c.y.s.d.P.findProductReceiveStockById - <==      Total: 1
2019-02-01 20:42:47.295 [http-nio-8080-exec-5] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/prodParamList
2019-02-01 20:42:47.303 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==>  Preparing: select * from product_parameter where prod_id=? 
2019-02-01 20:42:47.303 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - ==> Parameters: 5(Integer)
2019-02-01 20:42:47.305 [http-nio-8080-exec-5] DEBUG c.y.p.d.P.findProductParameterListByProductId - <==      Total: 2
2019-02-01 20:42:50.190 [http-nio-8080-exec-6] DEBUG com.yun.user.filter.LoginFilter - 当前请求的地址requestUrl：/productReceiveStockUpdate
2019-02-01 20:42:50.198 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==>  Preparing: select * from product_receive_stock where 1=1 and prod_id=? and prod_param_id=? 
2019-02-01 20:42:50.199 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - ==> Parameters: 5(Integer), 7(Integer)
2019-02-01 20:42:50.201 [http-nio-8080-exec-6] DEBUG c.y.s.d.P.findProductReceiveStockRecordByProdIdAndProdParamId - <==      Total: 1
