2019-01-19 10:26:04.895 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4744 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:26:04.941 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:26:04.941 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 10:26:06.267 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:26:07.047 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:26:07 CST 2019]; root of context hierarchy
2019-01-19 10:26:11.899 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 10:26:11.961 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 10:26:11.977 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 10:26:12.305 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 10:26:12.305 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 5258 ms
2019-01-19 10:26:12.523 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 10:26:12.523 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 10:26:12.523 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 10:26:12.523 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 10:26:12.523 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 10:26:14.785 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:26:07 CST 2019]; root of context hierarchy
2019-01-19 10:26:14.972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:26:14.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:26:15.066 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:26:15.066 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:26:15.144 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:26:15.986 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 10:26:16.423 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 10:26:16.501 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 10:26:16.548 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 10:26:16.579 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 10:26:16.641 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 10:26:16.641 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 13.338 seconds (JVM running for 18.224)
2019-01-19 10:26:33.571 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 10:26:33.572 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 10:26:33.656 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 84 ms
2019-01-19 10:26:41.727 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==>  Preparing: select * from user_info where login_name=? and login_pass=? 
2019-01-19 10:26:41.747 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - ==> Parameters: admin(String), 123(String)
2019-01-19 10:26:41.839 [http-nio-8080-exec-6] DEBUG c.y.user.dao.UserInfoDao.findUserInfoByNameAndPass - <==      Total: 1
2019-01-19 10:26:44.178 [http-nio-8080-exec-2] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:26:44.445 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:44.446 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:26:44.477 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:44.477 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:26:44.477 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:26:44.493 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:26:44.907 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:26:44.908 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:26:44.942 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:26:44.946 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:26:44.947 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:26:44.948 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:26:49.250 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:26:49.250 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:26:49.250 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:26:49.266 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:26:49.266 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:26:49.267 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:26:54.545 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:26:54.547 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:26:54.550 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:26:54.601 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "page.pageNo-1"] with root cause
java.lang.NumberFormatException: For input string: "page.pageNo-1"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.yun.product.controller.ProductController.productList(ProductController.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 10:26:57.471 [http-nio-8080-exec-3] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:26:57.537 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:57.537 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:26:57.539 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:57.539 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:26:57.545 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:57.545 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:26:57.546 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:26:57.547 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:57.548 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:26:57.550 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:26:57.550 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:26:57.551 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:57.551 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:26:57.553 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:26:57.553 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:26:57.554 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:26:57.555 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:26:57.556 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:27:01.428 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:27:01.428 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:27:01.428 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:27:01.445 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:27:01.446 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:27:01.447 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:27:08.696 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:27:08.697 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:27:08.698 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:27:08.699 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:27:08.700 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:27:08.700 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:27:08.702 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:27:08.703 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:27:08.703 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:27:08.705 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:27:08.705 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:27:08.706 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:27:08.706 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:27:08.707 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:27:08.708 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:27:08.709 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:27:08.709 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:27:08.709 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:27:16.216 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:27:16.218 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:27:16.220 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:27:16.224 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:27:16.224 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:27:16.225 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:28:08.071 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:28:08.072 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:28:08.074 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:28:08.075 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:28:08.076 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:28:08.077 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:28:08.079 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:28:08.080 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:28:08.081 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:28:08.082 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:28:08.083 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:28:08.084 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:28:08.085 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:28:08.087 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:28:08.087 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:28:08.089 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:28:08.089 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:28:08.089 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:29:39.061 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:29:39.061 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:29:39.077 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:29:39.094 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:29:39.094 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:29:39.095 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:29:45.553 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:29:45.554 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:29:45.555 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:29:45.556 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:29:45.557 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:29:45.558 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:29:45.559 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:29:45.560 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:29:45.560 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:29:45.561 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:29:45.562 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:29:45.562 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:29:45.562 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:29:45.563 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:29:45.564 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:29:45.565 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:29:45.565 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:29:45.565 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:31:25.527 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:31:25.527 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:31:25.528 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:31:25.531 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:31:25.531 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:31:25.532 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:31:33.140 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:31:33.141 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:31:33.142 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:31:33.142 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:31:33.144 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:31:33.144 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:31:33.145 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:31:33.146 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:31:33.146 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:31:33.147 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:31:33.147 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:31:33.147 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:31:33.148 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:31:33.149 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:31:33.149 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:31:33.150 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:31:33.150 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:31:33.150 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:31:59.964 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:31:59.965 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:31:59.966 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:31:59.968 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:31:59.969 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:31:59.969 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:32:06.029 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:32:06.029 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:32:06.030 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:32:06.031 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:32:06.032 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:32:06.032 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:32:06.033 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:32:06.034 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:32:06.034 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:32:06.035 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:32:06.036 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:32:06.036 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:32:06.036 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:32:06.038 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:32:06.038 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:32:06.039 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:32:06.039 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:32:06.039 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:34:47.992 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-19 10:34:48.003 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:34:48.004 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:34:48.159 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-19 10:34:48.172 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:34:48.220 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c583ecf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@692f203f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@48f2bd5b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b2bbc3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a1153bc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1aafa419, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@47eaca72, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@55141def, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@55182842, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3270d194, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@235834f2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5656be13]
2019-01-19 10:34:48.222 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.YunEbStockApplicationTests], using SpringBootContextLoader
2019-01-19 10:34:48.223 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.YunEbStockApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:34:48.224 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.YunEbStockApplicationTests]: YunEbStockApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:34:48.230 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.YunEbStockApplicationTests
2019-01-19 10:34:48.237 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:34:48.242 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5b12b668, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1165b38, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c12331b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7586beff, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b69e7d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@815b41f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5542c4ed, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1573f9fc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6150c3ec, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@44c03695, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7e6f74c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@dd05255]
2019-01-19 10:34:48.258 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-19 10:34:48.260 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:34:48.260 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:34:48.267 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-19 10:34:48.273 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:34:48.280 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c178a76, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fa4c865, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bd82cf5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@544fa968, org.springframework.test.context.transaction.TransactionalTestExecutionListener@247bddad, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d35dea7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7770f470, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5e5d171f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@24313fcc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7d20d0b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77f1baf5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41a2befb]
2019-01-19 10:34:48.828 [main] INFO  com.yun.ProductTypeTest - Starting ProductTypeTest on USER-20181202BJ with PID 3684 (started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:34:48.829 [main] DEBUG com.yun.ProductTypeTest - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:34:48.829 [main] INFO  com.yun.ProductTypeTest - No active profile set, falling back to default profiles: default
2019-01-19 10:34:49.380 [main] INFO  o.s.w.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f5b5dc: startup date [Sat Jan 19 10:34:49 CST 2019]; root of context hierarchy
2019-01-19 10:34:49.722 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:34:52.970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@23f5b5dc: startup date [Sat Jan 19 10:34:49 CST 2019]; root of context hierarchy
2019-01-19 10:34:53.109 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:34:53.111 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:34:53.112 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:34:53.113 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:34:53.114 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:34:53.115 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:34:53.115 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:34:53.116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:34:53.117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:34:53.118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:34:53.119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:34:53.121 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:34:53.122 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:34:53.122 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:34:53.122 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:34:53.129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:34:53.130 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:34:53.197 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:34:53.197 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:34:53.277 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:34:53.913 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: ServletContext resource [/index.html]
2019-01-19 10:34:54.694 [main] INFO  com.yun.ProductTypeTest - Started ProductTypeTest in 6.234 seconds (JVM running for 7.614)
2019-01-19 10:34:55.483 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:34:55.531 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:34:55.557 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:34:55.558 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:34:55.567 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:34:55.568 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:34:55.569 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:34:55.571 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:34:55.571 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:34:55.573 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:34:55.574 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:34:55.575 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:34:55.576 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:34:55.582 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:34:55.583 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:34:55.587 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:34:55.588 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:34:55.588 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:34:55.615 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.YunEbStockApplicationTests], using SpringBootContextLoader
2019-01-19 10:34:55.617 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.YunEbStockApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:34:55.618 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.YunEbStockApplicationTests]: YunEbStockApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:34:55.626 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.YunEbStockApplicationTests
2019-01-19 10:34:55.631 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:34:55.635 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6bedd4e4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4570d7b6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@72b6832e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3850e90c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3d9f5016, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7e91ed74, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3878be7b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7df28f1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4087c7fc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@318c68d5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4cfa83f9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@321ca237]
2019-01-19 10:34:55.655 [Thread-2] INFO  o.s.w.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@23f5b5dc: startup date [Sat Jan 19 10:34:49 CST 2019]; root of context hierarchy
2019-01-19 10:35:30.764 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-19 10:35:30.776 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:35:30.778 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:35:30.931 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-19 10:35:30.943 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:35:30.975 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c583ecf, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@692f203f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@48f2bd5b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7b2bbc3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a1153bc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1aafa419, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@47eaca72, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@55141def, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@55182842, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3270d194, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@235834f2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5656be13]
2019-01-19 10:35:30.977 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.YunEbStockApplicationTests], using SpringBootContextLoader
2019-01-19 10:35:30.978 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.YunEbStockApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:35:30.979 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.YunEbStockApplicationTests]: YunEbStockApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:35:30.987 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.YunEbStockApplicationTests
2019-01-19 10:35:30.999 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:35:31.005 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5b12b668, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1165b38, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4c12331b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7586beff, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b69e7d1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@815b41f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5542c4ed, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1573f9fc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6150c3ec, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@44c03695, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7e6f74c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@dd05255]
2019-01-19 10:35:31.017 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-19 10:35:31.019 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:35:31.020 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:35:31.026 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-19 10:35:31.031 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:35:31.038 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@4c178a76, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fa4c865, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3bd82cf5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@544fa968, org.springframework.test.context.transaction.TransactionalTestExecutionListener@247bddad, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d35dea7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7770f470, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5e5d171f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@24313fcc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7d20d0b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@77f1baf5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41a2befb]
2019-01-19 10:35:31.565 [main] INFO  com.yun.ProductTypeTest - Starting ProductTypeTest on USER-20181202BJ with PID 5116 (started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:35:31.565 [main] DEBUG com.yun.ProductTypeTest - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:35:31.566 [main] INFO  com.yun.ProductTypeTest - No active profile set, falling back to default profiles: default
2019-01-19 10:35:32.049 [main] INFO  o.s.w.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f5b5dc: startup date [Sat Jan 19 10:35:32 CST 2019]; root of context hierarchy
2019-01-19 10:35:32.187 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:35:35.526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@23f5b5dc: startup date [Sat Jan 19 10:35:32 CST 2019]; root of context hierarchy
2019-01-19 10:35:35.640 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:35:35.642 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:35:35.643 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:35:35.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:35:35.645 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:35:35.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:35:35.646 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:35:35.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:35:35.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:35:35.647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:35:35.648 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:35:35.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:35:35.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:35:35.652 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:35:35.653 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:35:35.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:35:35.659 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:35:35.719 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:35:35.720 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:35:35.813 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:35:36.426 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: ServletContext resource [/index.html]
2019-01-19 10:35:38.129 [main] INFO  com.yun.ProductTypeTest - Started ProductTypeTest in 6.964 seconds (JVM running for 8.146)
2019-01-19 10:35:39.307 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:35:39.366 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:35:39.398 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:35:39.398 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:35:39.407 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:35:39.408 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:35:39.410 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:35:39.411 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:35:39.412 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:35:39.422 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:35:39.423 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:35:39.425 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:35:39.426 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:35:39.435 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:35:39.437 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:35:39.440 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:35:39.441 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:35:39.441 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:35:39.452 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.YunEbStockApplicationTests], using SpringBootContextLoader
2019-01-19 10:35:39.453 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.YunEbStockApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:35:39.454 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.YunEbStockApplicationTests]: YunEbStockApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:35:39.460 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.YunEbStockApplicationTests
2019-01-19 10:35:39.466 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:35:39.470 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@39c85c1a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2b148329, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@62c72501, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c889805, org.springframework.test.context.transaction.TransactionalTestExecutionListener@77db3d02, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78d9f51b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@23ed382c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6bedd4e4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4570d7b6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@72b6832e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3850e90c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3d9f5016]
2019-01-19 10:35:40.063 [Thread-2] INFO  o.s.w.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@23f5b5dc: startup date [Sat Jan 19 10:35:32 CST 2019]; root of context hierarchy
2019-01-19 10:36:13.023 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.yun.ProductTypeTest], using SpringBootContextLoader
2019-01-19 10:36:13.037 [main] INFO  o.s.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.yun.ProductTypeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2019-01-19 10:36:13.039 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.yun.ProductTypeTest]: ProductTypeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2019-01-19 10:36:13.327 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.yun.YunEbStockApplication for test class com.yun.ProductTypeTest
2019-01-19 10:36:13.363 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2019-01-19 10:36:13.420 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5b239d7d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6572421, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6b81ce95, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2a798d51, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d763516, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@52bf72b5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@37afeb11, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@515aebb0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@dd8ba08, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@245b4bdc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6c64cb25, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ae5aa72]
2019-01-19 10:36:14.470 [main] INFO  com.yun.ProductTypeTest - Starting ProductTypeTest on USER-20181202BJ with PID 5104 (started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:36:14.471 [main] DEBUG com.yun.ProductTypeTest - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:36:14.471 [main] INFO  com.yun.ProductTypeTest - No active profile set, falling back to default profiles: default
2019-01-19 10:36:15.084 [main] INFO  o.s.w.context.support.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@58cbafc2: startup date [Sat Jan 19 10:36:15 CST 2019]; root of context hierarchy
2019-01-19 10:36:15.545 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:36:18.946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@58cbafc2: startup date [Sat Jan 19 10:36:15 CST 2019]; root of context hierarchy
2019-01-19 10:36:19.077 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:36:19.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:36:19.079 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:36:19.081 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:36:19.082 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:36:19.082 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:36:19.083 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:36:19.085 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:36:19.085 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:36:19.086 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:36:19.087 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:36:19.088 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:36:19.089 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:36:19.090 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:36:19.090 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:36:19.097 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:36:19.098 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:36:19.168 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:36:19.168 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:36:19.390 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:36:20.029 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: ServletContext resource [/index.html]
2019-01-19 10:36:20.640 [main] INFO  com.yun.ProductTypeTest - Started ProductTypeTest in 6.911 seconds (JVM running for 9.083)
2019-01-19 10:36:21.271 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:36:21.311 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:36:21.335 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:36:21.335 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:36:21.344 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:36:21.344 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:36:21.346 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:36:21.347 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:36:21.348 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:36:21.350 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:36:21.351 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:36:21.352 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:36:21.353 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:36:21.355 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:36:21.356 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:36:21.359 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:36:21.360 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:36:21.360 [main] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:36:21.370 [Thread-2] INFO  o.s.w.context.support.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@58cbafc2: startup date [Sat Jan 19 10:36:15 CST 2019]; root of context hierarchy
2019-01-19 10:37:03.707 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4448 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:37:03.711 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:37:03.711 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 10:37:04.061 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:37:04.217 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:37:04 CST 2019]; root of context hierarchy
2019-01-19 10:37:05.850 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 10:37:05.859 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 10:37:05.860 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 10:37:05.963 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 10:37:05.963 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1746 ms
2019-01-19 10:37:06.108 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 10:37:06.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 10:37:06.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 10:37:06.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 10:37:06.113 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 10:37:06.827 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:37:04 CST 2019]; root of context hierarchy
2019-01-19 10:37:06.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:37:06.882 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:37:06.882 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:37:06.883 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:37:06.883 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:37:06.884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:37:06.884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:37:06.884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:37:06.884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:37:06.884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:37:06.885 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:37:06.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:37:06.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:37:06.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:37:06.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:37:06.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:37:06.891 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:37:06.923 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:37:06.924 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:37:06.963 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:37:07.249 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 10:37:07.525 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 10:37:07.554 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 10:37:07.574 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 10:37:07.596 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 10:37:07.624 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 10:37:07.633 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.223 seconds (JVM running for 5.549)
2019-01-19 10:37:27.369 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 10:37:27.369 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 10:37:27.385 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2019-01-19 10:37:29.162 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:37:29.180 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:37:29.191 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:37:29.201 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:37:29.202 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:37:29.203 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:37:34.796 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:34.798 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:37:34.808 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:34.809 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:37:34.810 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:34.811 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:37:34.811 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:34.812 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:34.813 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:37:34.815 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:34.816 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:37:34.817 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:34.817 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:37:34.823 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:34.824 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:37:34.826 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:34.826 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:37:34.827 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:37:45.838 [http-nio-8080-exec-5] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:37:45.927 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:45.928 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:37:45.930 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:45.931 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:37:45.933 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:45.933 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:37:45.936 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:45.937 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:45.937 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:37:45.940 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:45.940 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:37:45.941 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:45.941 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:37:45.945 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:45.945 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:37:45.946 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:45.946 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:37:45.946 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:37:51.394 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:51.396 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:37:51.397 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:51.398 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:37:51.401 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:51.401 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:37:51.402 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:51.403 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:51.404 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:37:51.405 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:51.406 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:37:51.407 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:51.407 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:37:51.410 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:51.410 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:37:51.411 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:51.412 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:37:51.413 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:37:54.162 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductTypeDao.insertProductType - ==>  Preparing: insert into product_type(prod_type_name,parent_id) values(?,?)
2019-01-19 10:37:54.164 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductTypeDao.insertProductType - ==> Parameters: aaa(String), 39(Integer)
2019-01-19 10:37:54.262 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductTypeDao.insertProductType - <==    Updates: 1
2019-01-19 10:37:54.349 [http-nio-8080-exec-4] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:37:54.407 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.408 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:37:54.410 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.410 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:37:54.412 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.413 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:37:54.415 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:54.418 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.418 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:37:54.420 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:37:54.421 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:37:54.421 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.421 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:37:54.423 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.423 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:37:54.426 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ========>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:37:54.426 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ========> Parameters: 40(Integer)
2019-01-19 10:37:54.427 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <========      Total: 0
2019-01-19 10:37:54.427 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 1
2019-01-19 10:37:54.427 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:37:54.427 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:38:00.132 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:38:00.132 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 40(Integer)
2019-01-19 10:38:00.134 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.135 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 40(Integer)
2019-01-19 10:38:00.136 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 0
2019-01-19 10:38:00.137 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-19 10:38:00.140 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductTypeDao.deleteProductType - ==>  Preparing: delete from product_type where prod_type_id=?
2019-01-19 10:38:00.141 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductTypeDao.deleteProductType - ==> Parameters: 40(Integer)
2019-01-19 10:38:00.187 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductTypeDao.deleteProductType - <==    Updates: 1
2019-01-19 10:38:00.243 [http-nio-8080-exec-7] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:38:00.310 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.311 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:38:00.313 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.314 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:38:00.319 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.321 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:38:00.322 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:00.324 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.324 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:38:00.325 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:00.325 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:38:00.325 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.326 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:38:00.328 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:00.328 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:38:00.329 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:00.330 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:38:00.330 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:38:08.074 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:38:08.075 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ==> Parameters: 38(Integer)
2019-01-19 10:38:08.080 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:08.080 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:38:08.084 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:08.084 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:38:08.086 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:08.086 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:38:08.087 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <==      Total: 1
2019-01-19 10:38:09.908 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:09.909 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:38:09.911 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:09.912 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:38:09.915 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:09.915 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:38:09.917 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:09.919 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:09.919 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:38:09.923 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:09.923 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:38:09.923 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:09.924 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:38:09.927 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:09.927 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:38:09.928 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:09.929 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:38:09.929 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:38:11.498 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:38:11.499 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:38:11.501 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:38:11.510 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:38:11.511 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:38:11.513 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:38:12.962 [http-nio-8080-exec-2] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:38:13.026 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:13.026 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:38:13.031 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:13.031 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:38:13.033 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:13.034 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:38:13.036 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:13.036 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:13.036 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:38:13.037 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:13.038 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:38:13.039 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:13.039 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:38:13.042 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:13.042 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:38:13.044 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:13.045 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:38:13.045 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:38:13.791 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:38:13.791 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:38:13.793 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:38:13.798 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:38:13.798 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:38:13.800 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:38:26.091 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:26.092 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:38:26.094 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:26.095 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:38:26.098 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:26.098 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:38:26.100 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:26.101 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:26.102 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:38:26.103 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:26.103 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:38:26.104 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:26.105 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:38:26.107 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:38:26.108 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:38:26.110 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:38:26.110 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:38:26.110 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:39:53.557 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3708 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:39:53.584 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:39:53.638 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 10:39:54.369 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:39:54 CST 2019]; root of context hierarchy
2019-01-19 10:39:54.867 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:39:56.512 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 10:39:56.528 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 10:39:56.529 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 10:39:56.667 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 10:39:56.667 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2299 ms
2019-01-19 10:39:57.084 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 10:39:57.093 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 10:39:57.094 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 10:39:57.095 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 10:39:57.095 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 10:39:58.392 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:39:54 CST 2019]; root of context hierarchy
2019-01-19 10:39:58.457 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:39:58.458 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:39:58.458 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(javax.servlet.http.HttpServletRequest)
2019-01-19 10:39:58.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:39:58.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:39:58.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:39:58.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:39:58.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:39:58.461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:39:58.462 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:39:58.462 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:39:58.463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:39:58.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:39:58.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:39:58.464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:39:58.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:39:58.471 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:39:58.512 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:39:58.512 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:39:58.558 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:39:58.890 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 10:39:59.156 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 10:39:59.176 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 10:39:59.187 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 10:39:59.202 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 10:39:59.227 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 10:39:59.232 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 6.137 seconds (JVM running for 7.981)
2019-01-19 10:40:03.796 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 10:40:03.796 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 10:40:03.815 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019-01-19 10:40:04.116 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:40:04.137 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:40:04.148 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:40:04.159 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:40:04.159 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:40:04.160 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:40:11.758 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:40:11.758 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:40:11.761 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:40:11.767 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:40:11.768 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:40:11.769 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:40:16.800 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:40:16.800 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:40:16.802 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:40:16.808 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:40:16.808 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:40:16.811 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:40:32.884 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4220 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:40:32.888 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:40:32.889 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 10:40:33.270 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:40:33.375 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 10:40:33 CST 2019]; root of context hierarchy
2019-01-19 10:40:35.473 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 10:40:35.485 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 10:40:35.486 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 10:40:35.602 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 10:40:35.602 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 2227 ms
2019-01-19 10:40:35.801 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 10:40:35.807 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 10:40:35.808 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 10:40:35.808 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 10:40:35.808 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 10:40:36.839 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 10:40:33 CST 2019]; root of context hierarchy
2019-01-19 10:40:36.920 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:40:36.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(javax.servlet.http.HttpServletRequest)
2019-01-19 10:40:36.923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:40:36.924 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:40:36.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:40:36.925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:40:36.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:40:36.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:40:36.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:40:36.926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:40:36.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:40:36.927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:40:36.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:40:36.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:40:36.928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:40:36.934 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:40:36.935 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:40:36.988 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:40:36.988 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:40:37.045 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:40:37.473 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 10:40:37.939 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 10:40:37.965 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 10:40:37.981 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 10:40:38.013 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 10:40:38.196 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 10:40:38.202 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.609 seconds (JVM running for 8.733)
2019-01-19 10:40:54.318 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 10:40:54.318 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 10:40:54.343 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2019-01-19 10:40:56.657 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:40:56.678 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:40:56.688 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:40:56.700 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:40:56.701 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:40:56.702 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:40:59.410 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:40:59.412 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:40:59.416 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:40:59.424 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:40:59.425 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:40:59.426 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:41:18.615 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:41:18.616 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:41:18.617 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:41:18.621 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:41:18.621 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:41:18.622 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:41:39.077 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:41:39.078 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:41:39.080 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:41:39.084 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:41:39.085 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:41:39.087 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:41:45.141 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:41:45.141 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:41:45.145 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:41:45.146 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:41:45.149 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:41:45.149 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:41:45.151 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:41:45.153 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:41:45.153 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:41:45.154 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:41:45.155 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:41:45.156 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:41:45.156 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:41:45.158 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:41:45.158 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:41:45.159 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:41:45.160 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:41:45.160 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:41:46.959 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:41:46.960 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:41:46.962 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:41:46.973 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:41:46.974 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:41:46.976 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:41:58.309 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 3536 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:41:58.315 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:41:58.315 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 10:41:59.133 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:41:59.324 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 10:41:59 CST 2019]; root of context hierarchy
2019-01-19 10:42:01.072 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 10:42:01.084 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 10:42:01.086 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 10:42:01.207 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 10:42:01.207 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1883 ms
2019-01-19 10:42:01.405 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 10:42:01.412 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 10:42:01.413 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 10:42:01.414 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 10:42:01.414 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 10:42:02.445 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 10:41:59 CST 2019]; root of context hierarchy
2019-01-19 10:42:02.536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:42:02.540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:42:02.541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:42:02.543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:42:02.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:42:02.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:42:02.544 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:42:02.545 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:42:02.545 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:42:02.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:42:02.546 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:42:02.547 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:42:02.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:42:02.548 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:42:02.549 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:42:02.555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:42:02.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:42:02.615 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:42:02.615 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:42:02.679 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:42:03.094 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 10:42:03.589 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 10:42:03.615 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 10:42:03.629 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 10:42:03.647 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 10:42:03.839 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 10:42:03.845 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.952 seconds (JVM running for 8.035)
2019-01-19 10:42:06.317 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 10:42:06.317 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 10:42:06.343 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019-01-19 10:42:11.055 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:42:11.076 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:42:11.089 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:42:11.100 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:42:11.101 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:42:11.102 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:42:15.490 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:42:15.491 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:42:15.500 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:42:15.501 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:42:15.502 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:42:15.503 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:42:15.505 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:42:15.507 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:42:15.508 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:42:15.510 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:42:15.510 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:42:15.512 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:42:15.514 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:42:15.516 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:42:15.517 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:42:15.518 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:42:15.518 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:42:15.519 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:43:37.368 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:43:37.369 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:43:37.370 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:43:37.374 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:43:37.374 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:43:37.375 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:43:46.688 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:43:46.689 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:43:46.692 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:43:46.698 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:43:46.700 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:43:46.702 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:43:51.067 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:43:51.068 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:43:51.070 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:43:51.071 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:43:51.074 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:43:51.074 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:43:51.075 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:43:51.076 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:43:51.078 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:43:51.084 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:43:51.085 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:43:51.085 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:43:51.086 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:43:51.092 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:43:51.092 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:43:51.093 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:43:51.094 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:43:51.095 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:45:07.801 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:45:07.802 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:45:07.803 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:45:07.809 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:45:07.809 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:45:07.810 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:45:14.033 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:14.033 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:45:14.035 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:14.035 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:45:14.036 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:14.037 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:45:14.040 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:45:14.042 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:14.042 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:45:14.043 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:45:14.044 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:45:14.044 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:14.045 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:45:14.047 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:14.048 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:45:14.051 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:45:14.052 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:45:14.052 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:45:31.539 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:45:31.540 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:45:31.541 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:45:31.547 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:45:31.549 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:45:31.552 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:45:47.571 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:45:47.572 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:45:47.573 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:45:47.577 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:45:47.577 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:45:47.578 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:45:52.723 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:52.725 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:45:52.727 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:52.728 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:45:52.731 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:52.732 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:45:52.733 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:45:52.735 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:52.736 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:45:52.740 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:45:52.740 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:45:52.741 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:52.742 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:45:52.744 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:45:52.745 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:45:52.746 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:45:52.747 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:45:52.747 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:45:54.810 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:45:54.811 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:45:54.812 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:45:54.815 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:45:54.815 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:45:54.816 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:46:34.916 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:46:34.917 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:46:34.919 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:46:34.927 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:46:34.930 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:46:34.932 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:46:40.269 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:40.270 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:46:40.272 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:40.273 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:46:40.274 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:40.274 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:46:40.275 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:46:40.276 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:40.276 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:46:40.277 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:46:40.277 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:46:40.277 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:40.278 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:46:40.279 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:40.279 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:46:40.281 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:46:40.282 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:46:40.282 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:46:41.994 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:46:41.994 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:46:41.995 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:46:41.997 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:46:41.998 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:46:41.998 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:46:59.646 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:59.647 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:46:59.651 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:59.652 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:46:59.656 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:59.657 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:46:59.659 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:46:59.661 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:59.662 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:46:59.664 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:46:59.666 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:46:59.666 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:59.667 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:46:59.669 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:46:59.669 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:46:59.670 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:46:59.671 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:46:59.673 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:47:26.280 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:47:26.280 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:47:26.281 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:47:26.283 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:47:26.284 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:47:26.284 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:47:40.970 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1756 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 10:47:40.975 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 10:47:40.975 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 10:47:41.334 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:47:41 CST 2019]; root of context hierarchy
2019-01-19 10:47:41.353 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 10:47:43.057 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 10:47:43.067 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 10:47:43.067 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 10:47:43.167 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 10:47:43.168 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1834 ms
2019-01-19 10:47:43.304 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 10:47:43.309 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 10:47:43.310 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 10:47:43.310 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 10:47:43.310 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 10:47:44.033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 10:47:41 CST 2019]; root of context hierarchy
2019-01-19 10:47:44.084 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 10:47:44.086 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 10:47:44.087 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 10:47:44.088 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 10:47:44.088 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 10:47:44.088 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 10:47:44.089 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 10:47:44.089 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 10:47:44.089 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 10:47:44.089 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 10:47:44.090 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 10:47:44.090 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 10:47:44.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 10:47:44.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 10:47:44.091 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 10:47:44.095 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 10:47:44.096 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 10:47:44.128 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:47:44.129 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:47:44.165 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 10:47:44.460 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 10:47:44.712 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 10:47:44.732 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 10:47:44.744 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 10:47:44.759 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 10:47:44.777 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 10:47:44.782 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.178 seconds (JVM running for 5.348)
2019-01-19 10:48:17.014 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 10:48:17.014 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 10:48:17.034 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-19 10:48:18.420 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:48:18.439 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:48:18.451 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:48:18.461 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:48:18.462 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:48:18.463 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 10:48:23.281 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:23.282 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:48:23.290 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:23.290 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:48:23.292 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:23.293 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:48:23.294 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:48:23.295 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:23.295 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:48:23.296 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:48:23.298 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:48:23.299 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:23.300 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:48:23.302 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:23.304 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:48:23.308 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:48:23.309 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:48:23.309 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:48:25.184 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id) values(?,?,?)
2019-01-19 10:48:25.186 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: aaaa(String), (String), 30(Integer)
2019-01-19 10:48:25.221 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-19 10:48:25.317 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:48:25.318 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:48:25.319 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:48:25.323 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:48:25.324 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:48:25.342 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:48:25.343 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:48:25.345 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:25.346 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:48:25.347 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:48:25.348 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:48:25.348 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:48:31.026 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:48:31.027 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:48:31.030 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:48:31.055 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "page.pageNo-1"] with root cause
java.lang.NumberFormatException: For input string: "page.pageNo-1"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.yun.product.controller.ProductController.productList(ProductController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 10:48:34.046 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:48:34.047 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:48:34.049 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:48:34.053 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "page.pageNo-1"] with root cause
java.lang.NumberFormatException: For input string: "page.pageNo-1"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.yun.product.controller.ProductController.productList(ProductController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 10:48:36.387 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:48:36.391 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:48:36.393 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:48:36.400 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:48:36.402 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:48:36.408 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:48:36.409 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:48:36.414 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:48:36.414 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:48:36.415 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:48:36.416 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:48:36.417 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:48:38.027 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:48:38.028 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:48:38.029 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:48:38.033 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "page.pageCnt"] with root cause
java.lang.NumberFormatException: For input string: "page.pageCnt"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.yun.product.controller.ProductController.productList(ProductController.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 10:52:17.681 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:52:17.682 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:52:17.684 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:52:17.692 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:52:17.693 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:52:17.694 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:52:17.694 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:52:17.696 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:52:17.696 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:52:17.697 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:52:17.697 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:52:17.698 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:19.677 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:19.678 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:19.680 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:19.684 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:19.685 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:19.686 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:19.687 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:19.690 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:19.691 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:19.693 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:19.693 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:19.693 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:22.889 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:22.890 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:22.892 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:22.897 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:22.898 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:22.899 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:22.900 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:22.903 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:22.904 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:22.905 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:22.906 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:22.906 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:23.769 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:23.770 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:23.772 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:23.778 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:23.779 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:23.782 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:23.783 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:23.784 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:23.785 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:23.786 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:23.786 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:23.787 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:24.712 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:24.714 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:24.715 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:24.718 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:24.720 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:24.722 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:24.722 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:24.724 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:24.724 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:24.726 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:24.727 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:24.728 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:43.371 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:43.372 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:43.374 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:43.377 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:43.378 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:43.379 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:43.380 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:43.382 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:43.382 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:43.384 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:43.384 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:43.384 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:44.223 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:44.224 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:44.227 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:44.233 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:44.234 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:44.236 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:44.237 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:44.240 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:44.241 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:44.243 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:44.243 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:44.243 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:45.040 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:45.041 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:45.043 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:45.050 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:45.051 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:45.053 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:45.053 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:45.055 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:45.055 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:45.056 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:45.056 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:45.056 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:45.519 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:45.519 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:45.521 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:45.532 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:45.533 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:45.534 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:45.534 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:45.535 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:45.536 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:45.537 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:45.538 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:45.538 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:54:45.977 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:54:45.978 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:54:45.980 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:54:45.984 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:54:45.984 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:54:45.986 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:54:45.986 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:54:45.988 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:54:45.988 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:54:45.989 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:54:45.989 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:54:45.990 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:55:09.671 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:55:09.672 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:55:09.673 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:55:09.676 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:55:09.676 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:55:09.678 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:55:09.678 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:55:09.680 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:55:09.681 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:55:09.682 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:55:09.682 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:55:09.683 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:55:18.951 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:55:18.952 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:55:18.953 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:55:18.958 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:55:18.958 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:55:18.960 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:55:18.960 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:55:18.962 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:55:18.963 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:55:18.964 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:55:18.965 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:55:18.965 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:55:23.213 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:55:23.213 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:55:23.214 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:55:23.218 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:55:23.219 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:55:23.220 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:55:23.220 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:55:23.222 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:55:23.222 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:55:23.223 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:55:23.224 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:55:23.224 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:55:55.305 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:55:55.306 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:55:55.308 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:55:55.313 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:55:55.313 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:55:55.315 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:55:55.315 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:55:55.317 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:55:55.317 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:55:55.318 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:55:55.319 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:55:55.319 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:55:56.944 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:55:56.945 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:55:56.947 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:55:56.952 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:55:56.953 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:55:56.956 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:55:56.958 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:55:56.962 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:55:56.962 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:55:56.963 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:55:56.964 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:55:56.964 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:56:03.291 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:56:03.292 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:56:03.293 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:56:03.295 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:56:03.296 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:56:03.297 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:56:03.297 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:56:03.299 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:03.299 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:56:03.300 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:03.300 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:56:03.300 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:56:27.620 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:56:27.621 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:56:27.623 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:56:27.626 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:56:27.626 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:56:27.628 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:56:27.629 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:56:27.630 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:27.631 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:56:27.632 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:27.632 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:56:27.632 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 10:56:54.916 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:54.917 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:56:54.918 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:54.919 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:56:54.921 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:54.921 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:56:54.922 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:54.922 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:54.922 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:56:54.923 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:54.923 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:56:54.924 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:54.924 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:56:54.925 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:54.925 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:56:54.926 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:54.927 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:56:54.927 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:56:57.113 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id) values(?,?,?)
2019-01-19 10:56:57.113 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: fsdfds(String), 343(String), 31(Integer)
2019-01-19 10:56:57.160 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-19 10:56:57.249 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:56:57.249 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:56:57.251 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:56:57.256 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:56:57.257 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:56:57.260 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:56:57.261 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:56:57.263 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:57.263 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:56:57.264 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:57.265 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:56:57.265 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:56:57.265 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:56:57.267 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:56:57.267 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:56:57.268 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:56:57.268 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:56:57.268 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 2
2019-01-19 10:58:38.875 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 10:58:38.939 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:38.940 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:58:38.941 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:38.941 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:58:38.943 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:38.943 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:38.944 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:38.945 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:38.945 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:38.946 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:38.947 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:58:38.947 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:38.948 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:58:38.949 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:38.949 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:58:38.951 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:38.951 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:58:38.951 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:58:40.517 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:58:40.518 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:58:40.520 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:58:40.524 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:58:40.524 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:58:40.526 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:58:40.526 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:58:40.527 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:40.528 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:40.528 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:40.529 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:58:40.529 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:58:40.529 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:58:40.531 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:40.531 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:40.532 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:40.532 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:58:40.533 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 2
2019-01-19 10:58:43.419 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:43.419 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:58:43.421 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:43.421 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:58:43.423 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:43.424 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:43.425 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:43.425 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:43.425 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:43.426 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:43.427 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:58:43.427 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:43.427 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:58:43.429 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:43.429 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:58:43.430 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:43.430 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:58:43.430 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:58:46.537 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:46.538 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:58:46.541 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:46.541 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:58:46.544 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:46.544 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:46.546 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:46.547 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:46.548 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:46.550 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:46.550 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:58:46.551 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:46.551 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:58:46.553 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:46.553 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:58:46.554 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:46.555 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:58:46.555 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:58:48.602 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:48.603 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:58:48.607 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:48.607 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:58:48.610 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:48.611 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:48.613 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:48.613 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:48.614 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:48.615 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:48.615 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:58:48.616 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:48.616 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:58:48.620 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:48.620 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:58:48.624 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:48.624 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:58:48.624 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:58:51.810 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:51.810 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:58:51.812 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:51.812 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:58:51.813 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:51.815 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:51.817 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:51.818 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:51.819 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:51.820 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:51.821 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:58:51.822 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:51.823 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:58:51.825 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:51.826 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:58:51.832 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:51.832 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:58:51.833 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:58:58.312 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:58.313 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:58:58.314 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:58.315 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:58:58.316 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:58.316 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:58:58.317 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:58.317 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:58.317 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:58:58.318 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:58.318 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:58:58.319 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:58.319 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:58:58.320 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:58:58.320 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:58:58.321 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:58:58.321 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:58:58.321 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:59:00.651 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id) values(?,?,?)
2019-01-19 10:59:00.652 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: dgdf(String), (String), 39(Integer)
2019-01-19 10:59:00.674 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-19 10:59:00.739 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:59:00.740 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:59:00.742 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:59:00.744 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:59:00.744 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:59:00.744 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:00.745 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:59:00.746 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:00.746 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:59:00.747 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:00.747 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:00.747 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:00.748 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:59:00.748 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:00.749 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:00.749 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:00.750 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:00.750 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:00.750 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 10:59:00.751 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:00.751 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:59:00.752 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:00.752 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:00.752 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 10:59:07.315 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:07.315 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 10:59:07.316 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:07.317 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 10:59:07.317 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:07.318 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:59:07.319 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:07.319 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:07.319 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:07.320 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:07.320 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 10:59:07.321 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:07.321 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 10:59:07.322 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:07.322 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:59:07.323 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:07.323 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 10:59:07.323 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 10:59:09.517 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id) values(?,?,?)
2019-01-19 10:59:09.520 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: 342432(String), 345345(String), 31(Integer)
2019-01-19 10:59:09.552 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-19 10:59:09.608 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:59:09.609 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:59:09.610 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:59:09.614 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:59:09.614 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:59:09.615 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:09.616 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:59:09.617 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:09.617 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:59:09.619 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:09.619 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:09.619 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:09.620 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:59:09.621 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:09.621 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:09.622 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:09.622 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:09.623 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:09.623 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 10:59:09.624 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:09.624 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:59:09.624 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:09.624 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:09.625 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 10:59:47.561 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:59:47.561 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:59:47.562 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:59:47.564 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:59:47.564 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:59:47.565 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:47.565 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:59:47.566 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:47.566 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:59:47.567 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:47.567 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:47.567 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:47.567 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:59:47.568 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:47.568 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:47.569 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:47.569 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:47.569 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:47.569 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 10:59:47.570 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:47.570 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:59:47.571 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:47.571 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:47.571 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 10:59:50.884 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:59:50.885 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:59:50.887 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:59:50.892 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:59:50.893 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:59:50.895 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:50.895 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:59:50.898 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:50.898 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:59:50.900 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:50.900 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:50.901 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:50.902 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:59:50.903 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:50.903 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:50.904 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:50.904 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:50.905 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:50.905 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 10:59:50.906 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:50.907 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:59:50.908 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:50.908 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:50.908 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 10:59:57.300 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:59:57.300 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:59:57.301 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:59:57.303 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:59:57.303 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 10:59:57.304 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:57.304 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 10:59:57.305 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:57.306 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 10:59:57.307 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:57.307 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:57.307 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:57.307 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:59:57.308 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:57.309 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:57.309 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:57.310 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:57.310 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:57.310 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 10:59:57.311 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:57.311 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 10:59:57.312 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:57.312 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:57.312 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 10:59:58.316 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 10:59:58.316 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 10:59:58.318 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 10:59:58.320 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 10:59:58.321 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 3(Integer), 3(Integer)
2019-01-19 10:59:58.322 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 10:59:58.322 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 10:59:58.324 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 10:59:58.325 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 10:59:58.327 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 10:59:58.327 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 10:59:58.327 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 11:00:00.007 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:00.008 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:00.009 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:00.013 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:00.013 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:00:00.015 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:00.016 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:00:00.017 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:00.018 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:00:00.020 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:00.020 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:00.021 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:00.021 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:00.023 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:00.023 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:00.023 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:00.024 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:00.024 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:00.024 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:00:00.025 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:00.025 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:00:00.026 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:00.026 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:00.026 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 11:00:01.046 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:01.047 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:01.049 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:01.054 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:01.054 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:00:01.056 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:01.057 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:00:01.059 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:01.060 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:00:01.062 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:01.062 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:01.063 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:01.064 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:01.067 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:01.067 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:01.069 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:01.070 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:01.070 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:01.071 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:00:01.072 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:01.073 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:00:01.073 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:01.074 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:01.074 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 11:00:02.660 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:02.661 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:02.662 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:02.665 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:02.665 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 3(Integer), 3(Integer)
2019-01-19 11:00:02.667 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:02.667 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:02.668 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:02.669 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:02.670 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:02.670 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:02.670 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 11:00:04.603 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:04.604 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:04.606 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:04.611 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:04.612 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:00:04.614 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:04.614 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:00:04.615 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:04.615 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:00:04.617 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:04.617 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:04.617 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:04.617 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:04.618 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:04.619 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:04.620 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:04.620 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:04.620 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:04.621 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:00:04.622 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:04.622 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:00:04.623 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:04.623 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:04.623 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 11:00:06.936 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:06.937 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:06.938 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:06.947 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:06.947 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:00:06.951 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:06.952 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:00:06.953 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:06.953 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:00:06.955 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:06.955 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:06.956 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:06.956 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:06.957 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:06.957 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:06.958 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:06.958 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:06.958 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:06.959 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:00:06.960 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:06.960 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:00:06.961 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:06.961 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:06.961 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 11:00:15.129 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2848 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 11:00:15.133 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 11:00:15.133 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 11:00:15.516 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 11:00:15.764 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 11:00:15 CST 2019]; root of context hierarchy
2019-01-19 11:00:17.138 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 11:00:17.148 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 11:00:17.149 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 11:00:17.251 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 11:00:17.251 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1488 ms
2019-01-19 11:00:17.388 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 11:00:17.392 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 11:00:17.393 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 11:00:17.393 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 11:00:17.393 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 11:00:18.170 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 11:00:15 CST 2019]; root of context hierarchy
2019-01-19 11:00:18.232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 11:00:18.233 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 11:00:18.234 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 11:00:18.235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 11:00:18.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 11:00:18.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 11:00:18.236 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 11:00:18.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 11:00:18.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 11:00:18.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 11:00:18.237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 11:00:18.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 11:00:18.238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 11:00:18.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 11:00:18.239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 11:00:18.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 11:00:18.244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 11:00:18.278 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 11:00:18.278 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 11:00:18.318 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 11:00:18.625 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 11:00:18.886 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 11:00:18.904 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 11:00:18.915 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 11:00:18.928 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 11:00:18.948 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 11:00:18.954 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.323 seconds (JVM running for 5.477)
2019-01-19 11:00:55.477 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 11:00:55.477 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 11:00:55.495 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-19 11:00:55.786 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:55.805 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:55.816 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:55.827 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:55.828 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:00:55.831 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:55.831 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:00:55.833 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:55.833 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:00:55.834 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:55.835 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:55.836 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:55.836 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:55.838 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:55.838 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:55.839 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:55.839 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:55.840 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:55.840 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:00:55.842 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:55.842 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:00:55.844 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:55.844 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:55.844 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 11:00:58.517 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:00:58.518 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:00:58.522 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:00:58.525 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:00:58.525 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 3(Integer), 3(Integer)
2019-01-19 11:00:58.527 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:00:58.527 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:00:58.530 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:00:58.532 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:00:58.534 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:00:58.534 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:00:58.535 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 11:01:00.327 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:01:00.329 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:01:00.331 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:01:00.345 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:01:00.346 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:01:00.353 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:00.354 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:01:00.357 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:00.358 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:01:00.360 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:00.361 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:00.361 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:00.362 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:01:00.363 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:00.364 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:01:00.365 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:00.366 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:00.366 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:00.367 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:01:00.368 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:00.369 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:01:00.369 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:00.370 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:00.370 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 11:01:05.643 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:01:05.644 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:01:05.645 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:01:05.653 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:01:05.654 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 3(Integer), 3(Integer)
2019-01-19 11:01:05.656 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:05.658 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:01:05.662 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:05.662 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:01:05.663 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:05.664 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:05.664 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 11:01:07.681 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 11:01:07.682 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 11:01:07.685 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 11:01:07.692 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 11:01:07.693 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 11:01:07.696 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:07.698 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 11:01:07.702 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:07.702 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 11:01:07.704 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:07.704 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:07.705 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:07.705 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 11:01:07.707 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:07.708 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 11:01:07.709 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:07.709 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:07.710 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 11:01:07.710 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 11:01:07.712 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 11:01:07.712 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 11:01:07.713 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 11:01:07.713 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 11:01:07.714 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 16:12:46.787 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:12:46.787 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:12:46.789 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:12:46.791 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:12:46.792 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 16:12:46.793 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:46.793 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:12:46.795 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:46.795 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:12:46.796 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:46.796 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:46.796 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:46.797 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:12:46.798 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:46.799 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:12:46.800 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:46.800 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:46.800 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:46.801 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:12:46.803 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:46.803 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:12:46.805 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:46.806 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:46.806 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 16:12:50.323 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:12:50.323 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:12:50.324 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:12:50.326 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:12:50.327 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 3(Integer)
2019-01-19 16:12:50.329 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:50.329 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:12:50.330 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:50.330 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:12:50.331 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:50.331 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:50.332 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:50.333 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:12:50.334 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:50.335 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:12:50.336 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:50.337 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:50.337 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:50.338 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:12:50.339 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:50.339 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:12:50.340 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:50.340 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:50.340 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 3
2019-01-19 16:12:53.446 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:12:53.446 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:12:53.449 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:12:53.452 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:12:53.454 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 3(Integer), 3(Integer)
2019-01-19 16:12:53.455 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:12:53.456 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:12:53.457 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:12:53.457 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:12:53.457 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:12:53.458 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:12:53.458 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 16:13:01.775 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5356 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:13:01.779 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:13:01.780 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:13:02.059 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:13:02.368 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:13:02 CST 2019]; root of context hierarchy
2019-01-19 16:13:03.797 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:13:03.807 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:13:03.808 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:13:03.907 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:13:03.908 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1540 ms
2019-01-19 16:13:04.046 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:13:04.051 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:13:04.052 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:13:04.052 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:13:04.052 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:13:04.820 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:13:02 CST 2019]; root of context hierarchy
2019-01-19 16:13:04.875 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 16:13:04.876 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:13:04.876 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:13:04.878 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:13:04.878 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:13:04.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:13:04.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:13:04.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:13:04.879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:13:04.880 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:13:04.880 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:13:04.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:13:04.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:13:04.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:13:04.881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:13:04.886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:13:04.887 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:13:04.921 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:13:04.922 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:13:04.962 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:13:05.258 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:13:05.510 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:13:05.528 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:13:05.540 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:13:05.553 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:13:05.570 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:13:05.574 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.244 seconds (JVM running for 5.371)
2019-01-19 16:13:14.574 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:13:14.574 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:13:14.592 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-19 16:13:16.355 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:13:16.374 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:13:16.385 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:13:16.395 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:13:16.396 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:13:16.398 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:13:16.399 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:13:16.400 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:13:16.401 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:13:16.402 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:13:16.402 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:13:16.403 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:13:16.403 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:13:16.405 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:13:16.405 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:13:16.406 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:13:16.406 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:13:16.407 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:13:16.407 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:13:16.409 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:13:16.409 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:13:16.411 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:13:16.411 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:13:16.412 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:17:08.222 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:17:08.224 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:17:08.226 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:17:08.232 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:17:08.234 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:17:08.237 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:17:08.238 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:17:08.242 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:17:08.243 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:17:08.245 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:17:08.247 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:17:08.248 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:17:08.249 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:17:08.253 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:17:08.253 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:17:08.255 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:17:08.256 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:17:08.258 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:17:08.258 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:17:08.263 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:17:08.266 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:17:08.270 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:17:08.271 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:17:08.272 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:18:03.928 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:18:03.930 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:18:03.933 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:18:03.939 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:18:03.940 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:18:03.942 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:03.943 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:18:03.946 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:03.948 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:18:03.950 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:03.951 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:03.952 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:03.953 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:18:03.955 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:03.955 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:18:03.956 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:03.957 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:03.957 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:03.958 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:18:03.959 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:03.959 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:18:03.960 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:03.960 [http-nio-8080-exec-8] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:03.961 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:18:37.324 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:18:37.326 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:18:37.328 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:18:37.335 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:18:37.336 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:18:37.339 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:37.340 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:18:37.344 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:37.344 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:18:37.346 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:37.346 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:37.347 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:37.347 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:18:37.348 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:37.349 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:18:37.350 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:37.350 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:37.350 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:37.351 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:18:37.352 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:37.352 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:18:37.353 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:37.354 [http-nio-8080-exec-5] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:37.356 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:18:57.801 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:18:57.802 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:18:57.804 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:18:57.808 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:18:57.809 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:18:57.811 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:57.812 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:18:57.813 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:57.814 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:18:57.815 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:57.816 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:57.816 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:57.817 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:18:57.819 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:57.820 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:18:57.823 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:57.823 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:57.825 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:18:57.826 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:18:57.828 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:18:57.829 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:18:57.830 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:18:57.831 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:18:57.832 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:22:57.654 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5896 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:22:57.659 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:22:57.659 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:22:58.165 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:22:58 CST 2019]; root of context hierarchy
2019-01-19 16:22:58.198 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:22:59.681 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:22:59.691 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:22:59.692 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:22:59.796 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:22:59.796 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1632 ms
2019-01-19 16:22:59.947 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:22:59.952 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:22:59.952 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:22:59.953 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:22:59.953 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:23:00.658 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:22:58 CST 2019]; root of context hierarchy
2019-01-19 16:23:00.710 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:23:00.712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:23:00.713 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 16:23:00.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:23:00.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:23:00.714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:23:00.715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:23:00.715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:23:00.715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:23:00.715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:23:00.716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:23:00.716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:23:00.717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:23:00.717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:23:00.717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:23:00.721 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:23:00.722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:23:00.754 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:23:00.754 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:23:00.803 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:23:01.144 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:23:01.369 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:23:01.388 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:23:01.398 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:23:01.412 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:23:01.428 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:23:01.433 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.227 seconds (JVM running for 5.36)
2019-01-19 16:23:05.711 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:23:05.711 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:23:05.728 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2019-01-19 16:23:06.022 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:23:06.040 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:23:06.050 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:23:06.059 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:23:06.060 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:23:06.062 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:23:06.063 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:23:06.064 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:23:06.065 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:23:06.066 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:23:06.066 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:23:06.067 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:23:06.067 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:23:06.069 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:23:06.070 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:23:06.071 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:23:06.071 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:23:06.072 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:23:06.072 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:23:06.074 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:23:06.074 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:23:06.076 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:23:06.076 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:23:06.077 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:23:52.018 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:23:52.018 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:23:52.020 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:23:52.022 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:23:52.023 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:23:52.025 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:23:52.025 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:23:52.027 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:23:52.028 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:23:52.029 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:23:52.030 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:23:52.030 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:23:52.031 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:23:52.032 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:23:52.033 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:23:52.034 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:23:52.035 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:23:52.035 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:23:52.035 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:23:52.037 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:23:52.038 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:23:52.041 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:23:52.041 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:23:52.042 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:24:41.144 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 2496 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:24:41.148 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:24:41.149 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:24:41.444 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:24:41.857 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:24:41 CST 2019]; root of context hierarchy
2019-01-19 16:24:43.262 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:24:43.273 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:24:43.274 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:24:43.388 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:24:43.389 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1533 ms
2019-01-19 16:24:43.552 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:24:43.558 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:24:43.559 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:24:43.559 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:24:43.559 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:24:44.389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:24:41 CST 2019]; root of context hierarchy
2019-01-19 16:24:44.447 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String)
2019-01-19 16:24:44.448 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:24:44.448 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:24:44.450 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:24:44.450 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:24:44.450 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:24:44.450 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:24:44.451 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:24:44.451 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:24:44.451 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:24:44.452 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:24:44.453 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:24:44.453 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:24:44.453 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:24:44.454 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:24:44.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:24:44.460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:24:44.496 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:24:44.496 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:24:44.536 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:24:44.877 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:24:45.106 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:24:45.125 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:24:45.136 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:24:45.149 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:24:45.169 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:24:45.174 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.589 seconds (JVM running for 5.746)
2019-01-19 16:24:46.793 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:24:46.793 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:24:46.813 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2019-01-19 16:24:49.079 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:24:49.098 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:24:49.107 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:24:49.117 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:24:49.118 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:24:49.120 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:24:49.121 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:24:49.122 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:24:49.123 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:24:49.124 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:24:49.124 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:24:49.125 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:24:49.125 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:24:49.127 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:24:49.127 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:24:49.128 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:24:49.129 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:24:49.129 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:24:49.129 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:24:49.131 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:24:49.132 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:24:49.133 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:24:49.133 [http-nio-8080-exec-7] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:24:49.134 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:25:17.568 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:25:17.569 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:25:17.572 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:25:17.577 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:25:17.577 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:25:17.580 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:25:17.581 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:25:17.583 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:25:17.584 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:25:17.586 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:25:17.586 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:25:17.587 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:25:17.587 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:25:17.589 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:25:17.589 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:25:17.590 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:25:17.591 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:25:17.592 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:25:17.592 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:25:17.594 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:25:17.595 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:25:17.598 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:25:17.598 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:25:17.599 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:27:34.695 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product where 1=1
2019-01-19 16:27:34.699 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:27:34.703 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:27:34.706 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product where 1=1 order by prod_id limit ?,?
2019-01-19 16:27:34.707 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:27:34.708 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:27:34.708 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 30(Integer)
2019-01-19 16:27:34.711 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:27:34.711 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:27:34.713 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:27:34.713 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:27:34.714 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:27:34.714 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 31(Integer)
2019-01-19 16:27:34.717 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:27:34.718 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:27:34.719 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:27:34.719 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:27:34.720 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.prod_type_id=? 
2019-01-19 16:27:34.720 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - ====> Parameters: 39(Integer)
2019-01-19 16:27:34.722 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:27:34.722 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:27:34.723 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:27:34.723 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeById - <====      Total: 1
2019-01-19 16:27:34.724 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:44:54.002 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5720 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:44:54.006 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:44:54.007 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:44:54.328 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:44:54.740 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:44:54 CST 2019]; root of context hierarchy
2019-01-19 16:44:56.145 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:44:56.155 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:44:56.156 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:44:56.255 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:44:56.256 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1516 ms
2019-01-19 16:44:56.397 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:44:56.402 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:44:56.402 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:44:56.403 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:44:56.403 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:44:57.162 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:44:54 CST 2019]; root of context hierarchy
2019-01-19 16:44:57.214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-19 16:44:57.215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:44:57.216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:44:57.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:44:57.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:44:57.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:44:57.217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:44:57.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:44:57.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:44:57.218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:44:57.219 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:44:57.220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:44:57.220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:44:57.220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:44:57.221 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:44:57.226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:44:57.227 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:44:57.259 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:44:57.259 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:44:57.296 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:44:57.580 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:44:57.835 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:44:57.996 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:44:58.013 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:44:58.026 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:44:58.044 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:44:58.049 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.51 seconds (JVM running for 5.723)
2019-01-19 16:45:03.605 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:45:03.605 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:45:03.623 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019-01-19 16:45:05.485 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:45:05.504 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:45:05.560 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:45:05.592 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:204)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:115)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:71)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$2095566d.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:46:43.889 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5380 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:46:43.892 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:46:43.893 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:46:44.130 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:46:44.357 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:46:44 CST 2019]; root of context hierarchy
2019-01-19 16:46:45.854 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:46:45.864 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:46:45.865 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:46:45.961 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:46:45.962 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1605 ms
2019-01-19 16:46:46.103 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:46:46.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:46:46.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:46:46.109 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:46:46.110 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:46:46.918 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:46:44 CST 2019]; root of context hierarchy
2019-01-19 16:46:46.977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-19 16:46:46.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:46:46.978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:46:46.979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:46:46.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:46:46.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:46:46.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:46:46.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:46:46.980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:46:46.981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:46:46.981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:46:46.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:46:46.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:46:46.982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:46:46.983 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:46:46.987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:46:46.988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:46:47.036 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:46:47.036 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:46:47.081 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:46:47.408 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:46:47.668 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:46:47.687 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:46:47.697 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:46:47.711 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:46:47.728 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:46:47.733 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.335 seconds (JVM running for 5.48)
2019-01-19 16:46:52.055 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:46:52.056 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:46:52.072 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms
2019-01-19 16:46:52.400 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:46:52.418 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:46:52.430 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:46:52.449 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:204)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:115)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:71)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$de16a9b1.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:46:54.106 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:46:54.109 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:46:54.113 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:46:54.121 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:204)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:115)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:71)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$de16a9b1.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:46:56.230 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:46:56.231 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:46:56.235 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:46:56.247 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:204)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:115)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:71)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$de16a9b1.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:46:57.274 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:46:57.275 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:46:57.279 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:46:57.292 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:204)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:115)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:71)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$de16a9b1.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:47:25.674 [http-nio-8080-exec-1] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 16:47:25.754 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:25.755 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 16:47:25.760 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:25.761 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 16:47:25.768 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:25.769 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:47:25.770 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:47:25.771 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:25.772 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:47:25.774 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:47:25.774 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 16:47:25.775 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:25.776 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 16:47:25.778 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:25.778 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:47:25.779 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:47:25.781 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 16:47:25.782 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 16:47:28.542 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-19 16:47:28.544 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-19 16:47:28.553 [http-nio-8080-exec-3] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 5
2019-01-19 16:47:30.585 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 16:47:30.666 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:30.667 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 16:47:30.670 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:30.671 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 16:47:30.674 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:30.675 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 16:47:30.676 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:47:30.678 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:30.678 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 16:47:30.680 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:47:30.681 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 16:47:30.683 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:30.684 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 16:47:30.686 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 16:47:30.687 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 16:47:30.688 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 16:47:30.688 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 16:47:30.689 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 16:47:31.791 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:47:31.792 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:47:31.794 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:47:31.800 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]] with root cause
org.apache.ibatis.binding.BindingException: Parameter 'prodName' not found. Available parameters are [param, page, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:204)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:115)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2685)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductByParam(ProductService.java:71)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$de16a9b1.findProductByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:50:16.444 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 1340 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:50:16.448 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:50:16.448 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:50:16.767 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:50:16.940 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:50:16 CST 2019]; root of context hierarchy
2019-01-19 16:50:18.332 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:50:18.341 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:50:18.342 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:50:18.444 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:50:18.445 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1504 ms
2019-01-19 16:50:18.583 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:50:18.588 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:50:18.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:50:18.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:50:18.589 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:50:19.297 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a28ffa4: startup date [Sat Jan 19 16:50:16 CST 2019]; root of context hierarchy
2019-01-19 16:50:19.349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-19 16:50:19.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:50:19.350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:50:19.351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:50:19.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:50:19.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:50:19.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:50:19.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:50:19.352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:50:19.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:50:19.353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:50:19.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:50:19.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:50:19.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:50:19.354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:50:19.359 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:50:19.360 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:50:19.395 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:50:19.396 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:50:19.432 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:50:19.721 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:50:19.977 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:50:19.995 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:50:20.006 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:50:20.019 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:50:20.037 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:50:20.041 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 4.249 seconds (JVM running for 5.466)
2019-01-19 16:50:48.931 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:50:48.931 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:50:48.949 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 17 ms
2019-01-19 16:50:50.949 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'param.prodName!=null'. Cause: org.apache.ibatis.ognl.OgnlException: source is null for getProperty(null, "prodName")] with root cause
org.apache.ibatis.ognl.OgnlException: source is null for getProperty(null, "prodName")
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2678)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTChain.getValueBody(ASTChain.java:141)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductRowByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductRowByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductRowByParam(ProductService.java:76)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$93a8a373.findProductRowByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:54:13.396 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 4972 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:54:13.417 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:54:13.417 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:54:13.896 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:54:13.984 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 16:54:13 CST 2019]; root of context hierarchy
2019-01-19 16:54:15.818 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:54:15.830 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:54:15.832 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:54:15.956 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:54:15.957 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1973 ms
2019-01-19 16:54:16.163 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:54:16.171 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:54:16.172 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:54:16.172 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:54:16.172 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:54:17.189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 16:54:13 CST 2019]; root of context hierarchy
2019-01-19 16:54:17.272 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-19 16:54:17.274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:54:17.275 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:54:17.279 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:54:17.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:54:17.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:54:17.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:54:17.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:54:17.280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:54:17.281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:54:17.281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:54:17.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:54:17.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:54:17.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:54:17.282 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:54:17.287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:54:17.288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:54:17.348 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:54:17.348 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:54:17.410 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:54:17.887 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:54:18.343 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:54:18.366 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:54:18.380 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:54:18.397 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:54:18.422 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:54:18.428 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.506 seconds (JVM running for 6.988)
2019-01-19 16:54:25.393 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:54:25.394 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:54:25.420 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019-01-19 16:55:13.003 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'param.prodName!=null'. Cause: org.apache.ibatis.ognl.OgnlException: source is null for getProperty(null, "prodName")] with root cause
org.apache.ibatis.ognl.OgnlException: source is null for getProperty(null, "prodName")
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2678)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTChain.getValueBody(ASTChain.java:141)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy59.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy71.findProductRowByParam(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy72.findProductRowByParam(Unknown Source)
	at com.yun.product.service.ProductService.findProductRowByParam(ProductService.java:76)
	at com.yun.product.service.ProductService$$FastClassBySpringCGLIB$$10a8eb80.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.yun.product.service.ProductService$$EnhancerBySpringCGLIB$$7bf0ca3c.findProductRowByParam(<generated>)
	at com.yun.product.controller.ProductController.productList(ProductController.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 16:56:40.727 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 5752 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:56:40.731 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:56:40.732 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:56:40.958 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:56:44.924 [main] INFO  com.yun.YunEbStockApplication - Starting YunEbStockApplication on USER-20181202BJ with PID 220 (E:\workspace\yun-eb-stock\target\classes started by Administrator in E:\workspace\yun-eb-stock)
2019-01-19 16:56:44.931 [main] DEBUG com.yun.YunEbStockApplication - Running with Spring Boot v1.5.9.RELEASE, Spring v4.3.13.RELEASE
2019-01-19 16:56:44.931 [main] INFO  com.yun.YunEbStockApplication - No active profile set, falling back to default profiles: default
2019-01-19 16:56:45.276 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.3.6.Final
2019-01-19 16:56:45.391 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 16:56:45 CST 2019]; root of context hierarchy
2019-01-19 16:56:47.186 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat initialized with port(s): 8080 (http)
2019-01-19 16:56:47.198 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2019-01-19 16:56:47.200 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23
2019-01-19 16:56:47.322 [localhost-startStop-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2019-01-19 16:56:47.323 [localhost-startStop-1] INFO  org.springframework.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 1931 ms
2019-01-19 16:56:47.526 [localhost-startStop-1] INFO  o.s.boot.web.servlet.ServletRegistrationBean - Mapping servlet: 'dispatcherServlet' to [/]
2019-01-19 16:56:47.534 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-19 16:56:47.534 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-19 16:56:47.535 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-19 16:56:47.535 [localhost-startStop-1] INFO  o.s.boot.web.servlet.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
2019-01-19 16:56:48.476 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@27216cd: startup date [Sat Jan 19 16:56:45 CST 2019]; root of context hierarchy
2019-01-19 16:56:48.557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productList]}" onto public java.lang.String com.yun.product.controller.ProductController.productList(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-01-19 16:56:48.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productPreAdd]}" onto public java.lang.String com.yun.product.controller.ProductController.productPreAdd()
2019-01-19 16:56:48.558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productSave]}" onto public java.lang.String com.yun.product.controller.ProductController.productSave(com.yun.product.model.Product)
2019-01-19 16:56:48.559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeTree]}" onto public java.util.List<com.yun.product.model.ProductType> com.yun.product.controller.ProductTypeController.productTypeTree()
2019-01-19 16:56:48.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeSave(com.yun.product.model.ProductType)
2019-01-19 16:56:48.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeList]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeList(org.springframework.ui.Model)
2019-01-19 16:56:48.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeEdit]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeEdit()
2019-01-19 16:56:48.560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdate]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdate(java.lang.Integer,org.springframework.ui.Model)
2019-01-19 16:56:48.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeUpdateSave]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeUpdateSave(com.yun.product.model.ProductType)
2019-01-19 16:56:48.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/productTypeDelete]}" onto public java.lang.String com.yun.product.controller.ProductTypeController.productTypeDelete(java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-01-19 16:56:48.561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/main]}" onto public java.lang.String com.yun.user.controller.MainController.main()
2019-01-19 16:56:48.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userList]}" onto public java.lang.String com.yun.user.controller.UserController.userList(org.springframework.ui.Model)
2019-01-19 16:56:48.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login]}" onto public java.lang.String com.yun.user.controller.UserController.login(java.lang.String,java.lang.String,javax.servlet.http.HttpSession)
2019-01-19 16:56:48.562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userEdit]}" onto public java.lang.String com.yun.user.controller.UserController.userEdit()
2019-01-19 16:56:48.563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/userSave]}" onto public java.lang.String com.yun.user.controller.UserController.userSave(com.yun.user.model.UserInfo)
2019-01-19 16:56:48.568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-01-19 16:56:48.569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-19 16:56:48.620 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:56:48.621 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:56:48.680 [main] INFO  o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-19 16:56:49.104 [main] INFO  o.s.b.a.w.WebMvcAutoConfiguration$WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2019-01-19 16:56:49.522 [main] INFO  o.s.jmx.export.annotation.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
2019-01-19 16:56:49.545 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2019-01-19 16:56:49.559 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2019-01-19 16:56:49.575 [main] INFO  org.apache.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
2019-01-19 16:56:49.599 [main] INFO  o.s.b.c.e.tomcat.TomcatEmbeddedServletContainer - Tomcat started on port(s): 8080 (http)
2019-01-19 16:56:49.605 [main] INFO  com.yun.YunEbStockApplication - Started YunEbStockApplication in 5.297 seconds (JVM running for 6.876)
2019-01-19 16:56:52.852 [http-nio-8080-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-19 16:56:52.852 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
2019-01-19 16:56:52.878 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019-01-19 16:56:55.094 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:56:55.115 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:56:55.129 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:56:55.140 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:56:55.141 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:56:55.144 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:56:59.024 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:56:59.025 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:56:59.029 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:56:59.034 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:56:59.035 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:56:59.039 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:57:00.763 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:57:00.765 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:57:00.769 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:57:00.775 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:57:00.776 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:57:00.778 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:57:01.425 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:57:01.426 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:57:01.430 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:57:01.434 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:57:01.436 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:57:01.444 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:57:02.333 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:57:02.335 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:57:02.338 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:57:02.345 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:57:02.346 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:57:02.351 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:57:08.055 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:57:08.056 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:57:08.062 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:57:08.069 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:57:08.070 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:57:08.074 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:57:17.303 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:57:17.304 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:57:17.306 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:57:17.311 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:57:17.312 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:57:17.319 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:58:39.972 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:58:39.974 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:58:39.978 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:58:39.985 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:58:39.988 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:58:39.992 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:58:42.694 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ?
2019-01-19 16:58:42.696 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %a%(String)
2019-01-19 16:58:42.699 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:58:42.706 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? order by prod_id limit ?,?
2019-01-19 16:58:42.708 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String), 0(Integer), 5(Integer)
2019-01-19 16:58:42.711 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 16:58:46.325 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:58:46.326 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:58:46.331 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:58:46.342 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:58:46.343 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:58:46.344 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:58:51.876 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? and p.prod_no like ?
2019-01-19 16:58:51.877 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %a%(String), %3%(String)
2019-01-19 16:58:51.878 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:58:51.880 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? and p.prod_no like ? order by prod_id limit ?,?
2019-01-19 16:58:51.880 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String), %3%(String), 0(Integer), 5(Integer)
2019-01-19 16:58:51.881 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 16:58:56.414 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_no like ?
2019-01-19 16:58:56.416 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %33%(String)
2019-01-19 16:58:56.422 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:58:56.426 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_no like ? order by prod_id limit ?,?
2019-01-19 16:58:56.427 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %33%(String), 0(Integer), 5(Integer)
2019-01-19 16:58:56.429 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 0
2019-01-19 16:58:58.375 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_no like ?
2019-01-19 16:58:58.376 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %3%(String)
2019-01-19 16:58:58.378 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:58:58.382 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_no like ? order by prod_id limit ?,?
2019-01-19 16:58:58.383 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %3%(String), 0(Integer), 5(Integer)
2019-01-19 16:58:58.385 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 2
2019-01-19 16:59:04.017 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:59:04.018 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:59:04.020 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:59:04.026 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:59:04.027 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:59:04.029 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:59:06.794 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and pt.prod_type_name like ?
2019-01-19 16:59:06.799 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %b%(String)
2019-01-19 16:59:06.826 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:59:06.829 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and pt.prod_type_name like ? order by prod_id limit ?,?
2019-01-19 16:59:06.830 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %b%(String), 0(Integer), 5(Integer)
2019-01-19 16:59:06.832 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 16:59:14.684 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:59:14.686 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:59:14.688 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:59:14.694 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:59:14.695 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:59:14.698 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:59:16.352 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:59:16.353 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:59:16.356 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:59:16.360 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:59:16.361 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:59:16.365 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:59:17.422 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:59:17.422 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:59:17.424 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:59:17.427 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:59:17.427 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:59:17.429 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 16:59:18.167 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 16:59:18.168 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 16:59:18.172 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 16:59:18.176 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 16:59:18.177 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 16:59:18.179 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:00:35.729 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:00:35.730 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:00:35.733 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:00:35.739 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:00:35.740 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:00:35.746 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:00:40.724 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:00:40.725 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:00:40.728 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:00:40.734 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:00:40.734 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:00:40.736 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:00:41.717 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:00:41.718 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:00:41.721 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:00:41.725 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:00:41.726 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:00:41.728 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:00:42.835 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:00:42.836 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:00:42.838 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:00:42.843 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:00:42.844 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:00:42.847 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:00:49.075 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ?
2019-01-19 17:00:49.076 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %a%(String)
2019-01-19 17:00:49.077 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:00:49.084 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? order by prod_id limit ?,?
2019-01-19 17:00:49.085 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String), 0(Integer), 5(Integer)
2019-01-19 17:00:49.087 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 17:00:56.425 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:00:56.426 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:00:56.428 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:00:56.435 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:00:56.436 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:00:56.440 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:02:10.331 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:02:10.332 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:02:10.334 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:02:10.341 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:02:10.342 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:02:10.343 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:06:30.422 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:06:30.423 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:06:30.426 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:06:30.432 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:06:30.432 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:06:30.435 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:06:34.925 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:06:34.926 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:06:34.929 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:06:34.936 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:06:34.937 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:06:34.942 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:06:38.556 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ?
2019-01-19 17:06:38.557 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %a%(String)
2019-01-19 17:06:38.559 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:06:38.566 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? order by prod_id limit ?,?
2019-01-19 17:06:38.566 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String), 0(Integer), 5(Integer)
2019-01-19 17:06:38.569 [http-nio-8080-exec-2] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 17:06:39.877 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ?
2019-01-19 17:06:39.878 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %a%(String)
2019-01-19 17:06:39.882 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:06:39.889 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? order by prod_id limit ?,?
2019-01-19 17:06:39.890 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String), 0(Integer), 5(Integer)
2019-01-19 17:06:39.893 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 17:06:41.539 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ?
2019-01-19 17:06:41.540 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters: %a%(String)
2019-01-19 17:06:41.543 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:06:41.546 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 and p.prod_name like ? order by prod_id limit ?,?
2019-01-19 17:06:41.546 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: %a%(String), 0(Integer), 5(Integer)
2019-01-19 17:06:41.548 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 1
2019-01-19 17:06:47.022 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:06:47.023 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:06:47.027 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:06:47.033 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:06:47.035 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:06:47.037 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:10:45.020 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:10:45.096 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:10:45.096 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:10:45.101 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:10:45.102 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:10:45.104 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:10:45.104 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:10:45.106 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:10:45.107 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:10:45.107 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:10:45.108 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:10:45.109 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:10:45.109 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:10:45.109 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:10:45.110 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:10:45.111 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:10:45.113 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:10:45.113 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:10:45.113 [http-nio-8080-exec-10] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:10:46.609 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:10:46.610 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:10:46.612 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:10:46.615 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:10:46.615 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:10:46.617 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:12:39.865 [http-nio-8080-exec-2] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==>  Preparing: select * from user_info 
2019-01-19 17:12:39.865 [http-nio-8080-exec-2] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - ==> Parameters: 
2019-01-19 17:12:39.868 [http-nio-8080-exec-2] DEBUG com.yun.user.dao.UserInfoDao.findUserInfoList - <==      Total: 5
2019-01-19 17:12:45.472 [http-nio-8080-exec-8] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:12:45.533 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:12:45.534 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:12:45.535 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:12:45.535 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:12:45.537 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:12:45.538 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:12:45.540 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:12:45.541 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:12:45.541 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:12:45.542 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:12:45.542 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:12:45.543 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:12:45.543 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:12:45.545 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:12:45.546 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:12:45.547 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:12:45.548 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:12:45.548 [http-nio-8080-exec-6] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:12:46.654 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:12:46.655 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:12:46.657 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:12:46.662 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:12:46.662 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:12:46.664 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:13:19.904 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:13:19.965 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:13:19.965 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:13:19.967 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:13:19.967 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:13:19.969 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:13:19.970 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:13:19.971 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:13:19.972 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:13:19.973 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:13:19.975 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:13:19.976 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:13:19.976 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:13:19.977 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:13:19.980 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:13:19.980 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:13:19.981 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:13:19.981 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:13:19.981 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:13:20.703 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:13:20.703 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:13:20.705 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:13:20.709 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:13:20.710 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:13:20.713 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:14:56.933 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:14:56.999 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:14:57.000 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:14:57.001 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:14:57.003 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:14:57.009 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:14:57.010 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:14:57.011 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:14:57.012 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:14:57.012 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:14:57.013 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:14:57.013 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:14:57.014 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:14:57.014 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:14:57.015 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:14:57.015 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:14:57.016 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:14:57.016 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:14:57.016 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:15:15.604 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:15:15.669 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:15.670 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:15:15.671 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:15.671 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:15:15.672 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:15.673 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:15:15.674 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:15:15.674 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:15.675 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:15:15.676 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:15:15.676 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:15:15.676 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:15.677 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:15:15.678 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:15.678 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:15:15.678 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:15:15.678 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:15:15.678 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:15:16.677 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:15:16.678 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:15:16.680 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:15:16.689 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:15:16.690 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:15:16.693 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:15:35.367 [http-nio-8080-exec-3] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:15:35.437 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:35.441 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:15:35.444 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:35.444 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:15:35.446 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:35.446 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:15:35.447 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:15:35.449 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:35.450 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:15:35.451 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:15:35.451 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:15:35.451 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:35.451 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:15:35.452 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:15:35.453 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:15:35.454 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:15:35.454 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:15:35.454 [http-nio-8080-exec-4] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:15:38.393 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:15:38.394 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:15:38.394 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:15:38.396 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:15:38.396 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:15:38.399 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:15:45.232 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:15:45.233 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:15:45.234 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:15:45.239 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:15:45.240 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:15:45.242 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:15:49.077 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:15:49.078 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:15:49.079 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:15:49.086 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:15:49.086 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:15:49.088 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:16:18.899 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:16:18.967 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:16:18.967 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:16:18.969 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:16:18.969 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:16:18.971 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:16:18.971 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:16:18.973 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:16:18.973 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:16:18.973 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:16:18.976 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:16:18.977 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:16:18.977 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:16:18.977 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:16:18.979 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:16:18.979 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:16:18.980 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:16:18.981 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:16:18.981 [http-nio-8080-exec-1] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:16:20.812 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:16:20.813 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:16:20.814 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:16:20.818 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:16:20.818 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:16:20.820 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:16:23.774 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:16:23.775 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:16:23.777 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:16:23.782 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:16:23.782 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:16:23.784 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:16:38.298 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:16:38.298 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:16:38.300 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:16:38.303 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:16:38.304 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:16:38.305 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:16:54.054 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:16:54.055 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:16:54.059 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:16:54.067 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:16:54.067 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:16:54.070 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:16:58.599 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:16:58.599 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:16:58.600 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:16:58.602 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:16:58.602 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:16:58.603 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:17:02.467 [http-nio-8080-exec-4] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:17:02.529 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:02.529 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:17:02.530 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:02.531 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:17:02.532 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:02.532 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:17:02.533 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:17:02.534 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:02.534 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:17:02.536 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:17:02.536 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:17:02.537 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:02.537 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:17:02.539 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:02.540 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:17:02.542 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:17:02.542 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:17:02.543 [http-nio-8080-exec-9] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:17:05.313 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:17:05.314 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:17:05.317 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:17:05.324 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:17:05.325 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:17:05.328 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:17:08.413 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:17:08.414 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:17:08.418 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:17:08.423 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:17:08.423 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:17:08.424 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:17:18.706 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:17:18.706 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:17:18.707 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:17:18.710 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:17:18.710 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:17:18.711 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:17:29.507 [http-nio-8080-exec-10] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:17:29.571 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:29.572 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:17:29.574 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:29.575 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:17:29.577 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:29.577 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:17:29.578 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:17:29.579 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:29.579 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:17:29.579 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:17:29.580 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:17:29.580 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:29.580 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:17:29.581 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:17:29.581 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:17:29.581 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:17:29.581 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:17:29.582 [http-nio-8080-exec-2] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:17:36.857 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:17:36.858 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:17:36.861 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:17:36.864 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:17:36.864 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:17:36.865 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:18:54.638 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:18:54.639 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:18:54.640 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:18:54.645 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:18:54.646 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:18:54.648 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:19:15.463 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:19:15.464 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:19:15.467 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:19:15.472 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:19:15.472 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:19:15.474 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:19:43.122 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:19:43.123 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:19:43.125 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:19:43.131 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:19:43.132 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:19:43.133 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:20:23.203 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:20:23.204 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:20:23.206 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:20:23.212 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:20:23.213 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:20:23.214 [http-nio-8080-exec-6] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:20:52.252 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:20:52.252 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:20:52.254 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:20:52.258 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:20:52.258 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:20:52.260 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:20:58.147 [http-nio-8080-exec-6] INFO  com.yun.product.controller.ProductTypeController - 跳转到stock/productTypeList.html页面
2019-01-19 17:20:58.208 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:20:58.209 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:20:58.209 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:20:58.210 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:20:58.211 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:20:58.211 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:20:58.212 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:20:58.213 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:20:58.213 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:20:58.214 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:20:58.215 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:20:58.215 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:20:58.215 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:20:58.218 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:20:58.218 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:20:58.220 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:20:58.220 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:20:58.220 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:20:59.128 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:20:59.128 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:20:59.133 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:20:59.137 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:20:59.138 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:20:59.140 [http-nio-8080-exec-8] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:21:06.781 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:21:06.782 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:21:06.784 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:21:06.790 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:21:06.791 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:21:06.797 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 4
2019-01-19 17:21:11.072 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:21:11.072 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:21:11.073 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:21:11.074 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:21:11.075 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:21:11.075 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:21:11.076 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:21:11.076 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:21:11.076 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:21:11.078 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:21:11.078 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:21:11.078 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:21:11.078 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:21:11.080 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:21:11.080 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:21:11.082 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:21:11.083 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:21:11.083 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:21:13.425 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id) values(?,?,?)
2019-01-19 17:21:13.428 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: 232(String), 2(String), 31(Integer)
2019-01-19 17:21:13.466 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-19 17:21:13.532 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:21:13.532 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:21:13.534 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:21:13.537 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:21:13.537 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:21:13.539 [http-nio-8080-exec-10] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:21:43.281 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:21:43.282 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:21:43.283 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:21:43.286 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:21:43.286 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:21:43.288 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:21:57.993 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:21:57.994 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:21:57.996 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:21:58.000 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:21:58.000 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:21:58.002 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:22:11.493 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:22:11.494 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:22:11.497 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:22:11.503 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:22:11.504 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:22:11.507 [http-nio-8080-exec-4] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:22:21.034 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:22:21.035 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ==> Parameters: 0(Integer)
2019-01-19 17:22:21.036 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:22:21.037 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 29(Integer)
2019-01-19 17:22:21.039 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:22:21.039 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 30(Integer)
2019-01-19 17:22:21.041 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:22:21.041 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:22:21.042 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 31(Integer)
2019-01-19 17:22:21.044 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:22:21.044 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 2
2019-01-19 17:22:21.044 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:22:21.045 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ====> Parameters: 38(Integer)
2019-01-19 17:22:21.050 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======>  Preparing: select p1.prod_type_id,p1.prod_type_name,p1.parent_id,p2.prod_type_id parent_type_id,p2.prod_type_name parent_type_name from product_type p1 LEFT JOIN product_type p2 on p1.parent_id=p2.prod_type_id where p1.parent_id=? 
2019-01-19 17:22:21.050 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - ======> Parameters: 39(Integer)
2019-01-19 17:22:21.052 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <======      Total: 0
2019-01-19 17:22:21.053 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <====      Total: 1
2019-01-19 17:22:21.053 [http-nio-8080-exec-3] DEBUG c.yun.stock.dao.ProductTypeDao.findProductTypeRoot - <==      Total: 2
2019-01-19 17:22:23.579 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==>  Preparing: insert into product(prod_name,prod_no,prod_type_id) values(?,?,?)
2019-01-19 17:22:23.580 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.insertProduct - ==> Parameters: asdasd(String), 23(String), 39(Integer)
2019-01-19 17:22:23.611 [http-nio-8080-exec-7] DEBUG com.yun.product.dao.ProductDao.insertProduct - <==    Updates: 1
2019-01-19 17:22:23.724 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:22:23.724 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:22:23.725 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:22:23.728 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:22:23.728 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:22:23.729 [http-nio-8080-exec-9] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:22:27.939 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:22:27.940 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:22:27.942 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:22:27.948 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:22:27.949 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:22:27.954 [http-nio-8080-exec-5] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:26:55.525 [http-nio-8080-exec-8] INFO  org.apache.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:476)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:687)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 17:26:58.819 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:26:58.820 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:26:58.824 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:26:58.827 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:26:58.827 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:26:58.829 [http-nio-8080-exec-3] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:26:58.845 [http-nio-8080-exec-3] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-3] Exception processing template "stock/productList": Could not parse as expression: "gotoPage('${page.pageNo-1}')" (stock/productList)
2019-01-19 17:26:58.848 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "gotoPage('${page.pageNo-1}')" (stock/productList)] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "gotoPage('${page.pageNo-1}')" (stock/productList)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:238)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:79)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:40)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:80)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-01-19 17:27:00.158 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==>  Preparing: select count(*) from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1
2019-01-19 17:27:00.159 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - ==> Parameters:
2019-01-19 17:27:00.161 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductRowByParam - <==      Total: 1
2019-01-19 17:27:00.167 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==>  Preparing: select * from product p left join product_type pt on p.prod_type_id=pt.prod_type_id where 1=1 order by prod_id limit ?,?
2019-01-19 17:27:00.168 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - ==> Parameters: 0(Integer), 5(Integer)
2019-01-19 17:27:00.171 [http-nio-8080-exec-1] DEBUG com.yun.product.dao.ProductDao.findProductByParam - <==      Total: 5
2019-01-19 17:27:00.180 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "stock/productList": Could not parse as expression: "gotoPage('${page.pageNo-1}')" (stock/productList)
2019-01-19 17:27:00.181 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "gotoPage('${page.pageNo-1}')" (stock/productList)] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "gotoPage('${page.pageNo-1}')" (stock/productList)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:238)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:79)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:40)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:80)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
